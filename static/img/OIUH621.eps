%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1410.i039.023.S.m004.c11.data icons flat line.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: IvAN
%%CreationDate: 10/29/2014
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-10-29T15:38+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-10-29T15:38+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-10-29T15:38+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYqh&#xA;tUtXvNMu7RCFe4hkiVm6AuhUE0+eKu0u1ez0y0tHIZ7eGOJmXoSiBSRX5YqicVdirsVdirsVdiqG&#xA;1S1e80y7tEIV7iGSJWboC6FQTT54q7S7V7PTLS0chnt4Y4mZehKIFJFfliqJxV2KuxV2KuxV2Kob&#xA;VLV7zTLu0QhXuIZIlZugLoVBNPnirtLtXs9MtLRyGe3hjiZl6EogUkV+WKonFXYq7FXYq7FXYq7F&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:eab72368-1c58-f349-ad4b-2587fafcbcb0</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:eab72368-1c58-f349-ad4b-2587fafcbcb0</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:d11dc59c-72a7-ff4b-9e0a-dd08a43de779</stRef:instanceID>
            <stRef:documentID>xmp.did:d11dc59c-72a7-ff4b-9e0a-dd08a43de779</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d11dc59c-72a7-ff4b-9e0a-dd08a43de779</stEvt:instanceID>
                  <stEvt:when>2014-10-29T16:15:47+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:eab72368-1c58-f349-ad4b-2587fafcbcb0</stEvt:instanceID>
                  <stEvt:when>2014-10-29T15:38+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
113 8 mo
112 8 li
112 0 li
113 0 li
113 8 li
cp
113 24 mo
112 24 li
112 16 li
113 16 li
113 24 li
cp
113 40 mo
112 40 li
112 32 li
113 32 li
113 40 li
cp
113 56 mo
112 56 li
112 48 li
113 48 li
113 56 li
cp
113 72 mo
112 72 li
112 64 li
113 64 li
113 72 li
cp
113 88 mo
112 88 li
112 80 li
113 80 li
113 88 li
cp
113 104 mo
112 104 li
112 96 li
113 96 li
113 104 li
cp
113 120 mo
112 120 li
112 112 li
113 112 li
113 120 li
cp
113 136 mo
112 136 li
112 128 li
113 128 li
113 136 li
cp
113 152 mo
112 152 li
112 144 li
113 144 li
113 152 li
cp
113 168 mo
112 168 li
112 160 li
113 160 li
113 168 li
cp
113 184 mo
112 184 li
112 176 li
113 176 li
113 184 li
cp
113 200 mo
112 200 li
112 192 li
113 192 li
113 200 li
cp
113 216 mo
112 216 li
112 208 li
113 208 li
113 216 li
cp
113 232 mo
112 232 li
112 224 li
113 224 li
113 232 li
cp
113 248 mo
112 248 li
112 240 li
113 240 li
113 248 li
cp
113 264 mo
112 264 li
112 256 li
113 256 li
113 264 li
cp
113 280 mo
112 280 li
112 272 li
113 272 li
113 280 li
cp
113 296 mo
112 296 li
112 288 li
113 288 li
113 296 li
cp
113 312 mo
112 312 li
112 304 li
113 304 li
113 312 li
cp
113 328 mo
112 328 li
112 320 li
113 320 li
113 328 li
cp
113 344 mo
112 344 li
112 336 li
113 336 li
113 344 li
cp
113 360 mo
112 360 li
112 352 li
113 352 li
113 360 li
cp
113 376 mo
112 376 li
112 368 li
113 368 li
113 376 li
cp
113 392 mo
112 392 li
112 384 li
113 384 li
113 392 li
cp
113 408 mo
112 408 li
112 400 li
113 400 li
113 408 li
cp
113 424 mo
112 424 li
112 416 li
113 416 li
113 424 li
cp
113 440 mo
112 440 li
112 432 li
113 432 li
113 440 li
cp
113 450 mo
112 450 li
112 448 li
113 448 li
113 450 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.223529 .235294 .254902 rgb
f
225.5 8 mo
224.5 8 li
224.5 0 li
225.5 0 li
225.5 8 li
cp
225.5 24 mo
224.5 24 li
224.5 16 li
225.5 16 li
225.5 24 li
cp
225.5 40 mo
224.5 40 li
224.5 32 li
225.5 32 li
225.5 40 li
cp
225.5 56 mo
224.5 56 li
224.5 48 li
225.5 48 li
225.5 56 li
cp
225.5 72 mo
224.5 72 li
224.5 64 li
225.5 64 li
225.5 72 li
cp
225.5 88 mo
224.5 88 li
224.5 80 li
225.5 80 li
225.5 88 li
cp
225.5 104 mo
224.5 104 li
224.5 96 li
225.5 96 li
225.5 104 li
cp
225.5 120 mo
224.5 120 li
224.5 112 li
225.5 112 li
225.5 120 li
cp
225.5 136 mo
224.5 136 li
224.5 128 li
225.5 128 li
225.5 136 li
cp
225.5 152 mo
224.5 152 li
224.5 144 li
225.5 144 li
225.5 152 li
cp
225.5 168 mo
224.5 168 li
224.5 160 li
225.5 160 li
225.5 168 li
cp
225.5 184 mo
224.5 184 li
224.5 176 li
225.5 176 li
225.5 184 li
cp
225.5 200 mo
224.5 200 li
224.5 192 li
225.5 192 li
225.5 200 li
cp
225.5 216 mo
224.5 216 li
224.5 208 li
225.5 208 li
225.5 216 li
cp
225.5 232 mo
224.5 232 li
224.5 224 li
225.5 224 li
225.5 232 li
cp
225.5 248 mo
224.5 248 li
224.5 240 li
225.5 240 li
225.5 248 li
cp
225.5 264 mo
224.5 264 li
224.5 256 li
225.5 256 li
225.5 264 li
cp
225.5 280 mo
224.5 280 li
224.5 272 li
225.5 272 li
225.5 280 li
cp
225.5 296 mo
224.5 296 li
224.5 288 li
225.5 288 li
225.5 296 li
cp
225.5 312 mo
224.5 312 li
224.5 304 li
225.5 304 li
225.5 312 li
cp
225.5 328 mo
224.5 328 li
224.5 320 li
225.5 320 li
225.5 328 li
cp
225.5 344 mo
224.5 344 li
224.5 336 li
225.5 336 li
225.5 344 li
cp
225.5 360 mo
224.5 360 li
224.5 352 li
225.5 352 li
225.5 360 li
cp
225.5 376 mo
224.5 376 li
224.5 368 li
225.5 368 li
225.5 376 li
cp
225.5 392 mo
224.5 392 li
224.5 384 li
225.5 384 li
225.5 392 li
cp
225.5 408 mo
224.5 408 li
224.5 400 li
225.5 400 li
225.5 408 li
cp
225.5 424 mo
224.5 424 li
224.5 416 li
225.5 416 li
225.5 424 li
cp
225.5 440 mo
224.5 440 li
224.5 432 li
225.5 432 li
225.5 440 li
cp
225.5 450 mo
224.5 450 li
224.5 448 li
225.5 448 li
225.5 450 li
cp
f
338 8 mo
337 8 li
337 0 li
338 0 li
338 8 li
cp
338 24 mo
337 24 li
337 16 li
338 16 li
338 24 li
cp
338 40 mo
337 40 li
337 32 li
338 32 li
338 40 li
cp
338 56 mo
337 56 li
337 48 li
338 48 li
338 56 li
cp
338 72 mo
337 72 li
337 64 li
338 64 li
338 72 li
cp
338 88 mo
337 88 li
337 80 li
338 80 li
338 88 li
cp
338 104 mo
337 104 li
337 96 li
338 96 li
338 104 li
cp
338 120 mo
337 120 li
337 112 li
338 112 li
338 120 li
cp
338 136 mo
337 136 li
337 128 li
338 128 li
338 136 li
cp
338 152 mo
337 152 li
337 144 li
338 144 li
338 152 li
cp
338 168 mo
337 168 li
337 160 li
338 160 li
338 168 li
cp
338 184 mo
337 184 li
337 176 li
338 176 li
338 184 li
cp
338 200 mo
337 200 li
337 192 li
338 192 li
338 200 li
cp
338 216 mo
337 216 li
337 208 li
338 208 li
338 216 li
cp
338 232 mo
337 232 li
337 224 li
338 224 li
338 232 li
cp
338 248 mo
337 248 li
337 240 li
338 240 li
338 248 li
cp
338 264 mo
337 264 li
337 256 li
338 256 li
338 264 li
cp
338 280 mo
337 280 li
337 272 li
338 272 li
338 280 li
cp
338 296 mo
337 296 li
337 288 li
338 288 li
338 296 li
cp
338 312 mo
337 312 li
337 304 li
338 304 li
338 312 li
cp
338 328 mo
337 328 li
337 320 li
338 320 li
338 328 li
cp
338 344 mo
337 344 li
337 336 li
338 336 li
338 344 li
cp
338 360 mo
337 360 li
337 352 li
338 352 li
338 360 li
cp
338 376 mo
337 376 li
337 368 li
338 368 li
338 376 li
cp
338 392 mo
337 392 li
337 384 li
338 384 li
338 392 li
cp
338 408 mo
337 408 li
337 400 li
338 400 li
338 408 li
cp
338 424 mo
337 424 li
337 416 li
338 416 li
338 424 li
cp
338 440 mo
337 440 li
337 432 li
338 432 li
338 440 li
cp
338 450 mo
337 450 li
337 448 li
338 448 li
338 450 li
cp
f
2 113 mo
0 113 li
0 112 li
2 112 li
2 113 li
cp
18 113 mo
10 113 li
10 112 li
18 112 li
18 113 li
cp
34 113 mo
26 113 li
26 112 li
34 112 li
34 113 li
cp
50 113 mo
42 113 li
42 112 li
50 112 li
50 113 li
cp
66 113 mo
58 113 li
58 112 li
66 112 li
66 113 li
cp
82 113 mo
74 113 li
74 112 li
82 112 li
82 113 li
cp
98 113 mo
90 113 li
90 112 li
98 112 li
98 113 li
cp
114 113 mo
106 113 li
106 112 li
114 112 li
114 113 li
cp
130 113 mo
122 113 li
122 112 li
130 112 li
130 113 li
cp
146 113 mo
138 113 li
138 112 li
146 112 li
146 113 li
cp
162 113 mo
154 113 li
154 112 li
162 112 li
162 113 li
cp
178 113 mo
170 113 li
170 112 li
178 112 li
178 113 li
cp
194 113 mo
186 113 li
186 112 li
194 112 li
194 113 li
cp
210 113 mo
202 113 li
202 112 li
210 112 li
210 113 li
cp
226 113 mo
218 113 li
218 112 li
226 112 li
226 113 li
cp
242 113 mo
234 113 li
234 112 li
242 112 li
242 113 li
cp
258 113 mo
250 113 li
250 112 li
258 112 li
258 113 li
cp
274 113 mo
266 113 li
266 112 li
274 112 li
274 113 li
cp
290 113 mo
282 113 li
282 112 li
290 112 li
290 113 li
cp
306 113 mo
298 113 li
298 112 li
306 112 li
306 113 li
cp
322 113 mo
314 113 li
314 112 li
322 112 li
322 113 li
cp
338 113 mo
330 113 li
330 112 li
338 112 li
338 113 li
cp
354 113 mo
346 113 li
346 112 li
354 112 li
354 113 li
cp
370 113 mo
362 113 li
362 112 li
370 112 li
370 113 li
cp
386 113 mo
378 113 li
378 112 li
386 112 li
386 113 li
cp
402 113 mo
394 113 li
394 112 li
402 112 li
402 113 li
cp
418 113 mo
410 113 li
410 112 li
418 112 li
418 113 li
cp
434 113 mo
426 113 li
426 112 li
434 112 li
434 113 li
cp
450 113 mo
442 113 li
442 112 li
450 112 li
450 113 li
cp
f
2 225.5 mo
0 225.5 li
0 224.5 li
2 224.5 li
2 225.5 li
cp
18 225.5 mo
10 225.5 li
10 224.5 li
18 224.5 li
18 225.5 li
cp
34 225.5 mo
26 225.5 li
26 224.5 li
34 224.5 li
34 225.5 li
cp
50 225.5 mo
42 225.5 li
42 224.5 li
50 224.5 li
50 225.5 li
cp
66 225.5 mo
58 225.5 li
58 224.5 li
66 224.5 li
66 225.5 li
cp
82 225.5 mo
74 225.5 li
74 224.5 li
82 224.5 li
82 225.5 li
cp
98 225.5 mo
90 225.5 li
90 224.5 li
98 224.5 li
98 225.5 li
cp
114 225.5 mo
106 225.5 li
106 224.5 li
114 224.5 li
114 225.5 li
cp
130 225.5 mo
122 225.5 li
122 224.5 li
130 224.5 li
130 225.5 li
cp
146 225.5 mo
138 225.5 li
138 224.5 li
146 224.5 li
146 225.5 li
cp
162 225.5 mo
154 225.5 li
154 224.5 li
162 224.5 li
162 225.5 li
cp
178 225.5 mo
170 225.5 li
170 224.5 li
178 224.5 li
178 225.5 li
cp
194 225.5 mo
186 225.5 li
186 224.5 li
194 224.5 li
194 225.5 li
cp
210 225.5 mo
202 225.5 li
202 224.5 li
210 224.5 li
210 225.5 li
cp
226 225.5 mo
218 225.5 li
218 224.5 li
226 224.5 li
226 225.5 li
cp
242 225.5 mo
234 225.5 li
234 224.5 li
242 224.5 li
242 225.5 li
cp
258 225.5 mo
250 225.5 li
250 224.5 li
258 224.5 li
258 225.5 li
cp
274 225.5 mo
266 225.5 li
266 224.5 li
274 224.5 li
274 225.5 li
cp
290 225.5 mo
282 225.5 li
282 224.5 li
290 224.5 li
290 225.5 li
cp
306 225.5 mo
298 225.5 li
298 224.5 li
306 224.5 li
306 225.5 li
cp
322 225.5 mo
314 225.5 li
314 224.5 li
322 224.5 li
322 225.5 li
cp
338 225.5 mo
330 225.5 li
330 224.5 li
338 224.5 li
338 225.5 li
cp
354 225.5 mo
346 225.5 li
346 224.5 li
354 224.5 li
354 225.5 li
cp
370 225.5 mo
362 225.5 li
362 224.5 li
370 224.5 li
370 225.5 li
cp
386 225.5 mo
378 225.5 li
378 224.5 li
386 224.5 li
386 225.5 li
cp
402 225.5 mo
394 225.5 li
394 224.5 li
402 224.5 li
402 225.5 li
cp
418 225.5 mo
410 225.5 li
410 224.5 li
418 224.5 li
418 225.5 li
cp
434 225.5 mo
426 225.5 li
426 224.5 li
434 224.5 li
434 225.5 li
cp
450 225.5 mo
442 225.5 li
442 224.5 li
450 224.5 li
450 225.5 li
cp
f
2 338 mo
0 338 li
0 337 li
2 337 li
2 338 li
cp
18 338 mo
10 338 li
10 337 li
18 337 li
18 338 li
cp
34 338 mo
26 338 li
26 337 li
34 337 li
34 338 li
cp
50 338 mo
42 338 li
42 337 li
50 337 li
50 338 li
cp
66 338 mo
58 338 li
58 337 li
66 337 li
66 338 li
cp
82 338 mo
74 338 li
74 337 li
82 337 li
82 338 li
cp
98 338 mo
90 338 li
90 337 li
98 337 li
98 338 li
cp
114 338 mo
106 338 li
106 337 li
114 337 li
114 338 li
cp
130 338 mo
122 338 li
122 337 li
130 337 li
130 338 li
cp
146 338 mo
138 338 li
138 337 li
146 337 li
146 338 li
cp
162 338 mo
154 338 li
154 337 li
162 337 li
162 338 li
cp
178 338 mo
170 338 li
170 337 li
178 337 li
178 338 li
cp
194 338 mo
186 338 li
186 337 li
194 337 li
194 338 li
cp
210 338 mo
202 338 li
202 337 li
210 337 li
210 338 li
cp
226 338 mo
218 338 li
218 337 li
226 337 li
226 338 li
cp
242 338 mo
234 338 li
234 337 li
242 337 li
242 338 li
cp
258 338 mo
250 338 li
250 337 li
258 337 li
258 338 li
cp
274 338 mo
266 338 li
266 337 li
274 337 li
274 338 li
cp
290 338 mo
282 338 li
282 337 li
290 337 li
290 338 li
cp
306 338 mo
298 338 li
298 337 li
306 337 li
306 338 li
cp
322 338 mo
314 338 li
314 337 li
322 337 li
322 338 li
cp
338 338 mo
330 338 li
330 337 li
338 337 li
338 338 li
cp
354 338 mo
346 338 li
346 337 li
354 337 li
354 338 li
cp
370 338 mo
362 338 li
362 337 li
370 337 li
370 338 li
cp
386 338 mo
378 338 li
378 337 li
386 337 li
386 338 li
cp
402 338 mo
394 338 li
394 337 li
402 337 li
402 338 li
cp
418 338 mo
410 338 li
410 337 li
418 337 li
418 338 li
cp
434 338 mo
426 338 li
426 337 li
434 337 li
434 338 li
cp
450 338 mo
442 338 li
442 337 li
450 337 li
450 338 li
cp
f
23.4009 65.2018 mo
20.4009 65.2018 li
20.4009 64.2018 li
23.4009 64.2018 li
23.4009 65.2018 li
cp
29.4009 65.2018 mo
26.4009 65.2018 li
26.4009 64.2018 li
29.4009 64.2018 li
29.4009 65.2018 li
cp
35.4009 65.2018 mo
32.4009 65.2018 li
32.4009 64.2018 li
35.4009 64.2018 li
35.4009 65.2018 li
cp
41.4009 65.2018 mo
38.4009 65.2018 li
38.4009 64.2018 li
41.4009 64.2018 li
41.4009 65.2018 li
cp
47.4009 65.2018 mo
44.4009 65.2018 li
44.4009 64.2018 li
47.4009 64.2018 li
47.4009 65.2018 li
cp
53.4009 65.2018 mo
50.4009 65.2018 li
50.4009 64.2018 li
53.4009 64.2018 li
53.4009 65.2018 li
cp
59.4009 65.2018 mo
56.4009 65.2018 li
56.4009 64.2018 li
59.4009 64.2018 li
59.4009 65.2018 li
cp
65.4009 65.2018 mo
62.4009 65.2018 li
62.4009 64.2018 li
65.4009 64.2018 li
65.4009 65.2018 li
cp
71.4009 65.2018 mo
68.4009 65.2018 li
68.4009 64.2018 li
71.4009 64.2018 li
71.4009 65.2018 li
cp
77.4009 65.2018 mo
74.4009 65.2018 li
74.4009 64.2018 li
77.4009 64.2018 li
77.4009 65.2018 li
cp
83.4009 65.2018 mo
80.4009 65.2018 li
80.4009 64.2018 li
83.4009 64.2018 li
83.4009 65.2018 li
cp
89.4009 65.2018 mo
86.4009 65.2018 li
86.4009 64.2018 li
89.4009 64.2018 li
89.4009 65.2018 li
cp
90.397 67.1617 mo
89.7183 66.4273 li
91.9204 64.3897 li
92.5991 65.1241 li
90.397 67.1617 li
cp
24 68.962 mo
21.7984 66.9244 li
22.4781 66.19 li
24.6797 68.2276 li
24 68.962 li
cp
85.9932 71.2369 mo
85.3145 70.5025 li
87.5166 68.4649 li
88.1953 69.1993 li
85.9932 71.2369 li
cp
28.4038 73.0372 mo
26.2022 70.9996 li
26.8819 70.2652 li
29.0835 72.3028 li
28.4038 73.0372 li
cp
81.5894 75.3121 mo
80.9107 74.5777 li
83.1128 72.5401 li
83.7915 73.2745 li
81.5894 75.3121 li
cp
32.8076 77.1124 mo
30.606 75.0748 li
31.2857 74.3404 li
33.4873 76.378 li
32.8076 77.1124 li
cp
77.1866 79.3873 mo
76.5069 78.6529 li
78.7085 76.6153 li
79.3882 77.3497 li
77.1866 79.3873 li
cp
37.2119 81.1876 mo
35.0098 79.15 li
35.6885 78.4156 li
37.8907 80.4532 li
37.2119 81.1876 li
cp
72.7827 83.4625 mo
72.1031 82.7281 li
74.3047 80.6905 li
74.9844 81.4249 li
72.7827 83.4625 li
cp
41.6158 85.2628 mo
39.4136 83.2252 li
40.0923 82.4908 li
42.2945 84.5284 li
41.6158 85.2628 li
cp
68.3789 87.5377 mo
67.6992 86.8033 li
69.9009 84.7657 li
70.5806 85.5001 li
68.3789 87.5377 li
cp
46.0196 89.338 mo
43.8174 87.3004 li
44.4961 86.566 li
46.6983 88.6036 li
46.0196 89.338 li
cp
51.4678 91.7457 mo
48.6216 91.7457 li
48.2212 91.3756 li
48.8999 90.6412 li
49.0132 90.7457 li
51.4678 90.7457 li
51.4678 91.7457 li
cp
57.4678 91.7457 mo
54.4678 91.7457 li
54.4678 90.7457 li
57.4678 90.7457 li
57.4678 91.7457 li
cp
63.4678 91.7457 mo
60.4678 91.7457 li
60.4678 90.7457 li
63.4395 90.7457 li
65.4971 88.8409 li
66.1768 89.5753 li
63.9751 91.6129 li
63.4678 91.0645 li
63.4678 91.7457 li
cp
f
34.0911 25.8464 mo
31.0911 25.8464 li
31.0911 24.8464 li
34.0911 24.8464 li
34.0911 25.8464 li
cp
40.0911 25.8464 mo
37.0911 25.8464 li
37.0911 24.8464 li
40.0911 24.8464 li
40.0911 25.8464 li
cp
46.0911 25.8464 mo
43.0911 25.8464 li
43.0911 24.8464 li
46.0911 24.8464 li
46.0911 25.8464 li
cp
52.0911 25.8464 mo
49.0911 25.8464 li
49.0911 24.8464 li
52.0911 24.8464 li
52.0911 25.8464 li
cp
58.0911 25.8464 mo
55.0911 25.8464 li
55.0911 24.8464 li
58.0911 24.8464 li
58.0911 25.8464 li
cp
64.0911 25.8464 mo
61.0911 25.8464 li
61.0911 24.8464 li
64.0911 24.8464 li
64.0911 25.8464 li
cp
70.0911 25.8464 mo
67.0911 25.8464 li
67.0911 24.8464 li
70.0911 24.8464 li
70.0911 25.8464 li
cp
76.0911 25.8464 mo
73.0911 25.8464 li
73.0911 24.8464 li
76.0911 24.8464 li
76.0911 25.8464 li
cp
82.0911 25.8464 mo
79.0911 25.8464 li
79.0911 24.8464 li
82.0911 24.8464 li
82.0911 25.8464 li
cp
f
15.5805 54.948 mo
15.5805 60.3058 li
15.5805 64.7398 22.9784 68.3384 32.1085 68.3384 cv
41.236 68.3384 48.6327 64.7398 48.6327 60.3058 cv
48.6327 54.948 li
15.5805 54.948 li
cp
.992157 .721569 .0745098 rgb
f
16.0806 55.4482 mo
16.0806 60.3057 li
16.0806 64.3887 23.4204 67.8384 32.1084 67.8384 cv
40.7944 67.8384 48.1328 64.3887 48.1328 60.3057 cv
48.1328 55.4482 li
16.0806 55.4482 li
cp
32.1084 68.8384 mo
22.5601 68.8384 15.0806 65.0903 15.0806 60.3057 cv
15.0806 54.4482 li
49.1328 54.4482 li
49.1328 60.3057 li
49.1328 65.0903 41.6548 68.8384 32.1084 68.8384 cv
cp
.223529 .235294 .254902 rgb
f
15.5805 48.4591 mo
15.5805 53.8169 li
15.5805 58.2508 22.9784 61.8494 32.1085 61.8494 cv
41.236 61.8494 48.6327 58.2508 48.6327 53.8169 cv
48.6327 48.4591 li
15.5805 48.4591 li
cp
.992157 .721569 .0745098 rgb
f
16.0806 48.959 mo
16.0806 53.8169 li
16.0806 57.8999 23.4204 61.3496 32.1084 61.3496 cv
40.7944 61.3496 48.1328 57.8999 48.1328 53.8169 cv
48.1328 48.959 li
16.0806 48.959 li
cp
32.1084 62.3496 mo
22.5601 62.3496 15.0806 58.6016 15.0806 53.8169 cv
15.0806 47.959 li
49.1328 47.959 li
49.1328 53.8169 li
49.1328 58.6016 41.6548 62.3496 32.1084 62.3496 cv
cp
.223529 .235294 .254902 rgb
f
15.5805 41.9702 mo
15.5805 47.328 li
15.5805 51.7619 22.9784 55.3605 32.1085 55.3605 cv
41.236 55.3605 48.6327 51.7619 48.6327 47.328 cv
48.6327 41.9702 li
15.5805 41.9702 li
cp
.992157 .721569 .0745098 rgb
f
16.0806 42.4702 mo
16.0806 47.3281 li
16.0806 51.4111 23.4204 54.8604 32.1084 54.8604 cv
40.7944 54.8604 48.1328 51.4111 48.1328 47.3281 cv
48.1328 42.4702 li
16.0806 42.4702 li
cp
32.1084 55.8604 mo
22.5601 55.8604 15.0806 52.1123 15.0806 47.3281 cv
15.0806 41.4702 li
49.1328 41.4702 li
49.1328 47.3281 li
49.1328 52.1123 41.6548 55.8604 32.1084 55.8604 cv
cp
.223529 .235294 .254902 rgb
f
15.5805 35.4813 mo
15.5805 40.8391 li
15.5805 45.273 22.9784 48.8716 32.1085 48.8716 cv
41.236 48.8716 48.6327 45.273 48.6327 40.8391 cv
48.6327 35.4813 li
15.5805 35.4813 li
cp
.992157 .721569 .0745098 rgb
f
16.0806 35.9814 mo
16.0806 40.8394 li
16.0806 44.9224 23.4204 48.3716 32.1084 48.3716 cv
40.7944 48.3716 48.1328 44.9224 48.1328 40.8394 cv
48.1328 35.9814 li
16.0806 35.9814 li
cp
32.1084 49.3716 mo
22.5601 49.3716 15.0806 45.624 15.0806 40.8394 cv
15.0806 34.9814 li
49.1328 34.9814 li
49.1328 40.8394 li
49.1328 45.624 41.6548 49.3716 32.1084 49.3716 cv
cp
.223529 .235294 .254902 rgb
f
15.5805 27.6539 mo
15.5805 34.3501 li
15.5805 38.7841 22.9784 42.3827 32.1085 42.3827 cv
41.236 42.3827 48.6327 38.7841 48.6327 34.3501 cv
48.6327 27.6539 li
15.5805 27.6539 li
cp
.992157 .721569 .0745098 rgb
f
16.0806 28.1538 mo
16.0806 34.3501 li
16.0806 38.4331 23.4204 41.8828 32.1084 41.8828 cv
40.7944 41.8828 48.1328 38.4331 48.1328 34.3501 cv
48.1328 28.1538 li
16.0806 28.1538 li
cp
32.1084 42.8828 mo
22.5601 42.8828 15.0806 39.1348 15.0806 34.3501 cv
15.0806 27.1538 li
49.1328 27.1538 li
49.1328 34.3501 li
49.1328 39.1348 41.6548 42.8828 32.1084 42.8828 cv
cp
.223529 .235294 .254902 rgb
f
48.6327 27.6539 mo
48.6327 32.0912 41.236 35.6876 32.1085 35.6876 cv
22.9784 35.6876 15.5805 32.0912 15.5805 27.6539 cv
15.5805 23.2176 22.9784 19.619 32.1085 19.619 cv
41.236 19.619 48.6327 23.2176 48.6327 27.6539 cv
cp
.992157 .721569 .0745098 rgb
f
32.1084 20.1191 mo
23.2705 20.1191 16.0806 23.499 16.0806 27.6538 cv
16.0806 31.8081 23.2705 35.1875 32.1084 35.1875 cv
40.9443 35.1875 48.1328 31.8081 48.1328 27.6538 cv
48.1328 23.5698 40.7944 20.1191 32.1084 20.1191 cv
cp
32.1084 36.1875 mo
22.5601 36.1875 15.0806 32.439 15.0806 27.6538 cv
15.0806 22.8682 22.5601 19.1191 32.1084 19.1191 cv
41.6548 19.1191 49.1328 22.8682 49.1328 27.6538 cv
49.1328 32.439 41.6548 36.1875 32.1084 36.1875 cv
cp
.223529 .235294 .254902 rgb
f
64.3673 54.948 mo
64.3673 60.3058 li
64.3673 64.7398 71.7652 68.3384 80.8953 68.3384 cv
90.0228 68.3384 97.4195 64.7398 97.4195 60.3058 cv
97.4195 54.948 li
64.3673 54.948 li
cp
1 .419608 .407843 rgb
f
64.8672 55.4482 mo
64.8672 60.3057 li
64.8672 64.3887 72.207 67.8384 80.8955 67.8384 cv
89.5815 67.8384 96.9194 64.3887 96.9194 60.3057 cv
96.9194 55.4482 li
64.8672 55.4482 li
cp
80.8955 68.8384 mo
71.3467 68.8384 63.8672 65.0903 63.8672 60.3057 cv
63.8672 54.4482 li
97.9194 54.4482 li
97.9194 60.3057 li
97.9194 65.0903 90.4414 68.8384 80.8955 68.8384 cv
cp
.223529 .235294 .254902 rgb
f
64.3673 48.4591 mo
64.3673 53.8169 li
64.3673 58.2508 71.7652 61.8494 80.8953 61.8494 cv
90.0228 61.8494 97.4195 58.2508 97.4195 53.8169 cv
97.4195 48.4591 li
64.3673 48.4591 li
cp
1 .419608 .407843 rgb
f
64.8672 48.959 mo
64.8672 53.8169 li
64.8672 57.8999 72.207 61.3496 80.8955 61.3496 cv
89.5815 61.3496 96.9194 57.8999 96.9194 53.8169 cv
96.9194 48.959 li
64.8672 48.959 li
cp
80.8955 62.3496 mo
71.3467 62.3496 63.8672 58.6016 63.8672 53.8169 cv
63.8672 47.959 li
97.9194 47.959 li
97.9194 53.8169 li
97.9194 58.6016 90.4414 62.3496 80.8955 62.3496 cv
cp
.223529 .235294 .254902 rgb
f
64.3673 41.9702 mo
64.3673 47.328 li
64.3673 51.7619 71.7652 55.3605 80.8953 55.3605 cv
90.0228 55.3605 97.4195 51.7619 97.4195 47.328 cv
97.4195 41.9702 li
64.3673 41.9702 li
cp
1 .419608 .407843 rgb
f
64.8672 42.4702 mo
64.8672 47.3281 li
64.8672 51.4111 72.207 54.8604 80.8955 54.8604 cv
89.5815 54.8604 96.9194 51.4111 96.9194 47.3281 cv
96.9194 42.4702 li
64.8672 42.4702 li
cp
80.8955 55.8604 mo
71.3467 55.8604 63.8672 52.1123 63.8672 47.3281 cv
63.8672 41.4702 li
97.9194 41.4702 li
97.9194 47.3281 li
97.9194 52.1123 90.4414 55.8604 80.8955 55.8604 cv
cp
.223529 .235294 .254902 rgb
f
64.3673 35.4813 mo
64.3673 40.8391 li
64.3673 45.273 71.7652 48.8716 80.8953 48.8716 cv
90.0228 48.8716 97.4195 45.273 97.4195 40.8391 cv
97.4195 35.4813 li
64.3673 35.4813 li
cp
1 .419608 .407843 rgb
f
64.8672 35.9814 mo
64.8672 40.8394 li
64.8672 44.9224 72.207 48.3716 80.8955 48.3716 cv
89.5815 48.3716 96.9194 44.9224 96.9194 40.8394 cv
96.9194 35.9814 li
64.8672 35.9814 li
cp
80.8955 49.3716 mo
71.3467 49.3716 63.8672 45.624 63.8672 40.8394 cv
63.8672 34.9814 li
97.9194 34.9814 li
97.9194 40.8394 li
97.9194 45.624 90.4414 49.3716 80.8955 49.3716 cv
cp
.223529 .235294 .254902 rgb
f
64.3673 27.6539 mo
64.3673 34.3501 li
64.3673 38.7841 71.7652 42.3827 80.8953 42.3827 cv
90.0228 42.3827 97.4195 38.7841 97.4195 34.3501 cv
97.4195 27.6539 li
64.3673 27.6539 li
cp
1 .419608 .407843 rgb
f
64.8672 28.1538 mo
64.8672 34.3501 li
64.8672 38.4331 72.207 41.8828 80.8955 41.8828 cv
89.5815 41.8828 96.9194 38.4331 96.9194 34.3501 cv
96.9194 28.1538 li
64.8672 28.1538 li
cp
80.8955 42.8828 mo
71.3467 42.8828 63.8672 39.1348 63.8672 34.3501 cv
63.8672 27.1538 li
97.9194 27.1538 li
97.9194 34.3501 li
97.9194 39.1348 90.4414 42.8828 80.8955 42.8828 cv
cp
.223529 .235294 .254902 rgb
f
97.4195 27.6539 mo
97.4195 32.0912 90.0228 35.6876 80.8953 35.6876 cv
71.7652 35.6876 64.3673 32.0912 64.3673 27.6539 cv
64.3673 23.2176 71.7652 19.619 80.8953 19.619 cv
90.0228 19.619 97.4195 23.2176 97.4195 27.6539 cv
cp
1 .419608 .407843 rgb
f
80.8955 20.1191 mo
72.0576 20.1191 64.8672 23.499 64.8672 27.6538 cv
64.8672 31.8081 72.0576 35.1875 80.8955 35.1875 cv
89.731 35.1875 96.9194 31.8081 96.9194 27.6538 cv
96.9194 23.499 89.731 20.1191 80.8955 20.1191 cv
cp
80.8955 36.1875 mo
71.3467 36.1875 63.8672 32.439 63.8672 27.6538 cv
63.8672 22.8682 71.3467 19.1191 80.8955 19.1191 cv
90.4414 19.1191 97.9194 22.8682 97.9194 27.6538 cv
97.9194 32.439 90.4414 36.1875 80.8955 36.1875 cv
cp
.223529 .235294 .254902 rgb
f
39.9739 82.0747 mo
39.9739 87.4325 li
39.9739 91.8665 47.3718 95.4651 56.5019 95.4651 cv
65.6294 95.4651 73.0261 91.8665 73.0261 87.4325 cv
73.0261 82.0747 li
39.9739 82.0747 li
cp
.333333 .839216 .823529 rgb
f
40.4741 82.5747 mo
40.4741 87.4326 li
40.4741 91.5156 47.814 94.9648 56.502 94.9648 cv
65.188 94.9648 72.5259 91.5156 72.5259 87.4326 cv
72.5259 82.5747 li
40.4741 82.5747 li
cp
56.502 95.9648 mo
46.9536 95.9648 39.4741 92.2168 39.4741 87.4326 cv
39.4741 81.5747 li
73.5259 81.5747 li
73.5259 87.4326 li
73.5259 92.2168 66.0478 95.9648 56.502 95.9648 cv
cp
.223529 .235294 .254902 rgb
f
39.9739 75.5858 mo
39.9739 80.9436 li
39.9739 85.3775 47.3718 88.9761 56.5019 88.9761 cv
65.6294 88.9761 73.0261 85.3775 73.0261 80.9436 cv
73.0261 75.5858 li
39.9739 75.5858 li
cp
.333333 .839216 .823529 rgb
f
40.4741 76.0859 mo
40.4741 80.9434 li
40.4741 85.0264 47.814 88.4761 56.502 88.4761 cv
65.188 88.4761 72.5259 85.0264 72.5259 80.9434 cv
72.5259 76.0859 li
40.4741 76.0859 li
cp
56.502 89.4761 mo
46.9536 89.4761 39.4741 85.728 39.4741 80.9434 cv
39.4741 75.0859 li
73.5259 75.0859 li
73.5259 80.9434 li
73.5259 85.728 66.0478 89.4761 56.502 89.4761 cv
cp
.223529 .235294 .254902 rgb
f
39.9739 69.0969 mo
39.9739 74.4547 li
39.9739 78.8886 47.3718 82.4872 56.5019 82.4872 cv
65.6294 82.4872 73.0261 78.8886 73.0261 74.4547 cv
73.0261 69.0969 li
39.9739 69.0969 li
cp
.333333 .839216 .823529 rgb
f
40.4741 69.5967 mo
40.4741 74.4546 li
40.4741 78.5376 47.814 81.9873 56.502 81.9873 cv
65.188 81.9873 72.5259 78.5376 72.5259 74.4546 cv
72.5259 69.5967 li
40.4741 69.5967 li
cp
56.502 82.9873 mo
46.9536 82.9873 39.4741 79.2393 39.4741 74.4546 cv
39.4741 68.5967 li
73.5259 68.5967 li
73.5259 74.4546 li
73.5259 79.2393 66.0478 82.9873 56.502 82.9873 cv
cp
.223529 .235294 .254902 rgb
f
39.9739 62.608 mo
39.9739 67.9658 li
39.9739 72.3997 47.3718 75.9983 56.5019 75.9983 cv
65.6294 75.9983 73.0261 72.3997 73.0261 67.9658 cv
73.0261 62.608 li
39.9739 62.608 li
cp
.333333 .839216 .823529 rgb
f
40.4741 63.1079 mo
40.4741 67.9658 li
40.4741 72.0488 47.814 75.498 56.502 75.498 cv
65.188 75.498 72.5259 72.0488 72.5259 67.9658 cv
72.5259 63.1079 li
40.4741 63.1079 li
cp
56.502 76.498 mo
46.9536 76.498 39.4741 72.75 39.4741 67.9658 cv
39.4741 62.1079 li
73.5259 62.1079 li
73.5259 67.9658 li
73.5259 72.75 66.0478 76.498 56.502 76.498 cv
cp
.223529 .235294 .254902 rgb
f
39.9739 54.7805 mo
39.9739 61.4768 li
39.9739 65.9108 47.3718 69.5094 56.5019 69.5094 cv
65.6294 69.5094 73.0261 65.9108 73.0261 61.4768 cv
73.0261 54.7805 li
39.9739 54.7805 li
cp
.333333 .839216 .823529 rgb
f
40.4741 55.2808 mo
40.4741 61.4766 li
40.4741 65.5596 47.814 69.0093 56.502 69.0093 cv
65.188 69.0093 72.5259 65.5596 72.5259 61.4766 cv
72.5259 55.2808 li
40.4741 55.2808 li
cp
56.502 70.0093 mo
46.9536 70.0093 39.4741 66.2612 39.4741 61.4766 cv
39.4741 54.2808 li
73.5259 54.2808 li
73.5259 61.4766 li
73.5259 66.2612 66.0478 70.0093 56.502 70.0093 cv
cp
.223529 .235294 .254902 rgb
f
73.0261 54.7805 mo
73.0261 59.2178 65.6294 62.8142 56.5019 62.8142 cv
47.3718 62.8142 39.9739 59.2178 39.9739 54.7805 cv
39.9739 50.3442 47.3718 46.7456 56.5019 46.7456 cv
65.6294 46.7456 73.0261 50.3442 73.0261 54.7805 cv
cp
.333333 .839216 .823529 rgb
f
56.502 47.2456 mo
47.6641 47.2456 40.4741 50.626 40.4741 54.7808 cv
40.4741 58.9351 47.6641 62.3145 56.502 62.3145 cv
65.3374 62.3145 72.5259 58.9351 72.5259 54.7808 cv
72.5259 50.626 65.3374 47.2456 56.502 47.2456 cv
cp
56.502 63.3145 mo
46.9536 63.3145 39.4741 59.5659 39.4741 54.7808 cv
39.4741 49.9946 46.9536 46.2456 56.502 46.2456 cv
66.0478 46.2456 73.5259 49.9946 73.5259 54.7808 cv
73.5259 59.5659 66.0478 63.3145 56.502 63.3145 cv
cp
.223529 .235294 .254902 rgb
f
442.591 303.189 mo
444.999 305.387 444.299 307.189 441.042 307.189 cv
366.119 307.189 li
362.86 307.189 362.158 305.387 364.571 303.189 cv
368.834 299.29 li
371.243 297.091 375.874 295.292 379.137 295.292 cv
428.026 295.292 li
431.282 295.292 435.913 297.091 438.322 299.29 cv
442.591 303.189 li
cp
1 .419608 .407843 rgb
f
379.137 295.792 mo
375.978 295.792 371.508 297.527 369.171 299.659 cv
364.909 303.557 li
363.934 304.446 363.477 305.296 363.684 305.832 cv
363.892 306.369 364.802 306.689 366.119 306.689 cv
441.041 306.689 li
442.357 306.689 443.267 306.369 443.475 305.833 cv
443.683 305.296 443.227 304.446 442.254 303.557 cv
437.985 299.659 li
435.648 297.527 431.18 295.792 428.025 295.792 cv
379.137 295.792 li
cp
441.041 307.689 mo
366.119 307.689 li
364.321 307.689 363.125 307.158 362.752 306.194 cv
362.378 305.229 362.904 304.031 364.234 302.819 cv
368.496 298.921 li
370.991 296.644 375.764 294.792 379.137 294.792 cv
428.025 294.792 li
431.394 294.792 436.164 296.644 438.659 298.92 cv
442.928 302.819 li
444.256 304.032 444.781 305.23 444.407 306.194 cv
444.033 307.159 442.838 307.689 441.041 307.689 cv
cp
.223529 .235294 .254902 rgb
f
436.542 294.95 mo
436.542 296.58 435.206 297.913 433.577 297.913 cv
373.583 297.913 li
371.948 297.913 370.615 296.58 370.615 294.95 cv
370.615 260.211 li
370.615 258.585 371.948 257.252 373.583 257.252 cv
433.577 257.252 li
435.206 257.252 436.542 258.585 436.542 260.211 cv
436.542 294.95 li
cp
1 .419608 .407843 rgb
f
373.583 257.752 mo
372.223 257.752 371.115 258.855 371.115 260.211 cv
371.115 294.951 li
371.115 296.308 372.223 297.413 373.583 297.413 cv
433.576 297.413 li
434.936 297.413 436.042 296.308 436.042 294.951 cv
436.042 260.211 li
436.042 258.855 434.936 257.752 433.576 257.752 cv
373.583 257.752 li
cp
433.576 298.413 mo
373.583 298.413 li
371.671 298.413 370.115 296.859 370.115 294.951 cv
370.115 260.211 li
370.115 258.304 371.671 256.752 373.583 256.752 cv
433.576 256.752 li
435.487 256.752 437.042 258.304 437.042 260.211 cv
437.042 294.951 li
437.042 296.859 435.487 298.413 433.576 298.413 cv
cp
.223529 .235294 .254902 rgb
f
436.542 294.95 mo
436.542 296.58 435.206 297.913 433.577 297.913 cv
373.583 297.913 li
371.948 297.913 370.615 296.58 370.615 294.95 cv
370.615 260.211 li
370.615 258.585 371.948 257.252 373.583 257.252 cv
433.577 257.252 li
435.206 257.252 436.542 258.585 436.542 260.211 cv
436.542 294.95 li
cp
1 .419608 .407843 rgb
f
373.583 257.752 mo
372.223 257.752 371.115 258.855 371.115 260.211 cv
371.115 294.951 li
371.115 296.308 372.223 297.413 373.583 297.413 cv
433.576 297.413 li
434.936 297.413 436.042 296.308 436.042 294.951 cv
436.042 260.211 li
436.042 258.855 434.936 257.752 433.576 257.752 cv
373.583 257.752 li
cp
433.576 298.413 mo
373.583 298.413 li
371.671 298.413 370.115 296.859 370.115 294.951 cv
370.115 260.211 li
370.115 258.304 371.671 256.752 373.583 256.752 cv
433.576 256.752 li
435.487 256.752 437.042 258.304 437.042 260.211 cv
437.042 294.951 li
437.042 296.859 435.487 298.413 433.576 298.413 cv
cp
.223529 .235294 .254902 rgb
f
434.161 293.487 mo
434.161 294.468 433.356 295.263 432.383 295.263 cv
374.776 295.263 li
373.798 295.263 372.998 294.468 372.998 293.487 cv
372.998 261.681 li
372.998 260.706 373.798 259.898 374.776 259.898 cv
432.383 259.898 li
433.356 259.898 434.161 260.706 434.161 261.681 cv
434.161 293.487 li
cp
1 1 .933333 rgb
f
374.776 260.398 mo
374.071 260.398 373.498 260.974 373.498 261.681 cv
373.498 293.487 li
373.498 294.191 374.071 294.764 374.776 294.764 cv
432.383 294.764 li
433.088 294.764 433.661 294.191 433.661 293.487 cv
433.661 261.681 li
433.661 260.985 433.076 260.398 432.383 260.398 cv
374.776 260.398 li
cp
432.383 295.764 mo
374.776 295.764 li
373.521 295.764 372.498 294.742 372.498 293.487 cv
372.498 261.681 li
372.498 260.422 373.521 259.398 374.776 259.398 cv
432.383 259.398 li
433.639 259.398 434.661 260.422 434.661 261.681 cv
434.661 293.487 li
434.661 294.742 433.639 295.764 432.383 295.764 cv
cp
.223529 .235294 .254902 rgb
f
403.095 269.348 mo
403.981 269.348 li
404.41 269.348 404.645 269.188 404.645 268.694 cv
404.645 265.667 li
404.645 265.246 404.461 265.013 404.021 265.013 cv
403.059 265.013 li
402.51 265.013 402.404 265.404 402.404 265.667 cv
402.404 268.689 li
402.404 269.247 402.786 269.348 403.095 269.348 cv
cp
401.124 265.516 mo
401.124 264.418 401.788 263.833 402.808 263.833 cv
404.308 263.833 li
405.539 263.833 405.925 264.589 405.925 265.466 cv
405.925 268.896 li
405.925 269.984 405.314 270.528 404.302 270.528 cv
402.803 270.528 li
401.774 270.528 401.124 269.993 401.124 268.896 cv
401.124 265.516 li
cp
f
387.458 290.7 mo
388.344 290.7 li
388.773 290.7 389.008 290.54 389.008 290.046 cv
389.008 287.019 li
389.008 286.598 388.824 286.365 388.384 286.365 cv
387.422 286.365 li
386.873 286.365 386.768 286.756 386.768 287.019 cv
386.768 290.041 li
386.768 290.599 387.15 290.7 387.458 290.7 cv
cp
385.487 286.868 mo
385.487 285.77 386.151 285.185 387.171 285.185 cv
388.671 285.185 li
389.902 285.185 390.289 285.94 390.289 286.818 cv
390.289 290.247 li
390.289 291.336 389.677 291.88 388.666 291.88 cv
387.166 291.88 li
386.138 291.88 385.487 291.345 385.487 290.247 cv
385.487 286.868 li
cp
f
410.913 269.348 mo
411.799 269.348 li
412.228 269.348 412.463 269.188 412.463 268.694 cv
412.463 265.667 li
412.463 265.246 412.279 265.013 411.839 265.013 cv
410.878 265.013 li
410.328 265.013 410.223 265.404 410.223 265.667 cv
410.223 268.689 li
410.223 269.247 410.605 269.348 410.913 269.348 cv
cp
408.943 265.516 mo
408.943 264.418 409.606 263.833 410.626 263.833 cv
412.126 263.833 li
413.357 263.833 413.744 264.589 413.744 265.466 cv
413.744 268.896 li
413.744 269.984 413.132 270.528 412.121 270.528 cv
410.621 270.528 li
409.592 270.528 408.943 269.993 408.943 268.896 cv
408.943 265.516 li
cp
f
418.731 269.348 mo
419.617 269.348 li
420.047 269.348 420.282 269.188 420.282 268.694 cv
420.282 265.667 li
420.282 265.246 420.098 265.013 419.658 265.013 cv
418.696 265.013 li
418.146 265.013 418.041 265.404 418.041 265.667 cv
418.041 268.689 li
418.041 269.247 418.423 269.348 418.731 269.348 cv
cp
416.761 265.516 mo
416.761 264.418 417.425 263.833 418.445 263.833 cv
419.944 263.833 li
421.176 263.833 421.562 264.589 421.562 265.466 cv
421.562 268.896 li
421.562 269.984 420.95 270.528 419.939 270.528 cv
418.439 270.528 li
417.411 270.528 416.761 269.993 416.761 268.896 cv
416.761 265.516 li
cp
f
394.424 264.591 mo
395.719 263.833 li
396.989 263.833 li
396.989 270.528 li
395.709 270.528 li
395.709 265.104 li
394.424 265.428 li
394.424 264.591 li
cp
f
425.697 264.591 mo
426.992 263.833 li
428.263 263.833 li
428.263 270.528 li
426.982 270.528 li
426.982 265.104 li
425.697 265.428 li
425.697 264.591 li
cp
f
394.424 285.942 mo
395.719 285.185 li
396.989 285.185 li
396.989 291.88 li
395.709 291.88 li
395.709 286.456 li
394.424 286.779 li
394.424 285.942 li
cp
f
403.095 280.024 mo
403.981 280.024 li
404.41 280.024 404.645 279.864 404.645 279.37 cv
404.645 276.343 li
404.645 275.922 404.461 275.689 404.021 275.689 cv
403.059 275.689 li
402.51 275.689 402.404 276.08 402.404 276.343 cv
402.404 279.365 li
402.404 279.923 402.786 280.024 403.095 280.024 cv
cp
401.124 276.192 mo
401.124 275.094 401.788 274.509 402.808 274.509 cv
404.308 274.509 li
405.539 274.509 405.925 275.265 405.925 276.142 cv
405.925 279.572 li
405.925 280.66 405.314 281.204 404.302 281.204 cv
402.803 281.204 li
401.774 281.204 401.124 280.669 401.124 279.572 cv
401.124 276.192 li
cp
f
410.913 290.7 mo
411.799 290.7 li
412.228 290.7 412.463 290.54 412.463 290.046 cv
412.463 287.019 li
412.463 286.598 412.279 286.365 411.839 286.365 cv
410.878 286.365 li
410.328 286.365 410.223 286.756 410.223 287.019 cv
410.223 290.041 li
410.223 290.599 410.605 290.7 410.913 290.7 cv
cp
408.943 286.868 mo
408.943 285.77 409.606 285.185 410.626 285.185 cv
412.126 285.185 li
413.357 285.185 413.744 285.94 413.744 286.818 cv
413.744 290.247 li
413.744 291.336 413.132 291.88 412.121 291.88 cv
410.621 291.88 li
409.592 291.88 408.943 291.345 408.943 290.247 cv
408.943 286.868 li
cp
f
418.731 290.7 mo
419.617 290.7 li
420.047 290.7 420.282 290.54 420.282 290.046 cv
420.282 287.019 li
420.282 286.598 420.098 286.365 419.658 286.365 cv
418.696 286.365 li
418.146 286.365 418.041 286.756 418.041 287.019 cv
418.041 290.041 li
418.041 290.599 418.423 290.7 418.731 290.7 cv
cp
416.761 286.868 mo
416.761 285.77 417.425 285.185 418.445 285.185 cv
419.944 285.185 li
421.176 285.185 421.562 285.94 421.562 286.818 cv
421.562 290.247 li
421.562 291.336 420.95 291.88 419.939 291.88 cv
418.439 291.88 li
417.411 291.88 416.761 291.345 416.761 290.247 cv
416.761 286.868 li
cp
f
394.424 275.267 mo
395.719 274.509 li
396.989 274.509 li
396.989 281.204 li
395.709 281.204 li
395.709 275.78 li
394.424 276.104 li
394.424 275.267 li
cp
f
410.06 275.267 mo
411.355 274.509 li
412.626 274.509 li
412.626 281.204 li
411.345 281.204 li
411.345 275.78 li
410.06 276.104 li
410.06 275.267 li
cp
f
402.242 285.942 mo
403.537 285.185 li
404.808 285.185 li
404.808 291.88 li
403.527 291.88 li
403.527 286.456 li
402.242 286.779 li
402.242 285.942 li
cp
f
426.55 280.024 mo
427.436 280.024 li
427.865 280.024 428.1 279.864 428.1 279.37 cv
428.1 276.343 li
428.1 275.922 427.916 275.689 427.476 275.689 cv
426.514 275.689 li
425.965 275.689 425.859 276.08 425.859 276.343 cv
425.859 279.365 li
425.859 279.923 426.241 280.024 426.55 280.024 cv
cp
424.579 276.192 mo
424.579 275.094 425.243 274.509 426.263 274.509 cv
427.763 274.509 li
428.994 274.509 429.38 275.265 429.38 276.142 cv
429.38 279.572 li
429.38 280.66 428.769 281.204 427.757 281.204 cv
426.258 281.204 li
425.229 281.204 424.579 280.669 424.579 279.572 cv
424.579 276.192 li
cp
f
425.697 285.942 mo
426.992 285.185 li
428.263 285.185 li
428.263 291.88 li
426.982 291.88 li
426.982 286.456 li
425.697 286.779 li
425.697 285.942 li
cp
f
417.879 275.267 mo
419.174 274.509 li
420.444 274.509 li
420.444 281.204 li
419.164 281.204 li
419.164 275.78 li
417.879 276.104 li
417.879 275.267 li
cp
f
359.958 292.234 mo
359.04 293.152 357.551 293.152 356.632 292.234 cv
356.632 292.234 li
355.714 291.316 355.714 289.826 356.632 288.908 cv
361.265 284.274 li
362.184 283.355 363.673 283.355 364.592 284.274 cv
364.592 284.274 li
365.509 285.192 365.509 286.684 364.592 287.6 cv
359.958 292.234 li
cp
1 1 .933333 rgb
f
362.929 284.084 mo
362.434 284.084 361.969 284.277 361.619 284.627 cv
356.985 289.262 li
356.264 289.983 356.265 291.159 356.985 291.881 cv
357.685 292.579 358.906 292.578 359.605 291.881 cv
364.238 287.246 li
364.96 286.525 364.96 285.35 364.238 284.626 cv
363.889 284.277 363.423 284.084 362.929 284.084 cv
cp
358.295 293.422 mo
357.533 293.422 356.818 293.126 356.278 292.588 cv
355.167 291.475 355.167 289.666 356.278 288.555 cv
360.912 283.92 li
361.988 282.844 363.867 282.842 364.945 283.92 cv
366.057 285.034 366.057 286.843 364.945 287.953 cv
360.312 292.588 li
359.773 293.126 359.057 293.422 358.295 293.422 cv
cp
.223529 .235294 .254902 rgb
f
350.794 305.301 mo
348.884 307.209 345.646 307.069 343.566 304.987 cv
343.566 304.987 li
341.481 302.906 341.342 299.668 343.252 297.759 cv
351.562 289.45 li
353.472 287.539 356.708 287.679 358.789 289.762 cv
358.789 289.762 li
360.871 291.844 361.012 295.08 359.102 296.989 cv
350.794 305.301 li
cp
.992157 .721569 .0745098 rgb
f
354.889 288.604 mo
353.745 288.604 352.689 289.03 351.916 289.804 cv
343.606 298.113 li
342.782 298.936 342.358 300.063 342.411 301.287 cv
342.465 302.527 343 303.716 343.919 304.634 cv
344.879 305.595 346.172 306.145 347.466 306.145 cv
348.611 306.145 349.667 305.72 350.44 304.948 cv
358.748 296.636 li
359.571 295.812 359.996 294.685 359.943 293.462 cv
359.89 292.223 359.354 291.034 358.436 290.116 cv
357.475 289.155 356.183 288.604 354.889 288.604 cv
cp
347.466 307.145 mo
345.908 307.145 344.357 306.488 343.212 305.341 cv
342.115 304.246 341.477 302.821 341.412 301.33 cv
341.347 299.823 341.875 298.43 342.898 297.406 cv
351.209 289.097 li
352.171 288.134 353.478 287.604 354.889 287.604 cv
356.445 287.604 357.996 288.262 359.143 289.409 cv
360.238 290.504 360.877 291.929 360.943 293.419 cv
361.007 294.926 360.48 296.319 359.455 297.343 cv
351.148 305.655 li
350.186 306.616 348.878 307.145 347.466 307.145 cv
cp
.223529 .235294 .254902 rgb
f
391.433 273.549 mo
391.433 263.726 383.47 255.763 373.647 255.763 cv
363.824 255.763 355.861 263.726 355.861 273.549 cv
355.861 283.371 363.824 291.335 373.647 291.335 cv
383.47 291.335 391.433 283.371 391.433 273.549 cv
cp
.992157 .721569 .0745098 rgb
f
373.648 256.263 mo
364.115 256.263 356.36 264.017 356.36 273.549 cv
356.36 283.081 364.115 290.834 373.648 290.834 cv
383.179 290.834 390.933 283.081 390.933 273.549 cv
390.933 264.017 383.179 256.263 373.648 256.263 cv
cp
373.648 291.834 mo
363.564 291.834 355.36 283.632 355.36 273.549 cv
355.36 263.466 363.564 255.263 373.648 255.263 cv
383.73 255.263 391.933 263.466 391.933 273.549 cv
391.933 283.632 383.73 291.834 373.648 291.834 cv
cp
.223529 .235294 .254902 rgb
f
387.195 273.549 mo
387.195 266.065 381.128 260 373.647 260 cv
366.165 260 360.1 266.065 360.1 273.549 cv
360.1 281.03 366.165 287.095 373.647 287.095 cv
381.128 287.095 387.195 281.03 387.195 273.549 cv
cp
.333333 .839216 .823529 rgb
f
373.648 260.5 mo
366.453 260.5 360.6 266.354 360.6 273.549 cv
360.6 280.743 366.453 286.596 373.648 286.596 cv
380.842 286.596 386.694 280.743 386.694 273.549 cv
386.694 266.354 380.842 260.5 373.648 260.5 cv
cp
373.648 287.596 mo
365.901 287.596 359.6 281.294 359.6 273.549 cv
359.6 265.803 365.901 259.5 373.648 259.5 cv
381.393 259.5 387.694 265.803 387.694 273.549 cv
387.694 281.294 381.393 287.596 373.648 287.596 cv
cp
.223529 .235294 .254902 rgb
f
370.408 267.008 mo
373.678 265.096 li
376.886 265.096 li
376.886 282 li
373.653 282 li
373.653 268.306 li
370.408 269.121 li
370.408 267.008 li
cp
1 1 .933333 rgb
f
374.153 281.5 mo
376.386 281.5 li
376.386 265.596 li
373.814 265.596 li
370.908 267.295 li
370.908 268.48 li
374.153 267.664 li
374.153 281.5 li
cp
377.386 282.5 mo
373.153 282.5 li
373.153 268.947 li
369.908 269.763 li
369.908 266.722 li
373.543 264.596 li
377.386 264.596 li
377.386 282.5 li
cp
.223529 .235294 .254902 rgb
f
51.2901 247.163 mo
51.2901 269.415 li
52.2457 269.415 li
52.2457 247.163 li
51.2901 247.163 li
cp
f
73.2469 247.163 mo
73.2469 269.415 li
74.2024 269.415 li
74.2024 247.163 li
73.2469 247.163 li
cp
f
92.9751 278.367 mo
68.0779 278.367 li
68.0779 277.412 li
92.9751 277.412 li
92.9751 278.367 li
cp
f
57.6161 247.163 mo
56.6605 247.163 li
56.6605 254.682 li
62.5172 254.682 li
62.5172 266.435 li
63.4729 266.435 li
63.4729 253.727 li
57.6161 253.727 li
57.6161 247.163 li
cp
f
92.9751 261.284 mo
92.9751 260.328 li
85.4563 260.328 li
85.4563 266.185 li
73.7035 266.185 li
73.7035 267.14 li
86.4119 267.14 li
86.4119 261.284 li
92.9751 261.284 li
cp
f
77.0011 315.789 mo
77.9568 315.789 li
77.9568 311.176 li
74.5038 311.176 li
74.5038 305.154 li
73.5482 305.154 li
73.5482 312.132 li
77.0011 312.132 li
77.0011 315.789 li
cp
f
46.0298 247.163 mo
46.0298 253.001 li
40.4367 253.001 li
40.4367 260.563 li
41.3922 260.563 li
41.3922 253.956 li
46.9854 253.956 li
46.9854 247.163 li
46.0298 247.163 li
cp
f
39.6131 300.233 mo
26.6323 300.233 li
26.6323 294.64 li
20.0248 294.64 li
20.0248 293.685 li
27.5879 293.685 li
27.5879 299.277 li
39.6131 299.277 li
39.6131 300.233 li
cp
f
39.6131 277.263 mo
26.6323 277.263 li
26.6323 282.856 li
20.0248 282.856 li
20.0248 283.812 li
27.5879 283.812 li
27.5879 278.219 li
39.6131 278.219 li
39.6131 277.263 li
cp
f
92.9751 293.983 mo
92.0195 293.983 li
92.0195 288.993 li
89.9819 289.003 82.2784 289.038 81.019 288.99 cv
81.0535 288.036 li
82.4575 288.087 92.3957 288.036 92.495 288.035 cv
92.9751 288.033 li
92.9751 293.983 li
cp
f
52.0067 315.694 mo
48.5577 315.694 li
48.5577 314.738 li
51.0464 314.738 li
51.0367 312.701 51.0027 304.997 51.0492 303.737 cv
52.0039 303.773 li
51.9521 305.176 52.0039 315.114 52.0044 315.214 cv
52.0067 315.694 li
cp
f
68.4342 315.694 mo
62.4837 315.694 li
62.4859 315.214 li
62.4864 315.114 62.5377 305.176 62.4864 303.772 cv
63.4411 303.738 li
63.4873 304.997 63.4537 312.702 63.4439 314.738 cv
68.4342 314.738 li
68.4342 315.694 li
cp
f
92.9751 300.098 mo
77.3464 300.098 li
77.3464 299.142 li
92.9751 299.142 li
92.9751 300.098 li
cp
f
40.9145 267.163 mo
20.0248 267.163 li
20.0248 266.207 li
40.9145 266.207 li
40.9145 267.163 li
cp
f
35.654 289.119 mo
20.0248 289.119 li
20.0248 288.164 li
35.654 288.164 li
35.654 289.119 li
cp
f
41.3923 315.694 mo
40.4367 315.694 li
40.4367 300.065 li
41.3923 300.065 li
41.3923 315.694 li
cp
f
43.9997 261.852 mo
37.5792 261.852 li
37.5792 257.914 li
43.9997 257.914 li
43.9997 261.852 li
cp
1 .419608 .407843 rgb
f
38.0794 261.352 mo
43.4998 261.352 li
43.4998 258.414 li
38.0794 258.414 li
38.0794 261.352 li
cp
44.4998 262.352 mo
37.0794 262.352 li
37.0794 257.414 li
44.4998 257.414 li
44.4998 262.352 li
cp
.223529 .235294 .254902 rgb
f
54.9781 261.852 mo
48.5577 261.852 li
48.5577 257.914 li
54.9781 257.914 li
54.9781 261.852 li
cp
1 .419608 .407843 rgb
f
49.0575 261.352 mo
54.4784 261.352 li
54.4784 258.414 li
49.0575 258.414 li
49.0575 261.352 li
cp
55.4784 262.352 mo
48.0575 262.352 li
48.0575 257.414 li
55.4784 257.414 li
55.4784 262.352 li
cp
.223529 .235294 .254902 rgb
f
65.9565 261.852 mo
59.536 261.852 li
59.536 257.914 li
65.9565 257.914 li
65.9565 261.852 li
cp
1 .419608 .407843 rgb
f
60.036 261.352 mo
65.4564 261.352 li
65.4564 258.414 li
60.036 258.414 li
60.036 261.352 li
cp
66.4564 262.352 mo
59.036 262.352 li
59.036 257.414 li
66.4564 257.414 li
66.4564 262.352 li
cp
.223529 .235294 .254902 rgb
f
76.9349 261.852 mo
70.5144 261.852 li
70.5144 257.914 li
76.9349 257.914 li
76.9349 261.852 li
cp
1 .419608 .407843 rgb
f
71.0145 261.352 mo
76.4349 261.352 li
76.4349 258.414 li
71.0145 258.414 li
71.0145 261.352 li
cp
77.4349 262.352 mo
70.0145 262.352 li
70.0145 257.414 li
77.4349 257.414 li
77.4349 262.352 li
cp
.223529 .235294 .254902 rgb
f
43.9997 308.391 mo
37.5792 308.391 li
37.5792 304.453 li
43.9997 304.453 li
43.9997 308.391 li
cp
1 .419608 .407843 rgb
f
38.0794 307.891 mo
43.4998 307.891 li
43.4998 304.953 li
38.0794 304.953 li
38.0794 307.891 li
cp
44.4998 308.891 mo
37.0794 308.891 li
37.0794 303.953 li
44.4998 303.953 li
44.4998 308.891 li
cp
.223529 .235294 .254902 rgb
f
54.9781 308.391 mo
48.5577 308.391 li
48.5577 304.453 li
54.9781 304.453 li
54.9781 308.391 li
cp
1 .419608 .407843 rgb
f
49.0575 307.891 mo
54.4784 307.891 li
54.4784 304.953 li
49.0575 304.953 li
49.0575 307.891 li
cp
55.4784 308.891 mo
48.0575 308.891 li
48.0575 303.953 li
55.4784 303.953 li
55.4784 308.891 li
cp
.223529 .235294 .254902 rgb
f
65.9565 308.391 mo
59.536 308.391 li
59.536 304.453 li
65.9565 304.453 li
65.9565 308.391 li
cp
1 .419608 .407843 rgb
f
60.036 307.891 mo
65.4564 307.891 li
65.4564 304.953 li
60.036 304.953 li
60.036 307.891 li
cp
66.4564 308.891 mo
59.036 308.891 li
59.036 303.953 li
66.4564 303.953 li
66.4564 308.891 li
cp
.223529 .235294 .254902 rgb
f
76.9349 308.391 mo
70.5144 308.391 li
70.5144 304.453 li
76.9349 304.453 li
76.9349 308.391 li
cp
1 .419608 .407843 rgb
f
71.0145 307.891 mo
76.4349 307.891 li
76.4349 304.953 li
71.0145 304.953 li
71.0145 307.891 li
cp
77.4349 308.891 mo
70.0145 308.891 li
70.0145 303.953 li
77.4349 303.953 li
77.4349 308.891 li
cp
.223529 .235294 .254902 rgb
f
78.5575 269.895 mo
78.5575 263.474 li
82.4955 263.474 li
82.4955 269.895 li
78.5575 269.895 li
cp
1 .419608 .407843 rgb
f
79.0575 269.395 mo
81.9955 269.395 li
81.9955 263.974 li
79.0575 263.974 li
79.0575 269.395 li
cp
82.9955 270.395 mo
78.0575 270.395 li
78.0575 262.974 li
82.9955 262.974 li
82.9955 270.395 li
cp
.223529 .235294 .254902 rgb
f
78.5575 280.873 mo
78.5575 274.453 li
82.4955 274.453 li
82.4955 280.873 li
78.5575 280.873 li
cp
1 .419608 .407843 rgb
f
79.0575 280.373 mo
81.9955 280.373 li
81.9955 274.953 li
79.0575 274.953 li
79.0575 280.373 li
cp
82.9955 281.373 mo
78.0575 281.373 li
78.0575 273.953 li
82.9955 273.953 li
82.9955 281.373 li
cp
.223529 .235294 .254902 rgb
f
78.5575 291.852 mo
78.5575 285.431 li
82.4955 285.431 li
82.4955 291.852 li
78.5575 291.852 li
cp
1 .419608 .407843 rgb
f
79.0575 291.352 mo
81.9955 291.352 li
81.9955 285.931 li
79.0575 285.931 li
79.0575 291.352 li
cp
82.9955 292.352 mo
78.0575 292.352 li
78.0575 284.931 li
82.9955 284.931 li
82.9955 292.352 li
cp
.223529 .235294 .254902 rgb
f
78.5575 302.83 mo
78.5575 296.41 li
82.4955 296.41 li
82.4955 302.83 li
78.5575 302.83 li
cp
1 .419608 .407843 rgb
f
79.0575 302.33 mo
81.9955 302.33 li
81.9955 296.91 li
79.0575 296.91 li
79.0575 302.33 li
cp
82.9955 303.33 mo
78.0575 303.33 li
78.0575 295.91 li
82.9955 295.91 li
82.9955 303.33 li
cp
.223529 .235294 .254902 rgb
f
32.0187 269.895 mo
32.0187 263.474 li
35.9565 263.474 li
35.9565 269.895 li
32.0187 269.895 li
cp
1 .419608 .407843 rgb
f
32.5189 269.395 mo
35.4564 269.395 li
35.4564 263.974 li
32.5189 263.974 li
32.5189 269.395 li
cp
36.4564 270.395 mo
31.5189 270.395 li
31.5189 262.974 li
36.4564 262.974 li
36.4564 270.395 li
cp
.223529 .235294 .254902 rgb
f
32.0187 280.873 mo
32.0187 274.453 li
35.9565 274.453 li
35.9565 280.873 li
32.0187 280.873 li
cp
1 .419608 .407843 rgb
f
32.5189 280.373 mo
35.4564 280.373 li
35.4564 274.953 li
32.5189 274.953 li
32.5189 280.373 li
cp
36.4564 281.373 mo
31.5189 281.373 li
31.5189 273.953 li
36.4564 273.953 li
36.4564 281.373 li
cp
.223529 .235294 .254902 rgb
f
32.0187 291.852 mo
32.0187 285.431 li
35.9565 285.431 li
35.9565 291.852 li
32.0187 291.852 li
cp
1 .419608 .407843 rgb
f
32.5189 291.352 mo
35.4564 291.352 li
35.4564 285.931 li
32.5189 285.931 li
32.5189 291.352 li
cp
36.4564 292.352 mo
31.5189 292.352 li
31.5189 284.931 li
36.4564 284.931 li
36.4564 292.352 li
cp
.223529 .235294 .254902 rgb
f
32.0187 302.83 mo
32.0187 296.41 li
35.9565 296.41 li
35.9565 302.83 li
32.0187 302.83 li
cp
1 .419608 .407843 rgb
f
32.5189 302.33 mo
35.4564 302.33 li
35.4564 296.91 li
32.5189 296.91 li
32.5189 302.33 li
cp
36.4564 303.33 mo
31.5189 303.33 li
31.5189 295.91 li
36.4564 295.91 li
36.4564 303.33 li
cp
.223529 .235294 .254902 rgb
f
80.5265 306.422 mo
33.9877 306.422 li
33.9877 259.883 li
80.5265 259.883 li
80.5265 306.422 li
cp
1 .419608 .407843 rgb
f
34.4876 305.922 mo
80.0267 305.922 li
80.0267 260.383 li
34.4876 260.383 li
34.4876 305.922 li
cp
81.0267 306.922 mo
33.4876 306.922 li
33.4876 259.383 li
81.0267 259.383 li
81.0267 306.922 li
cp
.223529 .235294 .254902 rgb
f
75.7525 301.648 mo
38.7617 301.648 li
38.7617 264.657 li
75.7525 264.657 li
75.7525 301.648 li
cp
.992157 .721569 .0745098 rgb
f
39.2616 301.148 mo
75.2528 301.148 li
75.2528 265.157 li
39.2616 265.157 li
39.2616 301.148 li
cp
76.2528 302.148 mo
38.2616 302.148 li
38.2616 264.157 li
76.2528 264.157 li
76.2528 302.148 li
cp
.223529 .235294 .254902 rgb
f
47.0907 272.82 mo
42.5602 272.82 li
42.5602 268.29 li
47.0907 268.29 li
47.0907 272.82 li
cp
1 .419608 .407843 rgb
f
43.0604 272.32 mo
46.5907 272.32 li
46.5907 268.79 li
43.0604 268.79 li
43.0604 272.32 li
cp
47.5907 273.32 mo
42.0604 273.32 li
42.0604 267.79 li
47.5907 267.79 li
47.5907 273.32 li
cp
.223529 .235294 .254902 rgb
f
53.3065 272.82 mo
48.776 272.82 li
48.776 268.29 li
53.3065 268.29 li
53.3065 272.82 li
cp
1 .419608 .407843 rgb
f
49.2762 272.32 mo
52.8065 272.32 li
52.8065 268.79 li
49.2762 268.79 li
49.2762 272.32 li
cp
53.8065 273.32 mo
48.2762 273.32 li
48.2762 267.79 li
53.8065 267.79 li
53.8065 273.32 li
cp
.223529 .235294 .254902 rgb
f
59.5223 272.82 mo
54.9918 272.82 li
54.9918 268.29 li
59.5223 268.29 li
59.5223 272.82 li
cp
1 .419608 .407843 rgb
f
55.492 272.32 mo
59.0223 272.32 li
59.0223 268.79 li
55.492 268.79 li
55.492 272.32 li
cp
60.0223 273.32 mo
54.492 273.32 li
54.492 267.79 li
60.0223 267.79 li
60.0223 273.32 li
cp
.223529 .235294 .254902 rgb
f
65.7381 272.82 mo
61.2077 272.82 li
61.2077 268.29 li
65.7381 268.29 li
65.7381 272.82 li
cp
1 .419608 .407843 rgb
f
61.7079 272.32 mo
65.2381 272.32 li
65.2381 268.79 li
61.7079 268.79 li
61.7079 272.32 li
cp
66.2381 273.32 mo
60.7079 273.32 li
60.7079 267.79 li
66.2381 267.79 li
66.2381 273.32 li
cp
.223529 .235294 .254902 rgb
f
71.9539 272.82 mo
67.4234 272.82 li
67.4234 268.29 li
71.9539 268.29 li
71.9539 272.82 li
cp
1 .419608 .407843 rgb
f
67.9237 272.32 mo
71.4539 272.32 li
71.4539 268.79 li
67.9237 268.79 li
67.9237 272.32 li
cp
72.4539 273.32 mo
66.9237 273.32 li
66.9237 267.79 li
72.4539 267.79 li
72.4539 273.32 li
cp
.223529 .235294 .254902 rgb
f
47.0907 279.119 mo
42.5602 279.119 li
42.5602 274.588 li
47.0907 274.588 li
47.0907 279.119 li
cp
1 .419608 .407843 rgb
f
43.0604 278.619 mo
46.5907 278.619 li
46.5907 275.089 li
43.0604 275.089 li
43.0604 278.619 li
cp
47.5907 279.619 mo
42.0604 279.619 li
42.0604 274.089 li
47.5907 274.089 li
47.5907 279.619 li
cp
.223529 .235294 .254902 rgb
f
53.3065 279.119 mo
48.776 279.119 li
48.776 274.588 li
53.3065 274.588 li
53.3065 279.119 li
cp
1 .419608 .407843 rgb
f
49.2762 278.619 mo
52.8065 278.619 li
52.8065 275.089 li
49.2762 275.089 li
49.2762 278.619 li
cp
53.8065 279.619 mo
48.2762 279.619 li
48.2762 274.089 li
53.8065 274.089 li
53.8065 279.619 li
cp
.223529 .235294 .254902 rgb
f
59.5223 279.119 mo
54.9918 279.119 li
54.9918 274.588 li
59.5223 274.588 li
59.5223 279.119 li
cp
1 .419608 .407843 rgb
f
55.492 278.619 mo
59.0223 278.619 li
59.0223 275.089 li
55.492 275.089 li
55.492 278.619 li
cp
60.0223 279.619 mo
54.492 279.619 li
54.492 274.089 li
60.0223 274.089 li
60.0223 279.619 li
cp
.223529 .235294 .254902 rgb
f
65.7381 279.119 mo
61.2077 279.119 li
61.2077 274.588 li
65.7381 274.588 li
65.7381 279.119 li
cp
1 .419608 .407843 rgb
f
61.7079 278.619 mo
65.2381 278.619 li
65.2381 275.089 li
61.7079 275.089 li
61.7079 278.619 li
cp
66.2381 279.619 mo
60.7079 279.619 li
60.7079 274.089 li
66.2381 274.089 li
66.2381 279.619 li
cp
.223529 .235294 .254902 rgb
f
71.9539 279.119 mo
67.4234 279.119 li
67.4234 274.588 li
71.9539 274.588 li
71.9539 279.119 li
cp
1 .419608 .407843 rgb
f
67.9237 278.619 mo
71.4539 278.619 li
71.4539 275.089 li
67.9237 275.089 li
67.9237 278.619 li
cp
72.4539 279.619 mo
66.9237 279.619 li
66.9237 274.089 li
72.4539 274.089 li
72.4539 279.619 li
cp
.223529 .235294 .254902 rgb
f
47.0907 285.418 mo
42.5602 285.418 li
42.5602 280.887 li
47.0907 280.887 li
47.0907 285.418 li
cp
1 .419608 .407843 rgb
f
43.0604 284.918 mo
46.5907 284.918 li
46.5907 281.387 li
43.0604 281.387 li
43.0604 284.918 li
cp
47.5907 285.918 mo
42.0604 285.918 li
42.0604 280.387 li
47.5907 280.387 li
47.5907 285.918 li
cp
.223529 .235294 .254902 rgb
f
53.3065 285.418 mo
48.776 285.418 li
48.776 280.887 li
53.3065 280.887 li
53.3065 285.418 li
cp
1 .419608 .407843 rgb
f
49.2762 284.918 mo
52.8065 284.918 li
52.8065 281.387 li
49.2762 281.387 li
49.2762 284.918 li
cp
53.8065 285.918 mo
48.2762 285.918 li
48.2762 280.387 li
53.8065 280.387 li
53.8065 285.918 li
cp
.223529 .235294 .254902 rgb
f
59.5223 285.418 mo
54.9918 285.418 li
54.9918 280.887 li
59.5223 280.887 li
59.5223 285.418 li
cp
1 .419608 .407843 rgb
f
55.492 284.918 mo
59.0223 284.918 li
59.0223 281.387 li
55.492 281.387 li
55.492 284.918 li
cp
60.0223 285.918 mo
54.492 285.918 li
54.492 280.387 li
60.0223 280.387 li
60.0223 285.918 li
cp
.223529 .235294 .254902 rgb
f
65.7381 285.418 mo
61.2077 285.418 li
61.2077 280.887 li
65.7381 280.887 li
65.7381 285.418 li
cp
1 .419608 .407843 rgb
f
61.7079 284.918 mo
65.2381 284.918 li
65.2381 281.387 li
61.7079 281.387 li
61.7079 284.918 li
cp
66.2381 285.918 mo
60.7079 285.918 li
60.7079 280.387 li
66.2381 280.387 li
66.2381 285.918 li
cp
.223529 .235294 .254902 rgb
f
71.9539 285.418 mo
67.4234 285.418 li
67.4234 280.887 li
71.9539 280.887 li
71.9539 285.418 li
cp
1 .419608 .407843 rgb
f
67.9237 284.918 mo
71.4539 284.918 li
71.4539 281.387 li
67.9237 281.387 li
67.9237 284.918 li
cp
72.4539 285.918 mo
66.9237 285.918 li
66.9237 280.387 li
72.4539 280.387 li
72.4539 285.918 li
cp
.223529 .235294 .254902 rgb
f
47.0907 291.716 mo
42.5602 291.716 li
42.5602 287.186 li
47.0907 287.186 li
47.0907 291.716 li
cp
1 .419608 .407843 rgb
f
43.0604 291.216 mo
46.5907 291.216 li
46.5907 287.686 li
43.0604 287.686 li
43.0604 291.216 li
cp
47.5907 292.216 mo
42.0604 292.216 li
42.0604 286.686 li
47.5907 286.686 li
47.5907 292.216 li
cp
.223529 .235294 .254902 rgb
f
53.3065 291.716 mo
48.776 291.716 li
48.776 287.186 li
53.3065 287.186 li
53.3065 291.716 li
cp
1 .419608 .407843 rgb
f
49.2762 291.216 mo
52.8065 291.216 li
52.8065 287.686 li
49.2762 287.686 li
49.2762 291.216 li
cp
53.8065 292.216 mo
48.2762 292.216 li
48.2762 286.686 li
53.8065 286.686 li
53.8065 292.216 li
cp
.223529 .235294 .254902 rgb
f
59.5223 291.716 mo
54.9918 291.716 li
54.9918 287.186 li
59.5223 287.186 li
59.5223 291.716 li
cp
1 .419608 .407843 rgb
f
55.492 291.216 mo
59.0223 291.216 li
59.0223 287.686 li
55.492 287.686 li
55.492 291.216 li
cp
60.0223 292.216 mo
54.492 292.216 li
54.492 286.686 li
60.0223 286.686 li
60.0223 292.216 li
cp
.223529 .235294 .254902 rgb
f
65.7381 291.716 mo
61.2077 291.716 li
61.2077 287.186 li
65.7381 287.186 li
65.7381 291.716 li
cp
1 .419608 .407843 rgb
f
61.7079 291.216 mo
65.2381 291.216 li
65.2381 287.686 li
61.7079 287.686 li
61.7079 291.216 li
cp
66.2381 292.216 mo
60.7079 292.216 li
60.7079 286.686 li
66.2381 286.686 li
66.2381 292.216 li
cp
.223529 .235294 .254902 rgb
f
71.9539 291.716 mo
67.4234 291.716 li
67.4234 287.186 li
71.9539 287.186 li
71.9539 291.716 li
cp
1 .419608 .407843 rgb
f
67.9237 291.216 mo
71.4539 291.216 li
71.4539 287.686 li
67.9237 287.686 li
67.9237 291.216 li
cp
72.4539 292.216 mo
66.9237 292.216 li
66.9237 286.686 li
72.4539 286.686 li
72.4539 292.216 li
cp
.223529 .235294 .254902 rgb
f
47.0907 298.015 mo
42.5602 298.015 li
42.5602 293.484 li
47.0907 293.484 li
47.0907 298.015 li
cp
1 .419608 .407843 rgb
f
43.0604 297.515 mo
46.5907 297.515 li
46.5907 293.984 li
43.0604 293.984 li
43.0604 297.515 li
cp
47.5907 298.515 mo
42.0604 298.515 li
42.0604 292.984 li
47.5907 292.984 li
47.5907 298.515 li
cp
.223529 .235294 .254902 rgb
f
53.3065 298.015 mo
48.776 298.015 li
48.776 293.484 li
53.3065 293.484 li
53.3065 298.015 li
cp
1 .419608 .407843 rgb
f
49.2762 297.515 mo
52.8065 297.515 li
52.8065 293.984 li
49.2762 293.984 li
49.2762 297.515 li
cp
53.8065 298.515 mo
48.2762 298.515 li
48.2762 292.984 li
53.8065 292.984 li
53.8065 298.515 li
cp
.223529 .235294 .254902 rgb
f
59.5223 298.015 mo
54.9918 298.015 li
54.9918 293.484 li
59.5223 293.484 li
59.5223 298.015 li
cp
1 .419608 .407843 rgb
f
55.492 297.515 mo
59.0223 297.515 li
59.0223 293.984 li
55.492 293.984 li
55.492 297.515 li
cp
60.0223 298.515 mo
54.492 298.515 li
54.492 292.984 li
60.0223 292.984 li
60.0223 298.515 li
cp
.223529 .235294 .254902 rgb
f
65.7381 298.015 mo
61.2077 298.015 li
61.2077 293.484 li
65.7381 293.484 li
65.7381 298.015 li
cp
1 .419608 .407843 rgb
f
61.7079 297.515 mo
65.2381 297.515 li
65.2381 293.984 li
61.7079 293.984 li
61.7079 297.515 li
cp
66.2381 298.515 mo
60.7079 298.515 li
60.7079 292.984 li
66.2381 292.984 li
66.2381 298.515 li
cp
.223529 .235294 .254902 rgb
f
71.9539 298.015 mo
67.4234 298.015 li
67.4234 293.484 li
71.9539 293.484 li
71.9539 298.015 li
cp
1 .419608 .407843 rgb
f
67.9237 297.515 mo
71.4539 297.515 li
71.4539 293.984 li
67.9237 293.984 li
67.9237 297.515 li
cp
72.4539 298.515 mo
66.9237 298.515 li
66.9237 292.984 li
72.4539 292.984 li
72.4539 298.515 li
cp
.223529 .235294 .254902 rgb
f
193.426 47.654 mo
191.736 47.654 190.105 47.9077 188.567 48.3755 cv
187.166 39.1031 179.163 31.9955 169.5 31.9955 cv
159.837 31.9955 151.834 39.1031 150.433 48.3755 cv
148.895 47.9077 147.264 47.654 145.574 47.654 cv
136.364 47.654 128.898 55.1198 128.898 64.3293 cv
128.898 73.5388 136.364 81.0046 145.574 81.0046 cv
193.426 81.0046 li
202.636 81.0046 210.102 73.5388 210.102 64.3293 cv
210.102 55.1198 202.636 47.654 193.426 47.654 cv
cp
1 .419608 .407843 rgb
f
145.574 48.1541 mo
136.655 48.1541 129.398 55.4104 129.398 64.3293 cv
129.398 73.2483 136.655 80.5046 145.574 80.5046 cv
193.426 80.5046 li
202.345 80.5046 209.602 73.2483 209.602 64.3293 cv
209.602 55.4104 202.345 48.1541 193.426 48.1541 cv
191.824 48.1541 190.238 48.3894 188.712 48.8538 cv
188.158 49.0217 li
188.072 48.45 li
186.698 39.3542 178.714 32.4954 169.5 32.4954 cv
160.286 32.4954 152.302 39.3542 150.927 48.45 cv
150.841 49.0222 li
150.287 48.8538 li
148.762 48.3894 147.176 48.1541 145.574 48.1541 cv
cp
193.426 81.5046 mo
145.574 81.5046 li
136.104 81.5046 128.398 73.8 128.398 64.3293 cv
128.398 54.8586 136.104 47.1541 145.574 47.1541 cv
147.084 47.1541 148.581 47.3513 150.031 47.7405 cv
151.716 38.4397 159.986 31.4954 169.5 31.4954 cv
179.015 31.4954 187.284 38.4397 188.968 47.7405 cv
190.419 47.3513 191.916 47.1541 193.426 47.1541 cv
202.896 47.1541 210.602 54.8586 210.602 64.3293 cv
210.602 73.8 202.896 81.5046 193.426 81.5046 cv
cp
.223529 .235294 .254902 rgb
f
178.176 65.1503 mo
177.89 63.0119 179.391 61.0463 181.529 60.7598 cv
183.668 60.4733 185.633 61.9745 185.92 64.1129 cv
186.206 66.2512 184.705 68.2169 182.567 68.5034 cv
180.428 68.7898 178.463 67.2886 178.176 65.1503 cv
cp
185.168 76.1363 mo
185.293 73.4422 li
185.281 73.3482 185.291 73.2563 185.315 73.1696 cv
185.928 72.9356 186.507 72.6388 187.044 72.2876 cv
187.246 72.2285 187.47 72.262 187.648 72.3957 cv
190.05 73.6238 li
190.299 73.8141 190.655 73.7664 190.846 73.5171 cv
190.846 73.517 li
192.496 71.3568 li
192.686 71.1075 192.638 70.7511 192.389 70.5607 cv
190.572 68.5671 li
190.497 68.5089 190.439 68.4366 190.395 68.3576 cv
190.658 67.7701 190.86 67.1522 190.994 66.5126 cv
191.095 66.3278 191.278 66.1929 191.498 66.1618 cv
194.064 65.3319 li
194.375 65.2903 194.594 65.0045 194.552 64.6936 cv
194.552 64.6935 li
194.191 61.9994 li
194.149 61.6885 193.864 61.4702 193.553 61.5119 cv
190.858 61.3867 li
190.764 61.3987 190.673 61.389 190.586 61.3644 cv
190.352 60.7514 190.055 60.1729 189.704 59.6356 cv
189.645 59.4334 189.678 59.2091 189.812 59.0316 cv
191.04 56.6298 li
191.23 56.3806 191.183 56.0241 190.934 55.8337 cv
190.933 55.8337 li
188.773 54.1839 li
188.524 53.9935 188.167 54.0412 187.977 54.2905 cv
185.983 56.1071 li
185.925 56.1824 185.853 56.2406 185.774 56.2846 cv
185.186 56.0218 184.568 55.8197 183.929 55.6852 cv
183.744 55.5841 183.609 55.4018 183.578 55.1818 cv
182.748 52.6151 li
182.707 52.3042 182.421 52.0859 182.11 52.1276 cv
182.11 52.1276 li
179.416 52.4885 li
179.105 52.5302 178.887 52.816 178.928 53.1269 cv
178.803 55.821 li
178.815 55.915 178.805 56.0069 178.781 56.0936 cv
178.168 56.3276 177.589 56.6244 177.052 56.9756 cv
176.85 57.0347 176.625 57.0012 176.448 56.8675 cv
174.046 55.6394 li
173.797 55.4491 173.44 55.4968 173.25 55.7461 cv
173.25 55.7461 li
171.6 57.9064 li
171.41 58.1557 171.458 58.5121 171.707 58.7025 cv
173.523 60.6961 li
173.599 60.7543 173.657 60.8266 173.701 60.9056 cv
173.438 61.493 173.236 62.1111 173.102 62.7507 cv
173 62.9354 172.818 63.0703 172.598 63.1013 cv
170.031 63.9312 li
169.721 63.9729 169.502 64.2587 169.544 64.5696 cv
169.544 64.5696 li
169.905 67.2638 li
169.947 67.5747 170.232 67.793 170.543 67.7513 cv
173.237 67.8765 li
173.331 67.8645 173.423 67.8742 173.51 67.8987 cv
173.744 68.5117 174.041 69.0903 174.392 69.6275 cv
174.451 69.8297 174.417 70.0541 174.284 70.2316 cv
173.056 72.6333 li
172.865 72.8826 172.913 73.239 173.162 73.4294 cv
173.162 73.4294 li
175.323 75.0793 li
175.572 75.2697 175.928 75.2219 176.119 74.9727 cv
178.112 73.156 li
178.171 73.0808 178.243 73.0226 178.322 72.9785 cv
178.909 73.2414 179.527 73.4434 180.167 73.5779 cv
180.352 73.6791 180.487 73.8614 180.518 74.0814 cv
181.348 76.6481 li
181.389 76.959 181.675 77.1773 181.986 77.1356 cv
181.986 77.1356 li
184.68 76.7747 li
184.991 76.733 185.209 76.4472 185.168 76.1363 cv
cp
.992157 .721569 .0745098 rgb
f
182.053 61.2246 mo
181.903 61.2246 181.749 61.2349 181.596 61.2554 cv
179.735 61.5049 178.422 63.2222 178.671 65.084 cv
178.917 66.9185 180.628 68.2593 182.5 68.0078 cv
183.402 67.8868 184.203 67.4219 184.755 66.6988 cv
185.307 65.9756 185.545 65.0811 185.424 64.1792 cv
185.199 62.4947 183.749 61.2246 182.053 61.2246 cv
cp
182.043 69.0386 mo
179.848 69.0386 177.972 67.3955 177.681 65.2168 cv
177.359 62.8086 179.055 60.5869 181.463 60.2642 cv
183.897 59.9346 186.098 61.6744 186.414 64.0464 cv
186.572 65.2129 186.264 66.3702 185.55 67.3062 cv
184.835 68.2412 183.799 68.8428 182.633 68.9991 cv
182.435 69.0254 182.238 69.0386 182.043 69.0386 cv
cp
178.297 72.42 mo
178.526 72.522 li
179.086 72.7725 179.673 72.9629 180.27 73.0884 cv
180.409 73.1397 li
180.735 73.3194 180.961 73.6451 181.013 74.0113 cv
181.91 76.6407 li
181.91 77.1407 li
181.919 76.6402 li
184.614 76.2788 li
184.608 76.2339 li
184.668 76.1133 li
184.793 73.419 li
184.777 73.3492 184.789 73.191 184.833 73.0342 cv
184.902 72.792 li
185.137 72.7022 li
185.707 72.4844 186.257 72.2041 186.77 71.8692 cv
186.904 71.8077 li
187.262 71.7036 187.652 71.773 187.949 71.9961 cv
190.394 73.2403 li
192.098 71.0537 li
192.063 71.0264 li
192.02 70.8975 li
190.204 68.9038 li
190.142 68.8658 190.038 68.7437 189.957 68.6001 cv
189.836 68.3819 li
189.939 68.1534 li
190.189 67.5938 190.379 67.0074 190.505 66.4097 cv
190.555 66.274 li
190.734 65.9458 191.059 65.7188 191.427 65.6665 cv
194.552 64.6934 li
194.057 64.7598 li
193.696 62.066 li
193.651 62.0718 li
193.529 62.0113 li
190.835 61.8863 li
190.665 61.8897 190.556 61.8755 190.448 61.8448 cv
190.208 61.7754 li
190.12 61.543 li
189.9 60.9698 189.62 60.4204 189.286 59.9097 cv
189.223 59.7744 li
189.12 59.4156 189.19 59.0254 189.413 58.7305 cv
190.629 56.231 li
188.469 54.5811 li
188.442 54.6167 li
188.314 54.6602 li
186.321 56.4766 li
186.281 56.5391 186.16 56.6426 186.017 56.7217 cv
185.798 56.8433 li
185.57 56.7412 li
185.011 56.4912 184.424 56.3003 183.826 56.1744 cv
183.69 56.1241 li
183.361 55.9449 183.134 55.6177 183.083 55.2495 cv
182.186 52.6226 li
179.482 52.9839 li
179.488 53.0288 li
179.427 53.1499 li
179.302 55.8438 li
179.319 55.9141 179.306 56.0723 179.262 56.229 cv
179.194 56.4712 li
178.958 56.5611 li
178.388 56.7788 177.838 57.0591 177.326 57.3941 cv
177.193 57.4556 li
176.833 57.5606 176.443 57.4898 176.147 57.2666 cv
173.703 56.023 li
171.997 58.21 li
172.033 58.2369 li
172.076 58.3658 li
173.893 60.3589 li
173.955 60.398 174.058 60.5196 174.138 60.6631 cv
174.259 60.8819 li
174.157 61.1099 li
173.907 61.6695 173.716 62.2559 173.591 62.8531 cv
173.54 62.9912 li
173.361 63.3189 173.035 63.545 172.667 63.5962 cv
169.543 64.5694 li
170.038 64.503 li
170.4 67.1973 li
170.445 67.1914 li
170.567 67.2515 li
173.261 67.377 li
173.427 67.3692 173.537 67.3868 173.645 67.417 cv
173.888 67.4854 li
173.978 67.7207 li
174.195 68.292 174.475 68.8418 174.81 69.3535 cv
174.872 69.4883 li
174.976 69.8472 174.906 70.2378 174.683 70.5327 cv
173.163 73.4292 li
173.466 73.0318 li
175.626 74.6817 li
175.654 74.646 li
175.782 74.6031 li
177.776 72.7862 li
177.812 72.7261 177.934 72.6221 178.079 72.5415 cv
178.297 72.42 li
cp
181.91 77.6407 mo
181.377 77.6407 180.923 77.2427 180.852 76.7149 cv
180.042 74.2354 li
180.022 74.1333 179.998 74.0791 179.966 74.0459 cv
179.437 73.9287 178.915 73.7661 178.412 73.5606 cv
176.455 75.3423 li
176.21 75.6831 175.473 75.8238 175.019 75.4761 cv
172.859 73.8267 li
172.632 73.6534 172.487 73.4024 172.449 73.1197 cv
172.411 72.8369 172.486 72.5562 172.659 72.3296 cv
173.838 70.0039 li
173.9 69.9151 173.915 69.854 173.917 69.814 cv
173.625 69.357 173.371 68.8741 173.162 68.3736 cv
170.52 68.2505 li
170.516 68.2505 170.512 68.2505 170.507 68.2505 cv
169.928 68.2505 169.48 67.8545 169.41 67.3306 cv
169.048 64.6358 li
168.97 64.0513 169.382 63.5132 169.965 63.4356 cv
172.444 62.6255 li
172.546 62.6055 172.601 62.5816 172.633 62.5498 cv
172.75 62.0201 172.913 61.4986 173.12 60.9942 cv
171.337 59.0396 li
170.935 58.7422 170.845 58.0708 171.203 57.6031 cv
172.853 55.4424 li
173.2 54.9888 173.892 54.8931 174.35 55.2417 cv
176.675 56.4219 li
176.788 56.4976 176.83 56.5035 176.857 56.5035 cv
177.274 56.2329 177.776 55.9678 178.306 55.7452 cv
178.429 53.104 li
178.354 52.6104 178.765 52.0718 179.348 51.9927 cv
182.186 51.6226 li
182.717 51.6226 183.172 52.0205 183.244 52.5484 cv
184.054 55.0279 li
184.074 55.1343 184.106 55.1885 184.132 55.2173 cv
184.662 55.335 185.182 55.4976 185.685 55.7027 cv
187.64 53.9209 li
187.884 53.5791 188.619 53.438 189.077 53.7862 cv
191.237 55.4361 li
191.463 55.6089 191.61 55.8599 191.648 56.1426 cv
191.686 56.4258 191.611 56.7066 191.438 56.9331 cv
190.257 59.2593 li
190.197 59.3482 190.18 59.4092 190.178 59.4493 cv
190.47 59.9058 190.723 60.3887 190.934 60.8897 cv
193.576 61.0122 li
194.192 60.9976 194.618 61.4058 194.687 61.9341 cv
195.047 64.627 li
195.124 65.211 194.713 65.7491 194.13 65.8277 cv
191.651 66.6372 li
191.549 66.6573 191.496 66.6812 191.463 66.7129 cv
191.345 67.2427 191.182 67.7642 190.977 68.2681 cv
192.758 70.2237 li
193.161 70.521 193.25 71.1924 192.893 71.6602 cv
191.244 73.8203 li
190.896 74.274 190.202 74.3682 189.746 74.0215 cv
187.42 72.8409 li
187.316 72.7715 187.28 72.7593 187.24 72.7593 cv
186.822 73.0303 186.32 73.2954 185.789 73.5181 cv
185.666 76.1592 li
185.701 76.3521 185.626 76.6328 185.454 76.8594 cv
185.281 77.0865 185.03 77.2325 184.746 77.2701 cv
181.91 77.6407 li
cp
.223529 .235294 .254902 rgb
f
166.612 44.6862 mo
168.155 44.3085 169.713 45.2536 170.09 46.7972 cv
170.468 48.3407 169.523 49.8982 167.979 50.2759 cv
166.436 50.6536 164.878 49.7085 164.501 48.1649 cv
164.123 46.6214 165.068 45.0639 166.612 44.6862 cv
cp
159.115 50.6692 mo
161.098 50.5493 li
161.166 50.5331 161.234 50.533 161.299 50.5442 cv
161.518 50.9748 161.781 51.3751 162.081 51.741 cv
162.14 51.8845 162.133 52.0514 162.049 52.1919 cv
161.338 54.0473 li
161.218 54.2448 161.281 54.5021 161.479 54.6219 cv
161.479 54.6219 li
163.19 55.6606 li
163.388 55.7805 163.645 55.7175 163.765 55.52 cv
165.083 54.0331 li
165.119 53.9734 165.168 53.925 165.222 53.8866 cv
165.673 54.033 166.141 54.1324 166.62 54.1807 cv
166.764 54.2403 166.877 54.3632 166.917 54.5219 cv
167.726 56.3365 li
167.781 56.5609 168.007 56.6983 168.232 56.6434 cv
168.232 56.6434 li
170.177 56.1675 li
170.401 56.1126 170.538 55.8862 170.484 55.6617 cv
170.364 53.6788 li
170.347 53.6109 170.347 53.5429 170.359 53.4774 cv
170.789 53.2579 171.189 52.9951 171.555 52.6958 cv
171.699 52.6366 171.866 52.6435 172.006 52.7275 cv
173.862 53.4383 li
174.059 53.5581 174.316 53.4952 174.436 53.2977 cv
174.436 53.2977 li
175.475 51.586 li
175.595 51.3885 175.532 51.1312 175.334 51.0113 cv
173.847 49.6939 li
173.788 49.6572 173.739 49.6089 173.701 49.5544 cv
173.847 49.1036 173.947 48.6351 173.995 48.1561 cv
174.055 48.0129 174.178 47.8998 174.336 47.8598 cv
176.151 47.0504 li
176.375 46.9955 176.513 46.7691 176.458 46.5447 cv
176.458 46.5446 li
175.982 44.5999 li
175.927 44.3754 175.701 44.238 175.476 44.2929 cv
173.493 44.4128 li
173.425 44.429 173.357 44.4291 173.292 44.4179 cv
173.072 43.9873 172.809 43.587 172.51 43.2211 cv
172.451 43.0776 172.458 42.9107 172.542 42.7702 cv
173.253 40.9148 li
173.372 40.7173 173.31 40.46 173.112 40.3402 cv
173.112 40.3401 li
171.4 39.3015 li
171.203 39.1816 170.946 39.2446 170.826 39.4421 cv
169.508 40.929 li
169.472 40.9887 169.423 41.0371 169.369 41.0755 cv
168.918 40.9291 168.449 40.8297 167.97 40.7814 cv
167.827 40.7218 167.714 40.5989 167.674 40.4402 cv
166.865 38.6256 li
166.81 38.4012 166.583 38.2638 166.359 38.3187 cv
166.359 38.3187 li
164.414 38.7946 li
164.19 38.8495 164.052 39.076 164.107 39.3004 cv
164.227 41.2833 li
164.243 41.3512 164.243 41.4192 164.232 41.4847 cv
163.802 41.7042 163.401 41.967 163.035 42.2663 cv
162.892 42.3255 162.725 42.3186 162.585 42.2346 cv
160.729 41.5238 li
160.532 41.4039 160.274 41.4669 160.155 41.6644 cv
160.155 41.6644 li
159.116 43.3761 li
158.996 43.5736 159.059 43.8309 159.257 43.9508 cv
160.743 45.2681 li
160.803 45.3049 160.851 45.3532 160.89 45.4077 cv
160.743 45.8585 160.644 46.327 160.596 46.806 cv
160.536 46.9492 160.413 47.0624 160.255 47.1023 cv
158.44 47.9117 li
158.216 47.9666 158.078 48.193 158.133 48.4175 cv
158.133 48.4175 li
158.609 50.3622 li
158.664 50.5867 158.89 50.7241 159.115 50.6692 cv
cp
1 1 .933333 rgb
f
167.298 45.1033 mo
167.107 45.1033 166.917 45.1262 166.73 45.1721 cv
166.113 45.323 165.593 45.7048 165.264 46.2478 cv
164.934 46.7908 164.836 47.429 164.986 48.0457 cv
165.292 49.2976 166.593 50.1023 167.86 49.7903 cv
169.134 49.4788 169.916 48.1892 169.604 46.9163 cv
169.344 45.8484 168.395 45.1033 167.298 45.1033 cv
cp
167.294 50.8591 mo
165.733 50.8591 164.386 49.8 164.016 48.2834 cv
163.801 47.4075 163.94 46.5002 164.408 45.7288 cv
164.876 44.9578 165.616 44.4148 166.492 44.2004 cv
166.757 44.136 167.028 44.1033 167.298 44.1033 cv
168.857 44.1033 170.205 45.1624 170.575 46.6785 cv
171.019 48.4871 169.907 50.3186 168.099 50.762 cv
167.834 50.8264 167.563 50.8591 167.294 50.8591 cv
cp
165.136 53.3328 mo
165.376 53.4109 li
165.797 53.5476 166.232 53.6394 166.67 53.6833 cv
166.811 53.719 li
167.104 53.8406 167.325 54.095 167.401 54.3992 cv
168.183 56.1331 li
168.145 56.1497 li
169.992 55.698 li
169.864 53.7092 li
169.847 53.6633 169.843 53.5305 169.865 53.3962 cv
169.906 53.1467 li
170.132 53.0315 li
170.523 52.8323 170.896 52.5891 171.239 52.3083 cv
171.365 52.2332 li
171.656 52.1125 171.996 52.1379 172.264 52.2986 cv
174.04 52.9714 li
175.047 51.3269 li
173.516 50.0681 li
173.469 50.0471 173.371 49.9543 173.292 49.842 cv
173.148 49.6375 li
173.226 49.3997 li
173.361 48.9832 173.452 48.5476 173.498 48.1052 cv
173.533 47.9636 li
173.655 47.6721 173.909 47.4519 174.213 47.3748 cv
175.946 46.594 li
175.949 46.5925 175.952 46.5916 175.954 46.5911 cv
175.512 44.7849 li
173.523 44.9119 li
173.534 44.9167 173.459 44.9255 173.383 44.9255 cv
172.961 44.8679 li
172.847 44.6448 li
172.646 44.2517 172.402 43.8791 172.123 43.5378 cv
172.047 43.4099 li
171.928 43.1174 171.952 42.783 172.112 42.5139 cv
172.786 40.7361 li
172.787 40.7332 172.788 40.7307 172.789 40.7288 cv
171.141 39.7288 li
169.882 41.2605 li
169.867 41.3015 169.774 41.4001 169.661 41.4817 cv
169.455 41.6291 li
169.215 41.551 li
168.796 41.4148 168.36 41.3235 167.921 41.2791 cv
167.779 41.2434 li
167.486 41.1218 167.266 40.8674 167.189 40.5627 cv
166.408 38.8293 li
164.599 39.2644 li
164.727 41.2532 li
164.744 41.2986 164.748 41.4314 164.726 41.5657 cv
164.685 41.8152 li
164.46 41.9299 li
164.066 42.1306 163.693 42.3743 163.352 42.6536 cv
163.226 42.7288 li
162.936 42.8489 162.595 42.824 162.327 42.6633 cv
160.551 41.9905 li
159.544 43.6355 li
161.075 44.8943 li
161.12 44.9133 161.219 45.0066 161.299 45.1199 cv
161.442 45.3245 li
161.365 45.5618 li
161.229 45.9792 161.138 46.4148 161.093 46.8567 cv
161.058 46.9983 li
160.936 47.2898 160.682 47.51 160.378 47.5872 cv
158.645 48.3684 li
158.642 48.3699 158.639 48.3708 158.637 48.3713 cv
159.079 50.177 li
161.067 50.05 li
161.057 50.0452 161.132 50.0364 161.208 50.0364 cv
161.63 50.094 li
161.744 50.3171 li
161.945 50.7112 162.188 51.0837 162.468 51.4241 cv
162.544 51.552 li
162.663 51.845 162.639 52.1799 162.477 52.4485 cv
161.805 54.2258 li
161.804 54.2288 161.803 54.2312 161.802 54.2332 cv
163.45 55.2332 li
164.709 53.7014 li
164.724 53.6604 164.816 53.5618 164.93 53.4802 cv
165.136 53.3328 li
cp
168.132 57.1555 mo
167.709 57.1555 167.343 56.8684 167.24 56.4573 cv
166.46 54.7253 li
166.477 54.6682 li
166.104 54.6257 165.734 54.554 165.371 54.4534 cv
164.139 55.8513 li
163.971 56.1575 163.348 56.3406 162.931 56.0876 cv
161.219 55.0491 li
160.787 54.7874 160.648 54.2224 160.909 53.7893 cv
161.635 51.9841 li
161.4 51.6907 161.189 51.3782 161.004 51.0505 cv
159.145 51.1682 li
159.162 51.1726 159.089 51.1814 159.016 51.1814 cv
159.016 51.1814 li
158.591 51.1814 158.224 50.8928 158.124 50.4802 cv
157.647 48.5369 li
157.527 48.0437 157.83 47.5457 158.322 47.426 cv
160.051 46.6458 li
160.108 46.6624 li
160.151 46.2878 160.224 45.9172 160.323 45.5564 cv
158.925 44.325 li
158.787 44.2512 158.64 44.0496 158.581 43.8113 cv
158.523 43.5725 158.561 43.3259 158.689 43.116 cv
159.727 41.405 li
159.983 40.9856 160.563 40.842 160.988 41.0955 cv
162.792 41.8201 li
163.086 41.5862 163.398 41.3752 163.726 41.1897 cv
163.608 39.3308 li
163.563 39.1809 163.602 38.9343 163.729 38.7249 cv
163.855 38.5149 164.057 38.3669 164.296 38.3088 cv
166.459 37.8064 li
166.882 37.8064 167.249 38.094 167.351 38.5056 cv
168.131 40.2366 li
168.113 40.2942 li
168.487 40.3367 168.857 40.4084 169.219 40.5085 cv
170.451 39.1106 li
170.623 38.8044 171.244 38.6204 171.66 38.8743 cv
173.372 39.9128 li
173.804 40.1755 173.942 40.741 173.681 41.1731 cv
172.956 42.9778 li
173.19 43.2717 173.401 43.5847 173.587 43.9114 cv
175.445 43.7937 li
175.429 43.7893 175.502 43.7805 175.575 43.7805 cv
176 43.7805 176.367 44.0691 176.467 44.4817 cv
176.943 46.4255 li
177.063 46.9177 176.761 47.4153 176.27 47.5359 cv
174.54 48.3162 li
174.482 48.2996 li
174.439 48.6746 174.367 49.0452 174.268 49.4055 cv
175.666 50.6375 li
175.803 50.7102 175.95 50.9114 176.009 51.1497 cv
176.067 51.3884 176.029 51.6355 175.902 51.8459 cv
174.864 53.5569 li
174.609 53.9758 174.026 54.1199 173.602 53.8665 cv
171.799 53.1418 li
171.504 53.3762 171.191 53.5876 170.865 53.7722 cv
170.982 55.6316 li
171.089 56.0349 170.787 56.5325 170.296 56.6531 cv
168.351 57.1291 li
168.279 57.1467 168.205 57.1555 168.132 57.1555 cv
cp
.223529 .235294 .254902 rgb
f
158.926 61.9481 mo
160.017 61.6811 161.118 62.3492 161.385 63.4404 cv
161.652 64.5315 160.984 65.6325 159.893 65.8995 cv
158.802 66.1665 157.701 65.4984 157.434 64.4072 cv
157.167 63.3161 157.835 62.2151 158.926 61.9481 cv
cp
153.626 66.1775 mo
155.028 66.0927 li
155.076 66.0813 155.124 66.0812 155.171 66.0891 cv
155.326 66.3935 155.511 66.6766 155.723 66.9352 cv
155.765 67.0366 155.76 67.1546 155.701 67.2539 cv
155.198 68.5655 li
155.113 68.7051 155.158 68.887 155.298 68.9718 cv
155.298 68.9718 li
156.508 69.706 li
156.647 69.7907 156.829 69.7462 156.914 69.6066 cv
157.845 68.5555 li
157.871 68.5133 157.905 68.4791 157.944 68.4519 cv
158.262 68.5554 158.594 68.6257 158.932 68.6598 cv
159.034 68.7019 159.113 68.7888 159.142 68.901 cv
159.714 70.1838 li
159.753 70.3424 159.913 70.4396 160.072 70.4007 cv
160.072 70.4007 li
161.446 70.0643 li
161.605 70.0255 161.702 69.8654 161.663 69.7068 cv
161.578 68.305 li
161.567 68.2571 161.567 68.2089 161.575 68.1627 cv
161.879 68.0075 162.162 67.8218 162.421 67.6101 cv
162.522 67.5683 162.64 67.5732 162.74 67.6325 cv
164.051 68.135 li
164.191 68.2197 164.373 68.1752 164.457 68.0356 cv
164.457 68.0356 li
165.192 66.8256 li
165.276 66.686 165.232 66.5041 165.092 66.4194 cv
164.041 65.4881 li
163.999 65.4621 163.965 65.428 163.938 65.3895 cv
164.041 65.0708 164.111 64.7396 164.146 64.401 cv
164.188 64.2997 164.275 64.2198 164.387 64.1915 cv
165.669 63.6194 li
165.828 63.5806 165.925 63.4205 165.886 63.2618 cv
165.886 63.2618 li
165.55 61.887 li
165.511 61.7284 165.351 61.6313 165.192 61.6701 cv
163.791 61.7548 li
163.743 61.7662 163.695 61.7663 163.648 61.7584 cv
163.493 61.454 163.307 61.171 163.096 60.9124 cv
163.054 60.811 163.059 60.693 163.118 60.5937 cv
163.621 59.2821 li
163.705 59.1424 163.661 58.9605 163.521 58.8758 cv
163.521 58.8758 li
162.311 58.1416 li
162.172 58.0568 161.99 58.1013 161.905 58.241 cv
160.974 59.2921 li
160.948 59.3343 160.914 59.3685 160.875 59.3956 cv
160.557 59.2921 160.225 59.2219 159.887 59.1877 cv
159.785 59.1456 159.705 59.0587 159.677 58.9465 cv
159.105 57.6638 li
159.066 57.5052 158.906 57.408 158.748 57.4468 cv
158.748 57.4468 li
157.373 57.7832 li
157.214 57.822 157.117 57.9821 157.156 58.1408 cv
157.24 59.5425 li
157.252 59.5905 157.252 59.6386 157.244 59.6849 cv
156.94 59.84 156.657 60.0258 156.398 60.2374 cv
156.297 60.2793 156.179 60.2744 156.079 60.215 cv
154.768 59.7126 li
154.628 59.6278 154.446 59.6723 154.361 59.812 cv
154.361 59.812 li
153.627 61.022 li
153.543 61.1616 153.587 61.3435 153.727 61.4282 cv
154.778 62.3595 li
154.82 62.3854 154.854 62.4196 154.881 62.4581 cv
154.778 62.7768 154.708 63.108 154.673 63.4466 cv
154.631 63.5478 154.544 63.6278 154.432 63.6561 cv
153.149 64.2282 li
152.991 64.267 152.894 64.4271 152.933 64.5857 cv
152.933 64.5857 li
153.269 65.9605 li
153.308 66.1192 153.468 66.2163 153.626 66.1775 cv
cp
.333333 .839216 .823529 rgb
f
159.41 62.3893 mo
159.288 62.3893 159.165 62.4044 159.044 62.4337 cv
158.224 62.6344 157.719 63.4669 157.919 64.2887 cv
158.118 65.0973 158.965 65.6173 159.773 65.4137 cv
160.172 65.3165 160.509 65.0699 160.721 64.7193 cv
160.934 64.3693 160.997 63.9576 160.899 63.5597 cv
160.73 62.8702 160.119 62.3893 159.41 62.3893 cv
cp
159.407 66.4581 mo
158.238 66.4581 157.227 65.6637 156.948 64.5265 cv
156.616 63.1686 157.45 61.7945 158.807 61.462 cv
160.151 61.1315 161.545 61.9874 161.87 63.3219 cv
162.031 63.9786 161.927 64.6598 161.576 65.2384 cv
161.225 65.817 160.669 66.2242 160.012 66.3854 cv
159.813 66.4337 159.61 66.4581 159.407 66.4581 cv
cp
157.857 67.8981 mo
158.098 67.9762 li
158.386 68.0694 158.684 68.1319 158.982 68.1622 cv
159.125 68.1984 li
159.374 68.3019 159.561 68.5192 159.626 68.7789 cv
160.122 69.8732 li
161.164 69.6183 li
161.079 68.3351 li
161.065 68.3053 161.063 68.193 161.082 68.0797 cv
161.124 67.8317 li
161.348 67.7174 li
161.617 67.5797 161.872 67.4132 162.105 67.2233 cv
162.231 67.1471 li
162.48 67.0455 162.768 67.066 162.996 67.2037 cv
164.12 67.6266 li
164.677 66.7101 li
163.709 65.8619 li
163.682 65.8536 163.598 65.7745 163.529 65.6783 cv
163.385 65.4733 li
163.462 65.2345 li
163.555 64.9484 163.618 64.651 163.648 64.3507 cv
163.684 64.2101 li
163.786 63.9606 164.004 63.7726 164.265 63.7067 cv
165.359 63.211 li
165.105 62.1715 li
163.713 62.2638 li
163.662 62.2638 163.612 62.2594 163.564 62.2511 cv
163.317 62.2091 li
163.203 61.9855 li
163.065 61.7164 162.899 61.462 162.709 61.2291 cv
162.634 61.1041 li
162.53 60.8541 162.551 60.567 162.689 60.3365 cv
163.113 59.2125 li
162.196 58.6564 li
161.348 59.6236 li
161.341 59.6505 161.261 59.7359 161.162 59.8053 cv
160.957 59.9484 li
160.721 59.8712 li
160.434 59.7779 160.137 59.7154 159.837 59.6852 cv
159.695 59.6495 li
159.446 59.5465 159.258 59.3292 159.192 59.0685 cv
158.695 57.9693 li
157.655 58.2281 li
157.739 59.5128 li
157.753 59.5353 157.757 59.6515 157.737 59.7687 cv
157.695 60.0162 li
157.471 60.13 li
157.202 60.2672 156.948 60.4332 156.716 60.6241 cv
156.59 60.6993 li
156.341 60.8024 156.053 60.7814 155.822 60.6442 cv
154.698 60.2208 li
154.142 61.1373 li
155.109 61.9855 li
155.135 61.9908 155.221 62.0709 155.29 62.1691 cv
155.435 62.3736 li
155.357 62.6124 li
155.264 62.8995 155.201 63.1974 155.171 63.4967 cv
155.135 63.6412 li
155.03 63.8883 154.813 64.0748 154.556 64.1402 cv
153.46 64.6363 li
153.714 65.6759 li
155.107 65.5836 li
155.156 65.5836 155.205 65.5875 155.253 65.5958 cv
155.502 65.6373 li
155.616 65.8619 li
155.754 66.131 155.92 66.3854 156.11 66.6183 cv
156.188 66.7482 li
156.289 66.9986 156.269 67.2755 156.132 67.5074 cv
155.706 68.6349 li
156.623 69.191 li
157.471 68.2237 li
157.48 68.1949 157.559 68.1129 157.651 68.0455 cv
157.857 67.8981 li
cp
160.001 70.9093 mo
159.634 70.9093 159.316 70.6598 159.229 70.3033 cv
158.699 69.1354 li
158.496 69.1075 158.295 69.068 158.096 69.0167 cv
157.288 69.9381 li
157.149 70.1886 156.607 70.3512 156.249 70.1339 cv
155.038 69.399 li
154.663 69.1705 154.543 68.6803 154.772 68.3058 cv
155.223 67.107 li
155.098 66.9435 154.983 66.7731 154.879 66.5958 cv
153.556 66.6861 li
153.188 66.6861 152.871 66.4366 152.783 66.0802 cv
152.447 64.7042 li
152.397 64.4986 152.429 64.2848 152.539 64.1026 cv
152.649 63.9205 152.824 63.7926 153.031 63.7423 cv
154.198 63.213 li
154.226 63.0104 154.266 62.8087 154.317 62.61 cv
153.395 61.8024 li
153.094 61.6285 152.974 61.1388 153.198 60.7643 cv
153.934 59.5528 li
154.154 59.1905 154.668 59.066 155.027 59.2853 cv
156.227 59.7359 li
156.39 59.6119 156.561 59.4972 156.737 59.3927 cv
156.657 58.1705 li
156.62 58.0533 156.652 57.839 156.763 57.6568 cv
156.874 57.4752 157.049 57.3473 157.255 57.2975 cv
158.818 56.9381 li
159.186 56.9381 159.503 57.1876 159.591 57.5441 cv
160.119 58.712 li
160.323 58.7399 160.525 58.7794 160.724 58.8312 cv
161.531 57.9093 li
161.67 57.6593 162.209 57.4952 162.571 57.7145 cv
163.781 58.4479 li
164.154 58.6754 164.274 59.1651 164.05 59.5397 cv
163.597 60.7408 li
163.722 60.9039 163.836 61.0748 163.94 61.2516 cv
165.263 61.1617 li
165.63 61.1617 165.947 61.4108 166.035 61.7672 cv
166.372 63.1427 li
166.476 63.5709 166.213 64.0016 165.788 64.1051 cv
164.621 64.6344 li
164.594 64.8375 164.554 65.0392 164.502 65.2379 cv
165.424 66.0455 li
165.532 66.1007 165.66 66.275 165.712 66.4816 cv
165.763 66.6886 165.73 66.9034 165.618 67.0856 cv
164.885 68.295 li
164.667 68.6549 164.151 68.7823 163.791 68.5611 cv
162.593 68.1114 li
162.43 68.2355 162.259 68.3497 162.082 68.4542 cv
162.162 69.6764 li
162.199 69.7936 162.167 70.0074 162.057 70.1896 cv
161.946 70.3717 161.772 70.4996 161.564 70.5499 cv
160.001 70.9093 li
cp
.223529 .235294 .254902 rgb
f
180.718 426.921 mo
144.38 426.921 li
144.38 359.914 li
194.619 359.914 li
194.619 413.02 li
180.718 426.921 li
cp
1 1 .933333 rgb
f
144.881 426.421 mo
180.512 426.421 li
194.119 412.813 li
194.119 360.414 li
144.881 360.414 li
144.881 426.421 li
cp
180.719 427.421 mo
144.381 427.421 li
144.104 427.421 143.881 427.198 143.881 426.921 cv
143.881 359.914 li
143.881 359.637 144.104 359.414 144.381 359.414 cv
194.619 359.414 li
194.895 359.414 195.119 359.637 195.119 359.914 cv
195.119 413.02 li
195.119 413.153 195.066 413.28 194.973 413.374 cv
181.072 427.275 li
180.979 427.369 180.852 427.421 180.719 427.421 cv
cp
.223529 .235294 .254902 rgb
f
180.715 413.017 mo
194.619 413.017 li
180.715 426.921 li
180.715 413.017 li
cp
1 1 .933333 rgb
f
181.215 413.516 mo
181.215 425.714 li
193.412 413.516 li
181.215 413.516 li
cp
180.715 427.421 mo
180.65 427.421 180.585 427.409 180.523 427.383 cv
180.337 427.306 180.215 427.124 180.215 426.921 cv
180.215 413.016 li
180.215 412.74 180.438 412.516 180.715 412.516 cv
194.619 412.516 li
194.821 412.516 195.004 412.638 195.081 412.825 cv
195.158 413.011 195.115 413.227 194.973 413.37 cv
181.068 427.275 li
180.973 427.371 180.845 427.421 180.715 427.421 cv
cp
.223529 .235294 .254902 rgb
f
169.447 394.389 mo
169.217 394.389 169.031 394.203 169.031 393.972 cv
169.031 367.407 li
169.031 367.177 169.217 366.991 169.447 366.991 cv
169.677 366.991 169.863 367.177 169.863 367.407 cv
169.863 393.972 li
169.863 394.203 169.677 394.389 169.447 394.389 cv
cp
f
184.591 396.897 mo
154.303 396.897 li
154.073 396.897 153.887 396.711 153.887 396.481 cv
153.887 396.251 154.073 396.065 154.303 396.065 cv
184.591 396.065 li
184.821 396.065 185.008 396.251 185.008 396.481 cv
185.008 396.711 184.821 396.897 184.591 396.897 cv
cp
f
154.303 417.959 mo
154.073 417.959 153.887 417.772 153.887 417.542 cv
153.887 396.481 li
153.887 396.251 154.073 396.065 154.303 396.065 cv
154.534 396.065 154.72 396.251 154.72 396.481 cv
154.72 417.542 li
154.72 417.772 154.534 417.959 154.303 417.959 cv
cp
f
184.591 407.821 mo
184.361 407.821 184.175 407.635 184.175 407.405 cv
184.175 396.481 li
184.175 396.251 184.361 396.065 184.591 396.065 cv
184.821 396.065 185.008 396.251 185.008 396.481 cv
185.008 407.405 li
185.008 407.635 184.821 407.821 184.591 407.821 cv
cp
f
181.122 369.622 mo
157.878 369.622 li
157.878 365.193 li
181.122 365.193 li
181.122 369.622 li
cp
1 .419608 .407843 rgb
f
158.378 369.123 mo
180.622 369.123 li
180.622 365.693 li
158.378 365.693 li
158.378 369.123 li
cp
181.622 370.123 mo
157.378 370.123 li
157.378 364.693 li
181.622 364.693 li
181.622 370.123 li
cp
.223529 .235294 .254902 rgb
f
181.122 385.784 mo
157.878 385.784 li
157.878 382.101 li
181.122 382.101 li
181.122 385.784 li
cp
1 .419608 .407843 rgb
f
158.378 385.284 mo
180.622 385.284 li
180.622 382.601 li
158.378 382.601 li
158.378 385.284 li
cp
181.622 386.284 mo
157.378 386.284 li
157.378 381.601 li
181.622 381.601 li
181.622 386.284 li
cp
.223529 .235294 .254902 rgb
f
181.122 377.517 mo
157.878 377.517 li
157.878 373.833 li
181.122 373.833 li
181.122 377.517 li
cp
1 .419608 .407843 rgb
f
158.378 377.016 mo
180.622 377.016 li
180.622 374.333 li
158.378 374.333 li
158.378 377.016 li
cp
181.622 378.016 mo
157.378 378.016 li
157.378 373.333 li
181.622 373.333 li
181.622 378.016 li
cp
.223529 .235294 .254902 rgb
f
158.956 409.162 mo
149.651 409.162 li
149.651 404.891 li
158.956 404.891 li
158.956 409.162 li
cp
1 .419608 .407843 rgb
f
150.151 408.662 mo
158.456 408.662 li
158.456 405.391 li
150.151 405.391 li
150.151 408.662 li
cp
159.456 409.662 mo
149.151 409.662 li
149.151 404.391 li
159.456 404.391 li
159.456 409.662 li
cp
.223529 .235294 .254902 rgb
f
158.956 419.678 mo
149.651 419.678 li
149.651 415.407 li
158.956 415.407 li
158.956 419.678 li
cp
1 .419608 .407843 rgb
f
150.151 419.178 mo
158.456 419.178 li
158.456 415.907 li
150.151 415.907 li
150.151 419.178 li
cp
159.456 420.178 mo
149.151 420.178 li
149.151 414.907 li
159.456 414.907 li
159.456 420.178 li
cp
.223529 .235294 .254902 rgb
f
189.21 408.597 mo
179.906 408.597 li
179.906 404.326 li
189.21 404.326 li
189.21 408.597 li
cp
1 .419608 .407843 rgb
f
180.405 408.097 mo
188.71 408.097 li
188.71 404.826 li
180.405 404.826 li
180.405 408.097 li
cp
189.71 409.097 mo
179.405 409.097 li
179.405 403.826 li
189.71 403.826 li
189.71 409.097 li
cp
.223529 .235294 .254902 rgb
f
169.5 389.907 mo
162.925 396.481 li
169.5 403.055 li
176.074 396.481 li
169.5 389.907 li
cp
1 .419608 .407843 rgb
f
163.632 396.481 mo
169.5 402.348 li
175.367 396.481 li
169.5 390.614 li
163.632 396.481 li
cp
169.5 403.762 mo
162.218 396.481 li
169.5 389.2 li
176.781 396.481 li
169.5 403.762 li
cp
.223529 .235294 .254902 rgb
f
257.45 364.295 mo
258.415 364.201 li
258.883 364.155 259.122 363.956 259.07 363.418 cv
258.748 360.119 li
258.704 359.661 258.479 359.426 257.999 359.473 cv
256.951 359.575 li
256.352 359.634 256.279 360.071 256.307 360.357 cv
256.628 363.651 li
256.687 364.258 257.114 364.328 257.45 364.295 cv
cp
254.896 360.329 mo
254.779 359.132 255.44 358.424 256.552 358.316 cv
258.186 358.157 li
259.528 358.026 260.029 358.808 260.122 359.764 cv
260.487 363.501 li
260.602 364.687 259.993 365.345 258.891 365.453 cv
257.257 365.612 li
256.136 365.721 255.371 365.207 255.255 364.011 cv
254.896 360.329 li
cp
.992157 .721569 .0745098 rgb
f
266.113 373.596 mo
267.077 373.488 li
267.544 373.436 267.78 373.233 267.72 372.696 cv
267.351 369.402 li
267.3 368.944 267.071 368.713 266.592 368.767 cv
265.546 368.884 li
264.948 368.951 264.881 369.389 264.913 369.676 cv
265.282 372.964 li
265.35 373.57 265.778 373.634 266.113 373.596 cv
cp
263.502 369.668 mo
263.368 368.472 264.019 367.755 265.129 367.631 cv
266.76 367.448 li
268.1 367.298 268.613 368.073 268.72 369.027 cv
269.138 372.759 li
269.271 373.943 268.671 374.61 267.571 374.733 cv
265.939 374.916 li
264.82 375.041 264.048 374.538 263.914 373.344 cv
263.502 369.668 li
cp
1 .419608 .407843 rgb
f
297.829 361.653 mo
298.77 361.89 li
299.226 362.005 299.518 361.898 299.65 361.373 cv
300.459 358.159 li
300.572 357.713 300.439 357.416 299.971 357.298 cv
298.95 357.041 li
298.367 356.894 298.15 357.281 298.08 357.56 cv
297.272 360.769 li
297.123 361.361 297.502 361.57 297.829 361.653 cv
cp
296.761 357.058 mo
297.055 355.892 297.916 355.449 298.999 355.721 cv
300.591 356.122 li
301.899 356.451 302.107 357.357 301.872 358.288 cv
300.956 361.93 li
300.664 363.085 299.87 363.499 298.796 363.229 cv
297.203 362.828 li
296.112 362.553 295.564 361.811 295.858 360.646 cv
296.761 357.058 li
cp
.333333 .839216 .823529 rgb
f
295.824 372.481 mo
296.789 372.373 li
297.256 372.321 297.492 372.118 297.432 371.581 cv
297.063 368.287 li
297.011 367.829 296.783 367.598 296.304 367.652 cv
295.257 367.769 li
294.659 367.836 294.592 368.274 294.624 368.56 cv
294.993 371.849 li
295.061 372.455 295.489 372.519 295.824 372.481 cv
cp
293.213 368.552 mo
293.079 367.357 293.73 366.64 294.84 366.516 cv
296.472 366.333 li
297.812 366.183 298.324 366.958 298.431 367.912 cv
298.849 371.644 li
298.982 372.828 298.383 373.494 297.283 373.618 cv
295.651 373.801 li
294.532 373.926 293.759 373.423 293.625 372.229 cv
293.213 368.552 li
cp
f
307.496 383.633 mo
308.46 383.525 li
308.927 383.472 309.164 383.27 309.103 382.732 cv
308.734 379.439 li
308.683 378.981 308.454 378.75 307.975 378.803 cv
306.929 378.921 li
306.331 378.988 306.264 379.426 306.296 379.712 cv
306.665 383 li
306.733 383.607 307.161 383.67 307.496 383.633 cv
cp
304.885 379.704 mo
304.751 378.509 305.402 377.792 306.512 377.668 cv
308.143 377.485 li
309.483 377.334 309.996 378.109 310.103 379.064 cv
310.521 382.795 li
310.654 383.979 310.055 384.646 308.954 384.769 cv
307.322 384.952 li
306.203 385.078 305.431 384.575 305.297 383.381 cv
304.885 379.704 li
cp
1 .419608 .407843 rgb
f
282.692 423.876 mo
283.656 423.768 li
284.123 423.716 284.359 423.513 284.299 422.976 cv
283.93 419.682 li
283.879 419.224 283.65 418.993 283.171 419.047 cv
282.125 419.164 li
281.527 419.231 281.46 419.669 281.492 419.956 cv
281.861 423.244 li
281.929 423.85 282.357 423.914 282.692 423.876 cv
cp
280.081 419.948 mo
279.947 418.752 280.598 418.035 281.708 417.911 cv
283.339 417.728 li
284.679 417.578 285.192 418.353 285.299 419.307 cv
285.717 423.039 li
285.85 424.223 285.25 424.889 284.15 425.013 cv
282.518 425.196 li
281.399 425.321 280.627 424.818 280.493 423.624 cv
280.081 419.948 li
cp
f
274.699 371.264 mo
275.523 371.775 li
275.923 372.022 276.234 372.009 276.519 371.549 cv
278.264 368.732 li
278.507 368.34 278.47 368.017 278.06 367.763 cv
277.165 367.209 li
276.654 366.892 276.33 367.195 276.179 367.44 cv
274.436 370.253 li
274.115 370.771 274.412 371.086 274.699 371.264 cv
cp
275.074 366.561 mo
275.708 365.539 276.663 365.378 277.612 365.966 cv
279.008 366.831 li
280.154 367.541 280.078 368.467 279.572 369.283 cv
277.594 372.475 li
276.967 373.488 276.084 373.641 275.142 373.058 cv
273.747 372.193 li
272.789 371.6 272.493 370.728 273.126 369.706 cv
275.074 366.561 li
cp
.992157 .721569 .0745098 rgb
f
290.541 362.303 mo
291.457 361.983 li
291.901 361.828 292.086 361.578 291.908 361.067 cv
290.815 357.938 li
290.663 357.503 290.389 357.329 289.934 357.488 cv
288.94 357.835 li
288.372 358.033 288.404 358.476 288.499 358.747 cv
289.59 361.871 li
289.791 362.447 290.223 362.414 290.541 362.303 cv
cp
287.121 359.054 mo
286.725 357.918 287.2 357.074 288.254 356.706 cv
289.804 356.165 li
291.077 355.72 291.749 356.361 292.066 357.268 cv
293.304 360.813 li
293.697 361.938 293.261 362.721 292.216 363.086 cv
290.666 363.628 li
289.603 363.999 288.738 363.681 288.341 362.547 cv
287.121 359.054 li
cp
1 .419608 .407843 rgb
f
265.934 361.228 mo
266.759 361.739 li
267.159 361.986 267.469 361.973 267.754 361.513 cv
269.5 358.696 li
269.743 358.304 269.706 357.981 269.296 357.728 cv
268.401 357.173 li
267.89 356.856 267.566 357.159 267.414 357.404 cv
265.672 360.217 li
265.35 360.736 265.647 361.05 265.934 361.228 cv
cp
266.31 356.525 mo
266.943 355.503 267.898 355.342 268.848 355.93 cv
270.243 356.795 li
271.389 357.505 271.314 358.431 270.808 359.247 cv
268.83 362.439 li
268.202 363.452 267.319 363.606 266.378 363.022 cv
264.982 362.158 li
264.025 361.565 263.729 360.692 264.361 359.671 cv
266.31 356.525 li
cp
.333333 .839216 .823529 rgb
f
304.585 371.819 mo
305.409 372.33 li
305.809 372.577 306.12 372.564 306.405 372.104 cv
308.15 369.287 li
308.393 368.895 308.356 368.572 307.947 368.319 cv
307.051 367.764 li
306.54 367.447 306.216 367.75 306.065 367.995 cv
304.322 370.808 li
304.001 371.326 304.298 371.641 304.585 371.819 cv
cp
304.96 367.116 mo
305.594 366.094 306.549 365.933 307.498 366.521 cv
308.894 367.386 li
310.04 368.096 309.964 369.022 309.458 369.838 cv
307.48 373.03 li
306.853 374.043 305.97 374.197 305.029 373.613 cv
303.633 372.749 li
302.676 372.155 302.379 371.283 303.012 370.262 cv
304.96 367.116 li
cp
1 .419608 .407843 rgb
f
283.037 379.43 mo
283.861 379.941 li
284.261 380.189 284.572 380.176 284.857 379.716 cv
286.602 376.898 li
286.845 376.507 286.808 376.184 286.398 375.93 cv
285.503 375.375 li
284.992 375.059 284.668 375.362 284.517 375.606 cv
282.774 378.419 li
282.452 378.938 282.75 379.253 283.037 379.43 cv
cp
283.412 374.728 mo
284.046 373.706 285.001 373.544 285.95 374.132 cv
287.346 374.997 li
288.492 375.707 288.416 376.633 287.91 377.45 cv
285.932 380.642 li
285.305 381.655 284.421 381.808 283.48 381.225 cv
282.085 380.36 li
281.127 379.767 280.831 378.894 281.464 377.873 cv
283.412 374.728 li
cp
f
292.302 381.146 mo
293.261 381.29 li
293.726 381.36 294.007 381.225 294.087 380.69 cv
294.58 377.413 li
294.649 376.957 294.487 376.675 294.011 376.603 cv
292.97 376.447 li
292.375 376.357 292.197 376.763 292.154 377.048 cv
291.662 380.32 li
291.571 380.923 291.968 381.095 292.302 381.146 cv
cp
290.793 376.676 mo
290.972 375.487 291.786 374.962 292.89 375.128 cv
294.513 375.372 li
295.847 375.573 296.142 376.454 295.999 377.404 cv
295.44 381.117 li
295.263 382.295 294.512 382.784 293.417 382.62 cv
291.794 382.375 li
290.68 382.208 290.064 381.523 290.242 380.335 cv
290.793 376.676 li
cp
f
256.374 378.363 mo
257.325 378.169 li
257.785 378.075 258.002 377.853 257.894 377.322 cv
257.232 374.075 li
257.14 373.624 256.892 373.414 256.42 373.51 cv
255.388 373.72 li
254.798 373.841 254.771 374.283 254.828 374.565 cv
255.489 377.807 li
255.611 378.405 256.043 378.43 256.374 378.363 cv
cp
253.422 374.683 mo
253.182 373.505 253.766 372.733 254.86 372.51 cv
256.469 372.181 li
257.79 371.912 258.37 372.638 258.562 373.579 cv
259.312 377.259 li
259.55 378.426 259.013 379.143 257.928 379.365 cv
256.319 379.693 li
255.216 379.918 254.401 379.486 254.161 378.309 cv
253.422 374.683 li
cp
.333333 .839216 .823529 rgb
f
261.733 378.308 mo
262.847 377.1 li
264.177 376.694 li
266.32 383.703 li
264.98 384.113 li
263.243 378.435 li
262.001 379.184 li
261.733 378.308 li
cp
.992157 .721569 .0745098 rgb
f
281.823 428.082 mo
283.31 427.385 li
284.695 427.512 li
284.03 434.811 li
282.633 434.684 li
283.172 428.77 li
281.739 428.995 li
281.823 428.082 li
cp
1 .419608 .407843 rgb
f
273.432 376.413 mo
275.005 375.937 li
276.357 376.262 li
274.646 383.389 li
273.283 383.062 li
274.669 377.288 li
273.218 377.304 li
273.432 376.413 li
cp
.992157 .721569 .0745098 rgb
f
304.062 356.705 mo
305.454 355.833 li
306.844 355.792 li
307.064 363.118 li
305.663 363.16 li
305.485 357.225 li
304.089 357.621 li
304.062 356.705 li
cp
f
281.862 352.499 mo
283.434 352.024 li
284.786 352.349 li
283.076 359.476 li
281.712 359.149 li
283.098 353.375 li
281.648 353.39 li
281.862 352.499 li
cp
f
282.833 366.39 mo
283.603 364.94 li
284.787 364.209 li
288.638 370.445 li
287.445 371.182 li
284.325 366.13 li
283.314 367.17 li
282.833 366.39 li
cp
.333333 .839216 .823529 rgb
f
272.791 355.106 mo
273.562 353.655 li
274.745 352.924 li
278.596 359.161 li
277.403 359.898 li
274.284 354.845 li
273.272 355.885 li
272.791 355.106 li
cp
1 .419608 .407843 rgb
f
299.752 376.413 mo
301.325 375.937 li
302.677 376.262 li
300.966 383.389 li
299.603 383.062 li
300.989 377.288 li
299.538 377.304 li
299.752 376.413 li
cp
.992157 .721569 .0745098 rgb
f
313.018 390.908 mo
251.982 390.908 li
278.118 411.056 li
278.118 419.855 li
286.882 419.855 li
286.882 411.056 li
313.018 390.908 li
cp
.333333 .839216 .823529 rgb
f
278.618 419.355 mo
286.382 419.355 li
286.382 411.056 li
286.382 410.901 286.454 410.754 286.577 410.661 cv
311.551 391.408 li
253.45 391.408 li
278.423 410.661 li
278.546 410.754 278.618 410.901 278.618 411.056 cv
278.618 419.355 li
cp
286.882 420.355 mo
278.118 420.355 li
277.841 420.355 277.618 420.132 277.618 419.855 cv
277.618 411.302 li
251.677 391.303 li
251.508 391.173 251.44 390.949 251.509 390.747 cv
251.578 390.544 251.768 390.408 251.982 390.408 cv
313.018 390.408 li
313.232 390.408 313.422 390.544 313.491 390.747 cv
313.56 390.949 313.493 391.173 313.323 391.303 cv
287.382 411.302 li
287.382 419.855 li
287.382 420.132 287.159 420.355 286.882 420.355 cv
cp
.223529 .235294 .254902 rgb
f
313.018 383.376 mo
251.982 383.376 li
251.982 390.908 li
313.018 390.908 li
313.018 383.376 li
cp
.333333 .839216 .823529 rgb
f
252.482 390.408 mo
312.518 390.408 li
312.518 383.877 li
252.482 383.877 li
252.482 390.408 li
cp
313.018 391.408 mo
251.982 391.408 li
251.706 391.408 251.482 391.184 251.482 390.908 cv
251.482 383.377 li
251.482 383.1 251.706 382.877 251.982 382.877 cv
313.018 382.877 li
313.294 382.877 313.518 383.1 313.518 383.377 cv
313.518 390.908 li
313.518 391.184 313.294 391.408 313.018 391.408 cv
cp
.223529 .235294 .254902 rgb
f
413.347 198.178 mo
400.221 198.178 li
400.221 174.128 li
413.347 174.128 li
413.347 198.178 li
cp
1 1 .933333 rgb
f
400.721 197.678 mo
412.847 197.678 li
412.847 174.628 li
400.721 174.628 li
400.721 197.678 li
cp
413.347 198.678 mo
400.221 198.678 li
399.945 198.678 399.721 198.454 399.721 198.178 cv
399.721 174.128 li
399.721 173.852 399.945 173.628 400.221 173.628 cv
413.347 173.628 li
413.624 173.628 413.847 173.852 413.847 174.128 cv
413.847 198.178 li
413.847 198.454 413.624 198.678 413.347 198.678 cv
cp
.223529 .235294 .254902 rgb
f
429.994 198.178 mo
416.868 198.178 li
416.868 158.776 li
429.994 158.776 li
429.994 198.178 li
cp
.333333 .839216 .823529 rgb
f
417.368 197.678 mo
429.495 197.678 li
429.495 159.276 li
417.368 159.276 li
417.368 197.678 li
cp
430.495 198.678 mo
416.368 198.678 li
416.368 158.276 li
430.495 158.276 li
430.495 198.678 li
cp
.223529 .235294 .254902 rgb
f
380.053 198.016 mo
366.927 198.016 li
366.927 181.22 li
380.053 181.22 li
380.053 198.016 li
cp
1 .419608 .407843 rgb
f
367.427 197.516 mo
379.553 197.516 li
379.553 181.72 li
367.427 181.72 li
367.427 197.516 li
cp
380.553 198.516 mo
366.427 198.516 li
366.427 180.72 li
380.553 180.72 li
380.553 198.516 li
cp
.223529 .235294 .254902 rgb
f
396.7 198.178 mo
383.574 198.178 li
383.574 167.715 li
396.7 167.715 li
396.7 198.178 li
cp
.992157 .721569 .0745098 rgb
f
384.075 197.678 mo
396.201 197.678 li
396.201 168.215 li
384.075 168.215 li
384.075 197.678 li
cp
397.201 198.678 mo
383.075 198.678 li
383.075 167.215 li
397.201 167.215 li
397.201 198.678 li
cp
.223529 .235294 .254902 rgb
f
363.005 183.325 mo
360.117 180.436 li
386.926 153.627 li
406.421 161.472 li
422.252 145.533 li
425.15 148.411 li
407.409 166.274 li
387.905 158.425 li
363.005 183.325 li
cp
1 .419608 .407843 rgb
f
360.824 180.437 mo
363.005 182.617 li
387.786 157.838 li
407.288 165.686 li
424.443 148.413 li
422.253 146.24 li
406.542 162.06 li
387.046 154.214 li
360.824 180.437 li
cp
363.005 184.031 mo
359.41 180.437 li
386.806 153.04 li
406.299 160.884 li
422.249 144.825 li
425.857 148.409 li
407.53 166.861 li
388.026 159.012 li
363.005 184.031 li
cp
.223529 .235294 .254902 rgb
f
427.802 154.405 mo
431.965 138.652 li
416.24 142.922 li
427.802 154.405 li
cp
1 .419608 .407843 rgb
f
417.206 143.178 mo
427.54 153.441 li
431.259 139.361 li
417.206 143.178 li
cp
428.064 155.37 mo
415.273 142.666 li
432.668 137.944 li
428.064 155.37 li
cp
.223529 .235294 .254902 rgb
f
367.897 153.529 mo
366.977 153.456 366.291 152.652 366.362 151.732 cv
366.362 151.732 li
366.436 150.813 367.241 150.125 368.16 150.198 cv
372.801 150.564 li
373.721 150.636 374.408 151.441 374.335 152.361 cv
374.335 152.361 li
374.262 153.28 373.456 153.968 372.538 153.895 cv
367.897 153.529 li
cp
1 1 .933333 rgb
f
368.112 150.696 mo
367.418 150.696 366.909 151.168 366.86 151.772 cv
366.81 152.415 367.294 152.98 367.937 153.032 cv
372.672 153.4 li
373.277 153.4 373.788 152.926 373.837 152.321 cv
373.861 152.009 373.763 151.708 373.56 151.469 cv
373.357 151.232 373.073 151.087 372.762 151.062 cv
368.121 150.696 li
368.118 150.696 368.115 150.696 368.112 150.696 cv
cp
372.672 154.4 mo
372.614 154.4 372.556 154.398 372.498 154.393 cv
367.858 154.028 li
366.666 153.933 365.771 152.886 365.864 151.693 cv
365.958 150.513 367.017 149.604 368.199 149.7 cv
372.84 150.066 li
373.418 150.111 373.944 150.379 374.321 150.821 cv
374.697 151.261 374.879 151.823 374.833 152.401 cv
374.744 153.522 373.795 154.4 372.672 154.4 cv
cp
.223529 .235294 .254902 rgb
f
356.61 154.605 mo
354.698 154.453 353.28 152.639 353.445 150.555 cv
353.445 150.555 li
353.609 148.468 355.294 146.9 357.206 147.051 cv
365.529 147.709 li
367.442 147.859 368.858 149.672 368.693 151.758 cv
368.693 151.758 li
368.529 153.842 366.845 155.411 364.933 155.26 cv
356.61 154.605 li
cp
.992157 .721569 .0745098 rgb
f
356.951 147.542 mo
355.399 147.542 354.078 148.882 353.943 150.593 cv
353.801 152.401 355.014 153.976 356.65 154.107 cv
364.972 154.761 li
366.619 154.898 368.054 153.509 368.195 151.718 cv
368.264 150.834 368.016 149.981 367.496 149.315 cv
366.986 148.663 366.273 148.269 365.49 148.206 cv
357.167 147.549 li
357.095 147.544 357.022 147.542 356.951 147.542 cv
cp
365.189 155.769 mo
365.091 155.769 364.992 155.765 364.892 155.757 cv
356.571 155.103 li
354.386 154.929 352.761 152.871 352.947 150.515 cv
353.13 148.181 355.053 146.375 357.245 146.553 cv
365.568 147.21 li
366.635 147.293 367.599 147.823 368.284 148.7 cv
368.959 149.563 369.281 150.663 369.191 151.796 cv
369.016 154.024 367.259 155.769 365.189 155.769 cv
cp
.223529 .235294 .254902 rgb
f
390.356 160.244 mo
386.235 163.599 380.173 162.978 376.817 158.857 cv
373.461 154.735 374.081 148.674 378.202 145.318 cv
382.325 141.961 388.386 142.581 391.743 146.703 cv
395.098 150.824 394.479 156.887 390.356 160.244 cv
cp
.333333 .839216 .823529 rgb
f
384.274 143.656 mo
382.185 143.656 380.141 144.384 378.517 145.706 cv
376.628 147.245 375.451 149.427 375.203 151.851 cv
374.955 154.276 375.666 156.652 377.205 158.542 cv
378.945 160.678 381.526 161.905 384.286 161.905 cv
386.375 161.905 388.418 161.177 390.041 159.856 cv
393.941 156.678 394.531 150.92 391.355 147.019 cv
389.615 144.882 387.034 143.656 384.274 143.656 cv
cp
384.286 162.905 mo
381.224 162.905 378.36 161.544 376.43 159.172 cv
374.722 157.076 373.934 154.44 374.208 151.749 cv
374.483 149.06 375.79 146.638 377.887 144.93 cv
379.687 143.463 381.957 142.656 384.274 142.656 cv
387.336 142.656 390.2 144.016 392.131 146.388 cv
395.655 150.716 395.001 157.106 390.672 160.631 cv
388.872 162.097 386.604 162.905 384.286 162.905 cv
cp
.223529 .235294 .254902 rgb
f
394.862 155.505 mo
394.862 153.634 li
382.776 148.77 li
374.553 156.994 li
375.593 158.337 376.66 159.658 377.66 161.027 cv
383.987 154.7 li
393.137 158.382 li
393.717 157.423 394.328 156.477 394.862 155.505 cv
cp
1 .419608 .407843 rgb
f
375.219 157.035 mo
375.869 157.867 li
376.492 158.662 377.114 159.456 377.718 160.263 cv
383.867 154.113 li
392.93 157.76 li
393.037 157.586 393.144 157.413 393.252 157.239 cv
393.633 156.621 394.013 156.004 394.362 155.376 cv
394.362 153.972 li
382.896 149.357 li
375.219 157.035 li
cp
377.6 161.794 mo
377.257 161.323 li
376.554 160.361 375.818 159.422 375.082 158.484 cv
373.888 156.952 li
382.656 148.183 li
395.362 153.296 li
395.362 155.633 li
395.301 155.746 li
394.927 156.426 394.516 157.095 394.102 157.764 cv
393.923 158.055 393.743 158.347 393.565 158.64 cv
393.346 159.005 li
384.107 155.287 li
377.6 161.794 li
cp
.223529 .235294 .254902 rgb
f
390.563 152.363 mo
390.563 148.731 387.619 145.787 383.987 145.787 cv
380.355 145.787 377.411 148.731 377.411 152.363 cv
377.411 155.995 380.355 158.939 383.987 158.939 cv
387.619 158.939 390.563 155.995 390.563 152.363 cv
cp
1 1 .933333 rgb
f
383.987 146.287 mo
380.637 146.287 377.911 149.012 377.911 152.363 cv
377.911 155.713 380.637 158.439 383.987 158.439 cv
387.338 158.439 390.063 155.713 390.063 152.363 cv
390.063 149.012 387.338 146.287 383.987 146.287 cv
cp
383.987 159.439 mo
380.086 159.439 376.911 156.264 376.911 152.363 cv
376.911 148.461 380.086 145.287 383.987 145.287 cv
387.888 145.287 391.063 148.461 391.063 152.363 cv
391.063 156.264 387.888 159.439 383.987 159.439 cv
cp
.223529 .235294 .254902 rgb
f
390.356 160.244 mo
386.235 163.599 380.173 162.978 376.817 158.857 cv
373.461 154.735 374.081 148.674 378.202 145.318 cv
382.325 141.961 388.386 142.581 391.743 146.703 cv
395.098 150.824 394.479 156.887 390.356 160.244 cv
cp
394.077 144.802 mo
389.671 139.391 381.712 138.577 376.301 142.983 cv
370.89 147.389 370.076 155.348 374.482 160.759 cv
378.888 166.17 386.847 166.984 392.257 162.578 cv
397.668 158.172 398.483 150.214 394.077 144.802 cv
cp
.992157 .721569 .0745098 rgb
f
384.274 143.656 mo
382.185 143.656 380.141 144.384 378.517 145.706 cv
376.628 147.245 375.451 149.427 375.203 151.851 cv
374.955 154.276 375.666 156.652 377.205 158.542 cv
378.945 160.678 381.526 161.905 384.286 161.905 cv
386.375 161.905 388.418 161.177 390.041 159.856 cv
393.941 156.678 394.531 150.92 391.355 147.019 cv
389.615 144.882 387.034 143.656 384.274 143.656 cv
cp
384.286 162.905 mo
381.224 162.905 378.36 161.544 376.43 159.172 cv
374.722 157.076 373.934 154.44 374.208 151.749 cv
374.483 149.06 375.79 146.638 377.887 144.93 cv
379.687 143.463 381.957 142.656 384.274 142.656 cv
387.336 142.656 390.2 144.016 392.131 146.388 cv
395.655 150.716 395.001 157.106 390.672 160.631 cv
388.872 162.097 386.604 162.905 384.286 162.905 cv
cp
384.271 140.645 mo
381.494 140.645 378.775 141.613 376.616 143.371 cv
371.429 147.596 370.645 155.254 374.87 160.443 cv
377.184 163.285 380.617 164.915 384.287 164.915 cv
387.064 164.915 389.783 163.948 391.941 162.19 cv
397.13 157.964 397.914 150.306 393.689 145.118 cv
391.375 142.275 387.942 140.645 384.271 140.645 cv
cp
384.287 165.915 mo
384.287 165.915 li
380.315 165.915 376.6 164.151 374.095 161.074 cv
369.521 155.458 370.37 147.168 375.985 142.595 cv
378.321 140.693 381.264 139.645 384.271 139.645 cv
388.244 139.645 391.959 141.41 394.465 144.487 cv
399.038 150.102 398.188 158.392 392.572 162.965 cv
390.236 164.868 387.294 165.915 384.287 165.915 cv
cp
.223529 .235294 .254902 rgb
f
55.2599 175.006 mo
29.2454 175.006 li
29.2454 147.865 li
55.2599 147.865 li
55.2599 175.006 li
cp
1 1 .933333 rgb
f
56.2599 146.865 mo
55.2599 146.865 li
29.2454 146.865 li
28.2454 146.865 li
28.2454 147.865 li
28.2454 175.006 li
28.2454 176.006 li
29.2454 176.006 li
55.2599 176.006 li
56.2599 176.006 li
56.2599 175.006 li
56.2599 147.865 li
56.2599 146.865 li
56.2599 146.865 li
cp
55.2599 147.865 mo
55.2599 175.006 li
29.2454 175.006 li
29.2454 147.865 li
55.2599 147.865 li
55.2599 147.865 li
cp
.223529 .235294 .254902 rgb
f
55.2599 153.719 mo
29.2454 153.719 li
29.2454 147.865 li
55.2599 147.865 li
55.2599 153.719 li
cp
1 .419608 .407843 rgb
f
56.2599 146.865 mo
55.2599 146.865 li
29.2454 146.865 li
28.2454 146.865 li
28.2454 147.865 li
28.2454 153.719 li
28.2454 154.719 li
29.2454 154.719 li
55.2599 154.719 li
56.2599 154.719 li
56.2599 153.719 li
56.2599 147.865 li
56.2599 146.865 li
56.2599 146.865 li
cp
55.2599 147.865 mo
55.2599 153.719 li
29.2454 153.719 li
29.2454 147.865 li
55.2599 147.865 li
55.2599 147.865 li
cp
.223529 .235294 .254902 rgb
f
30.5648 173.361 mo
53.8812 173.361 li
53.8812 155.819 li
30.5648 155.819 li
30.5648 173.361 li
cp
54.2792 173.759 mo
30.1668 173.759 li
30.1668 155.421 li
54.2792 155.421 li
54.2792 173.759 li
cp
f
54.0802 160.108 mo
30.3658 160.108 li
30.3658 159.71 li
54.0802 159.71 li
54.0802 160.108 li
cp
f
54.0802 164.789 mo
30.3658 164.789 li
30.3658 164.391 li
54.0802 164.391 li
54.0802 164.789 li
cp
f
54.0802 169.47 mo
30.3658 169.47 li
30.3658 169.072 li
54.0802 169.072 li
54.0802 169.47 li
cp
f
38.0735 173.56 mo
37.6756 173.56 li
37.6756 155.62 li
38.0735 155.62 li
38.0735 173.56 li
cp
f
46.7705 173.56 mo
46.3725 173.56 li
46.3725 155.62 li
46.7705 155.62 li
46.7705 173.56 li
cp
f
94.3418 182.353 mo
68.3273 182.353 li
68.3273 147.865 li
94.3418 147.865 li
94.3418 182.353 li
cp
1 1 .933333 rgb
f
95.3418 146.865 mo
94.3418 146.865 li
68.3273 146.865 li
67.3273 146.865 li
67.3273 147.865 li
67.3273 182.353 li
67.3273 183.353 li
68.3273 183.353 li
94.3418 183.353 li
95.3418 183.353 li
95.3418 182.353 li
95.3418 147.865 li
95.3418 146.865 li
95.3418 146.865 li
cp
94.3418 147.865 mo
94.3418 182.353 li
68.3273 182.353 li
68.3273 147.865 li
94.3418 147.865 li
94.3418 147.865 li
cp
.223529 .235294 .254902 rgb
f
94.3418 152.719 mo
68.3273 152.719 li
68.3273 146.865 li
94.3418 146.865 li
94.3418 152.719 li
cp
1 .419608 .407843 rgb
f
95.3418 145.865 mo
94.3418 145.865 li
68.3273 145.865 li
67.3273 145.865 li
67.3273 146.865 li
67.3273 152.719 li
67.3273 153.719 li
68.3273 153.719 li
94.3418 153.719 li
95.3418 153.719 li
95.3418 152.719 li
95.3418 146.865 li
95.3418 145.865 li
95.3418 145.865 li
cp
94.3418 146.865 mo
94.3418 152.719 li
68.3273 152.719 li
68.3273 146.865 li
94.3418 146.865 li
94.3418 146.865 li
cp
.223529 .235294 .254902 rgb
f
69.6466 180.985 mo
92.9631 180.985 li
92.9631 154.819 li
69.6466 154.819 li
69.6466 180.985 li
cp
93.3611 181.383 mo
69.2487 181.383 li
69.2487 154.421 li
93.3611 154.421 li
93.3611 181.383 li
cp
f
93.1621 158.71 mo
69.4476 158.71 li
69.4476 158.312 li
93.1621 158.312 li
93.1621 158.71 li
cp
f
93.1621 163.293 mo
69.4476 163.293 li
69.4476 162.895 li
93.1621 162.895 li
93.1621 163.293 li
cp
f
93.1621 167.876 mo
69.4476 167.876 li
69.4476 167.479 li
93.1621 167.479 li
93.1621 167.876 li
cp
f
93.1621 172.459 mo
69.4476 172.459 li
69.4476 172.061 li
93.1621 172.061 li
93.1621 172.459 li
cp
f
93.1621 177.042 mo
69.4476 177.042 li
69.4476 176.644 li
93.1621 176.644 li
93.1621 177.042 li
cp
f
77.1554 181.184 mo
76.7574 181.184 li
76.7574 154.62 li
77.1554 154.62 li
77.1554 181.184 li
cp
f
85.8523 181.184 mo
85.4543 181.184 li
85.4543 154.62 li
85.8523 154.62 li
85.8523 181.184 li
cp
f
64.3227 203.728 mo
38.3082 203.728 li
38.3082 182.34 li
64.3227 182.34 li
64.3227 203.728 li
cp
1 1 .933333 rgb
f
65.3227 181.34 mo
64.3227 181.34 li
38.3082 181.34 li
37.3082 181.34 li
37.3082 182.34 li
37.3082 203.728 li
37.3082 204.728 li
38.3082 204.728 li
64.3227 204.728 li
65.3227 204.728 li
65.3227 203.728 li
65.3227 182.34 li
65.3227 181.34 li
65.3227 181.34 li
cp
64.3227 182.34 mo
64.3227 203.728 li
38.3082 203.728 li
38.3082 182.34 li
64.3227 182.34 li
64.3227 182.34 li
cp
.223529 .235294 .254902 rgb
f
64.3227 187.195 mo
38.3082 187.195 li
38.3082 181.34 li
64.3227 181.34 li
64.3227 187.195 li
cp
1 .419608 .407843 rgb
f
65.3227 180.34 mo
64.3227 180.34 li
38.3082 180.34 li
37.3082 180.34 li
37.3082 181.34 li
37.3082 187.195 li
37.3082 188.195 li
38.3082 188.195 li
64.3227 188.195 li
65.3227 188.195 li
65.3227 187.195 li
65.3227 181.34 li
65.3227 180.34 li
65.3227 180.34 li
cp
64.3227 181.34 mo
64.3227 187.195 li
38.3082 187.195 li
38.3082 181.34 li
64.3227 181.34 li
64.3227 181.34 li
cp
.223529 .235294 .254902 rgb
f
39.6276 202.145 mo
62.9438 202.145 li
62.9438 189.294 li
39.6276 189.294 li
39.6276 202.145 li
cp
63.3418 202.543 mo
39.2296 202.543 li
39.2296 188.896 li
63.3418 188.896 li
63.3418 202.543 li
cp
f
63.1428 193.583 mo
39.4286 193.583 li
39.4286 193.185 li
63.1428 193.185 li
63.1428 193.583 li
cp
f
63.1428 198.264 mo
39.4286 198.264 li
39.4286 197.866 li
63.1428 197.866 li
63.1428 198.264 li
cp
f
47.0915 202.344 mo
46.7834 202.344 li
46.7834 189.095 li
47.0915 189.095 li
47.0915 202.344 li
cp
f
61.0796 164.178 mo
60.3623 164.178 li
60.3623 163.178 li
61.0796 163.178 li
61.0796 164.178 li
cp
f
64.3823 164.178 mo
62.7309 164.178 li
62.7309 163.178 li
64.3823 163.178 li
64.3823 164.178 li
cp
f
66.7505 164.178 mo
66.0337 164.178 li
66.0337 163.178 li
66.7505 163.178 li
66.7505 164.178 li
cp
f
61.092 166.171 mo
56.7746 163.679 li
61.092 161.186 li
61.092 166.171 li
cp
f
42.8174 144.892 mo
41.8174 144.892 li
41.8174 143.392 li
42.8174 143.392 li
42.8174 144.892 li
cp
f
42.8174 140.225 mo
41.8174 140.225 li
41.8174 137.059 li
42.8174 137.059 li
42.8174 140.225 li
cp
f
42.8174 133.893 mo
41.8174 133.893 li
41.8174 131.893 li
43.8174 131.893 li
43.8174 132.893 li
42.8174 132.893 li
42.8174 133.893 li
cp
f
50.1396 132.893 mo
46.9785 132.893 li
46.9785 131.893 li
50.1396 131.893 li
50.1396 132.893 li
cp
56.4619 132.893 mo
53.3008 132.893 li
53.3008 131.893 li
56.4619 131.893 li
56.4619 132.893 li
cp
62.7847 132.893 mo
59.6235 132.893 li
59.6235 131.893 li
62.7847 131.893 li
62.7847 132.893 li
cp
69.1069 132.893 mo
65.9458 132.893 li
65.9458 131.893 li
69.1069 131.893 li
69.1069 132.893 li
cp
75.4292 132.893 mo
72.2681 132.893 li
72.2681 131.893 li
75.4292 131.893 li
75.4292 132.893 li
cp
f
80.5903 133.893 mo
79.5903 133.893 li
79.5903 132.893 li
78.5903 132.893 li
78.5903 131.893 li
80.5903 131.893 li
80.5903 133.893 li
cp
f
80.5903 137.833 mo
79.5903 137.833 li
79.5903 135.863 li
80.5903 135.863 li
80.5903 137.833 li
cp
f
80.5903 141.304 mo
79.5903 141.304 li
79.5903 139.804 li
80.5903 139.804 li
80.5903 141.304 li
cp
f
77.5974 140.574 mo
80.0901 144.892 li
82.5833 140.574 li
77.5974 140.574 li
cp
f
35.7104 195.613 mo
34.2104 195.613 li
34.2104 194.613 li
35.7104 194.613 li
35.7104 195.613 li
cp
f
25.479 195.613 mo
22.5683 195.613 li
22.5683 194.613 li
25.479 194.613 li
25.479 195.613 li
cp
31.2998 195.613 mo
28.3891 195.613 li
28.3891 194.613 li
31.2998 194.613 li
31.2998 195.613 li
cp
f
19.6582 195.613 mo
17.6582 195.613 li
17.6582 193.613 li
18.6582 193.613 li
18.6582 194.613 li
19.6582 194.613 li
19.6582 195.613 li
cp
f
18.6582 171.042 mo
17.6582 171.042 li
17.6582 167.818 li
18.6582 167.818 li
18.6582 171.042 li
cp
18.6582 177.491 mo
17.6582 177.491 li
17.6582 174.266 li
18.6582 174.266 li
18.6582 177.491 li
cp
18.6582 183.94 mo
17.6582 183.94 li
17.6582 180.715 li
18.6582 180.715 li
18.6582 183.94 li
cp
18.6582 190.388 mo
17.6582 190.388 li
17.6582 187.163 li
18.6582 187.163 li
18.6582 190.388 li
cp
f
18.6582 164.594 mo
17.6582 164.594 li
17.6582 162.594 li
19.6582 162.594 li
19.6582 163.594 li
18.6582 163.594 li
18.6582 164.594 li
cp
f
24.3052 163.594 mo
22.8052 163.594 li
22.8052 162.594 li
24.3052 162.594 li
24.3052 163.594 li
cp
f
23.5755 165.587 mo
27.8928 163.094 li
23.5755 160.601 li
23.5755 165.587 li
cp
f
82.8785 186.137 mo
81.8785 186.137 li
81.8785 184.637 li
82.8785 184.637 li
82.8785 186.137 li
cp
f
82.8785 192.081 mo
81.8785 192.081 li
81.8785 189.108 li
82.8785 189.108 li
82.8785 192.081 li
cp
f
82.8785 197.053 mo
80.8785 197.053 li
80.8785 196.053 li
81.8785 196.053 li
81.8785 195.053 li
82.8785 195.053 li
82.8785 197.053 li
cp
f
77.9419 197.053 mo
75.0054 197.053 li
75.0054 196.053 li
77.9419 196.053 li
77.9419 197.053 li
cp
f
72.0689 197.053 mo
70.5689 197.053 li
70.5689 196.053 li
72.0689 196.053 li
72.0689 197.053 li
cp
f
71.2982 194.06 mo
66.9809 196.553 li
71.2982 199.046 li
71.2982 194.06 li
cp
f
179.944 318.26 mo
179.944 320.642 175.27 322.573 169.501 322.573 cv
163.731 322.573 159.055 320.642 159.055 318.26 cv
159.055 315.879 163.731 313.947 169.501 313.947 cv
175.27 313.947 179.944 315.879 179.944 318.26 cv
cp
.992157 .721569 .0745098 rgb
f
169.501 314.447 mo
163.552 314.447 159.555 316.418 159.555 318.26 cv
159.555 320.102 163.552 322.073 169.501 322.073 cv
175.45 322.073 179.445 320.102 179.445 318.26 cv
179.445 316.418 175.45 314.447 169.501 314.447 cv
cp
169.501 323.073 mo
163.364 323.073 158.555 320.959 158.555 318.26 cv
158.555 315.561 163.364 313.447 169.501 313.447 cv
175.638 313.447 180.445 315.561 180.445 318.26 cv
180.445 320.959 175.638 323.073 169.501 323.073 cv
cp
.223529 .235294 .254902 rgb
f
159.112 304.636 mo
139.477 304.636 li
139.477 300.636 li
155.112 300.636 li
155.112 282.641 li
159.112 282.641 li
159.112 304.636 li
cp
1 .419608 .407843 rgb
f
139.977 304.137 mo
158.612 304.137 li
158.612 283.142 li
155.612 283.142 li
155.612 301.137 li
139.977 301.137 li
139.977 304.137 li
cp
159.612 305.137 mo
138.977 305.137 li
138.977 300.137 li
154.612 300.137 li
154.612 282.142 li
159.612 282.142 li
159.612 305.137 li
cp
.223529 .235294 .254902 rgb
f
141.228 296.654 mo
130.866 302.636 li
141.228 308.62 li
141.228 296.654 li
cp
1 .419608 .407843 rgb
f
131.866 302.636 mo
140.728 307.753 li
140.728 297.52 li
131.866 302.636 li
cp
141.728 309.486 mo
129.866 302.636 li
141.728 295.788 li
141.728 309.486 li
cp
.223529 .235294 .254902 rgb
f
199.523 306.646 mo
179.889 306.646 li
179.889 284.651 li
183.889 284.651 li
183.889 302.646 li
199.523 302.646 li
199.523 306.646 li
cp
.992157 .721569 .0745098 rgb
f
180.389 306.146 mo
199.023 306.146 li
199.023 303.146 li
183.389 303.146 li
183.389 285.151 li
180.389 285.151 li
180.389 306.146 li
cp
200.023 307.146 mo
179.389 307.146 li
179.389 284.151 li
184.389 284.151 li
184.389 302.146 li
200.023 302.146 li
200.023 307.146 li
cp
.223529 .235294 .254902 rgb
f
197.772 310.629 mo
208.134 304.647 li
197.772 298.663 li
197.772 310.629 li
cp
.992157 .721569 .0745098 rgb
f
198.272 299.53 mo
198.272 309.763 li
207.134 304.647 li
198.272 299.53 li
cp
197.272 311.496 mo
197.272 297.797 li
209.134 304.647 li
197.272 311.496 li
cp
.223529 .235294 .254902 rgb
f
171.5 308.649 mo
167.5 308.649 li
167.5 286.465 li
171.5 286.465 li
171.5 308.649 li
cp
.333333 .839216 .823529 rgb
f
168 308.149 mo
171 308.149 li
171 286.965 li
168 286.965 li
168 308.149 li
cp
172 309.149 mo
167 309.149 li
167 285.965 li
172 285.965 li
172 309.149 li
cp
.223529 .235294 .254902 rgb
f
163.517 306.898 mo
169.499 317.26 li
175.483 306.898 li
163.517 306.898 li
cp
.333333 .839216 .823529 rgb
f
164.383 307.398 mo
169.499 316.26 li
174.617 307.398 li
164.383 307.398 li
cp
169.499 318.26 mo
162.651 306.398 li
176.349 306.398 li
169.499 318.26 li
cp
.223529 .235294 .254902 rgb
f
193.426 256.037 mo
191.736 256.037 190.105 256.291 188.567 256.759 cv
187.166 247.486 179.163 240.379 169.5 240.379 cv
159.837 240.379 151.834 247.486 150.433 256.759 cv
148.895 256.291 147.264 256.037 145.574 256.037 cv
136.364 256.037 128.898 263.503 128.898 272.713 cv
128.898 281.922 136.364 289.388 145.574 289.388 cv
193.426 289.388 li
202.636 289.388 210.102 281.922 210.102 272.713 cv
210.102 263.503 202.636 256.037 193.426 256.037 cv
cp
1 1 .933333 rgb
f
145.574 256.538 mo
136.655 256.538 129.399 263.794 129.399 272.713 cv
129.399 281.632 136.655 288.888 145.574 288.888 cv
193.426 288.888 li
202.345 288.888 209.601 281.632 209.601 272.713 cv
209.601 263.794 202.345 256.538 193.426 256.538 cv
191.825 256.538 190.239 256.773 188.712 257.237 cv
188.159 257.405 li
188.073 256.833 li
186.698 247.738 178.713 240.879 169.5 240.879 cv
160.287 240.879 152.302 247.738 150.927 256.833 cv
150.841 257.405 li
150.288 257.237 li
148.761 256.773 147.175 256.538 145.574 256.538 cv
cp
193.426 289.888 mo
145.574 289.888 li
136.103 289.888 128.399 282.184 128.399 272.713 cv
128.399 263.242 136.103 255.538 145.574 255.538 cv
147.083 255.538 148.581 255.735 150.032 256.124 cv
151.716 246.824 159.987 239.879 169.5 239.879 cv
179.014 239.879 187.284 246.824 188.968 256.124 cv
190.419 255.735 191.916 255.538 193.426 255.538 cv
202.897 255.538 210.601 263.242 210.601 272.713 cv
210.601 282.184 202.897 289.888 193.426 289.888 cv
cp
.223529 .235294 .254902 rgb
f
282.574 39.2918 mo
281.427 39.2918 280.321 39.4639 279.278 39.7812 cv
278.328 33.4923 272.9 28.6716 266.346 28.6716 cv
259.792 28.6716 254.364 33.4923 253.414 39.7812 cv
252.371 39.4639 251.265 39.2918 250.118 39.2918 cv
243.872 39.2918 238.808 44.3554 238.808 50.6017 cv
238.808 56.8479 243.872 61.9115 250.118 61.9115 cv
282.574 61.9115 li
288.82 61.9115 293.883 56.8479 293.883 50.6017 cv
293.883 44.3554 288.82 39.2918 282.574 39.2918 cv
cp
.992157 .721569 .0745098 rgb
f
250.118 39.7916 mo
244.158 39.7916 239.309 44.6412 239.309 50.6017 cv
239.309 56.5621 244.158 61.4117 250.118 61.4117 cv
282.574 61.4117 li
288.534 61.4117 293.384 56.5621 293.384 50.6017 cv
293.384 44.6412 288.534 39.7916 282.574 39.7916 cv
281.504 39.7916 280.444 39.9493 279.423 40.2599 cv
278.87 40.4283 li
278.783 39.8561 li
277.863 33.7647 272.516 29.1715 266.346 29.1715 cv
260.176 29.1715 254.829 33.7647 253.909 39.8561 cv
253.822 40.4283 li
253.269 40.2599 li
252.248 39.9493 251.188 39.7916 250.118 39.7916 cv
cp
282.574 62.4117 mo
250.118 62.4117 li
243.606 62.4117 238.309 57.1139 238.309 50.6017 cv
238.309 44.0895 243.606 38.7916 250.118 38.7916 cv
251.098 38.7916 252.07 38.9127 253.016 39.1515 cv
254.241 32.8531 259.874 28.1715 266.346 28.1715 cv
272.818 28.1715 278.451 32.8531 279.676 39.1515 cv
280.622 38.9127 281.594 38.7916 282.574 38.7916 cv
289.086 38.7916 294.384 44.0895 294.384 50.6017 cv
294.384 57.1139 289.086 62.4117 282.574 62.4117 cv
cp
.223529 .235294 .254902 rgb
f
314.882 53.868 mo
313.735 53.868 312.629 54.04 311.586 54.3573 cv
310.636 48.0684 305.208 43.2478 298.654 43.2478 cv
292.1 43.2478 286.672 48.0684 285.722 54.3573 cv
284.679 54.04 283.573 53.868 282.426 53.868 cv
276.18 53.868 271.116 58.9316 271.116 65.1778 cv
271.116 71.4241 276.18 76.4876 282.426 76.4876 cv
314.882 76.4876 li
321.128 76.4876 326.191 71.4241 326.191 65.1778 cv
326.191 58.9316 321.128 53.868 314.882 53.868 cv
cp
1 .419608 .407843 rgb
f
282.426 54.3683 mo
276.466 54.3683 271.617 59.2174 271.617 65.1778 cv
271.617 71.1383 276.466 75.9874 282.426 75.9874 cv
314.882 75.9874 li
320.842 75.9874 325.691 71.1383 325.691 65.1778 cv
325.691 59.2174 320.842 54.3683 314.882 54.3683 cv
313.811 54.3683 312.751 54.5255 311.731 54.836 cv
311.178 55.0045 li
311.091 54.4322 li
310.171 48.3409 304.824 43.7477 298.654 43.7477 cv
292.484 43.7477 287.137 48.3409 286.217 54.4322 cv
286.13 55.0045 li
285.577 54.836 li
284.557 54.5255 283.497 54.3683 282.426 54.3683 cv
cp
314.882 76.9874 mo
282.426 76.9874 li
275.915 76.9874 270.617 71.6895 270.617 65.1778 cv
270.617 58.6661 275.915 53.3683 282.426 53.3683 cv
283.407 53.3683 284.379 53.4889 285.324 53.7276 cv
286.549 47.4293 292.182 42.7477 298.654 42.7477 cv
305.126 42.7477 310.759 47.4293 311.984 53.7276 cv
312.929 53.4889 313.901 53.3683 314.882 53.3683 cv
321.394 53.3683 326.691 58.6661 326.691 65.1778 cv
326.691 71.6895 321.394 76.9874 314.882 76.9874 cv
cp
.223529 .235294 .254902 rgb
f
314.209 44.8636 mo
313.995 44.8636 313.797 44.7254 313.731 44.5106 cv
313.259 42.9735 312.64 41.4647 311.892 40.0262 cv
309.73 35.8646 306.499 32.3358 302.551 29.8221 cv
294.515 24.7069 284.284 24.2508 275.849 28.6351 cv
275.602 28.7606 275.302 28.6668 275.174 28.4217 cv
275.047 28.1766 275.142 27.8748 275.388 27.7474 cv
284.139 23.2005 294.753 23.6717 303.088 28.9784 cv
307.184 31.5868 310.536 35.2474 312.78 39.5653 cv
313.555 41.057 314.197 42.6219 314.687 44.2166 cv
314.768 44.4808 314.62 44.7606 314.356 44.8416 cv
314.307 44.8568 314.257 44.8636 314.209 44.8636 cv
cp
f
318.664 42.0292 mo
315.389 51.4467 li
308.87 43.9023 li
318.664 42.0292 li
cp
1 .419608 .407843 rgb
f
309.814 44.2311 mo
315.201 50.4649 li
317.907 42.6832 li
309.814 44.2311 li
cp
315.577 52.4288 mo
307.925 43.5738 li
319.42 41.3756 li
315.577 52.4288 li
cp
.223529 .235294 .254902 rgb
f
280.284 88.3597 mo
276.132 88.3597 271.966 87.4349 268.121 85.5618 cv
263.755 83.4339 260.01 80.1766 257.292 76.141 cv
256.353 74.7489 255.539 73.2669 254.87 71.7357 cv
254.759 71.4827 254.875 71.1878 255.128 71.0775 cv
255.38 70.9637 255.675 71.0824 255.786 71.3353 cv
256.431 72.8114 257.217 74.2401 258.121 75.5824 cv
260.742 79.472 264.351 82.6121 268.559 84.6624 cv
277.121 88.8343 287.339 88.1273 295.224 82.8167 cv
295.453 82.6634 295.765 82.722 295.918 82.952 cv
296.072 83.181 296.012 83.4915 295.783 83.6458 cv
291.143 86.7713 285.725 88.3597 280.284 88.3597 cv
cp
f
251.167 74.3594 mo
253.353 64.6316 li
260.686 71.3888 li
251.167 74.3594 li
cp
1 .419608 .407843 rgb
f
253.651 65.586 mo
251.845 73.6241 li
259.71 71.1695 li
253.651 65.586 li
cp
250.489 75.0948 mo
253.056 63.6769 li
261.661 71.608 li
250.489 75.0948 li
cp
.223529 .235294 .254902 rgb
f
301.53 313.749 mo
263.473 313.749 li
263.473 310.625 li
267.151 310.625 li
267.823 303.871 li
245.806 303.871 li
243.546 303.871 241.707 302.032 241.707 299.771 cv
241.707 253.303 li
241.707 251.042 243.546 249.203 245.806 249.203 cv
319.193 249.203 li
321.453 249.203 323.293 251.042 323.293 253.303 cv
323.293 299.771 li
323.293 302.032 321.453 303.871 319.193 303.871 cv
297.182 303.871 li
297.855 310.625 li
301.53 310.625 li
301.53 313.749 li
cp
1 .419608 .407843 rgb
f
263.973 313.249 mo
301.029 313.249 li
301.029 311.125 li
297.402 311.125 li
296.63 303.371 li
319.193 303.371 li
321.177 303.371 322.793 301.756 322.793 299.771 cv
322.793 253.303 li
322.793 251.318 321.177 249.703 319.193 249.703 cv
245.806 249.703 li
243.821 249.703 242.207 251.318 242.207 253.303 cv
242.207 299.771 li
242.207 301.756 243.821 303.371 245.806 303.371 cv
268.375 303.371 li
267.604 311.125 li
263.973 311.125 li
263.973 313.249 li
cp
302.029 314.249 mo
262.973 314.249 li
262.973 310.125 li
266.698 310.125 li
267.27 304.371 li
245.806 304.371 li
243.27 304.371 241.207 302.307 241.207 299.771 cv
241.207 253.303 li
241.207 250.766 243.27 248.703 245.806 248.703 cv
319.193 248.703 li
321.729 248.703 323.793 250.766 323.793 253.303 cv
323.793 299.771 li
323.793 302.307 321.729 304.371 319.193 304.371 cv
297.735 304.371 li
298.307 310.125 li
302.029 310.125 li
302.029 314.249 li
cp
.223529 .235294 .254902 rgb
f
317.731 299.115 mo
247.268 299.115 li
245.807 299.115 244.619 297.929 244.619 296.471 cv
244.619 255.095 li
244.619 253.635 245.807 252.447 247.268 252.447 cv
317.731 252.447 li
319.193 252.447 320.382 253.635 320.382 255.095 cv
320.382 296.471 li
320.382 297.929 319.193 299.115 317.731 299.115 cv
cp
1 1 .933333 rgb
f
247.268 252.947 mo
246.083 252.947 245.119 253.911 245.119 255.095 cv
245.119 296.472 li
245.119 297.653 246.083 298.615 247.268 298.615 cv
317.731 298.615 li
318.917 298.615 319.882 297.653 319.882 296.472 cv
319.882 255.095 li
319.882 253.911 318.917 252.947 317.731 252.947 cv
247.268 252.947 li
cp
317.731 299.615 mo
247.268 299.615 li
245.531 299.615 244.119 298.204 244.119 296.472 cv
244.119 255.095 li
244.119 253.359 245.531 251.947 247.268 251.947 cv
317.731 251.947 li
319.469 251.947 320.882 253.359 320.882 255.095 cv
320.882 296.472 li
320.882 298.204 319.469 299.615 317.731 299.615 cv
cp
.223529 .235294 .254902 rgb
f
299.05 275.846 mo
284.074 272.306 li
283.817 272.244 283.548 272.303 283.339 272.465 cv
266.489 285.51 li
254.435 280.957 li
254.144 280.846 253.816 280.899 253.575 281.097 cv
244.619 287.836 li
244.619 290.554 li
254.289 282.767 li
266.329 287.315 li
266.612 287.422 266.931 287.374 267.171 287.189 cv
284.078 274.099 li
298.888 277.596 li
299.428 277.774 299.73 277.861 320.382 261.953 cv
320.382 259.75 li
311.901 266.278 300.895 274.668 299.05 275.846 cv
cp
1 .419608 .407843 rgb
f
245.119 288.085 mo
245.119 289.51 li
254.198 282.198 li
266.505 286.847 li
266.624 286.892 266.764 286.872 266.865 286.793 cv
283.961 273.557 li
299.003 277.109 li
299.714 277.078 305.169 273.039 319.882 261.707 cv
319.882 260.765 li
311.326 267.346 301.104 275.128 299.32 276.267 cv
299.141 276.381 li
283.959 272.792 li
283.796 272.781 283.712 272.81 283.645 272.86 cv
266.573 286.077 li
254.258 281.425 li
254.134 281.377 253.992 281.401 253.893 281.483 cv
245.119 288.085 li
cp
244.119 291.599 mo
244.119 287.586 li
253.275 280.698 li
253.62 280.413 254.159 280.317 254.612 280.489 cv
266.404 284.944 li
283.033 272.069 li
283.358 271.817 283.792 271.723 284.19 271.819 cv
298.956 275.31 li
301.202 273.804 311.632 265.855 320.076 259.353 cv
320.882 258.733 li
320.882 262.199 li
320.687 262.349 li
300.198 278.131 299.795 278.131 299.064 278.131 cv
298.913 278.131 298.804 278.095 298.731 278.071 cv
284.196 274.641 li
267.477 287.584 li
267.105 287.871 266.59 287.948 266.151 287.783 cv
254.38 283.335 li
244.119 291.599 li
cp
.223529 .235294 .254902 rgb
f
301.342 276.551 mo
301.342 275.267 300.301 274.227 299.018 274.227 cv
297.735 274.227 296.694 275.267 296.694 276.551 cv
296.694 277.834 297.735 278.875 299.018 278.875 cv
300.301 278.875 301.342 277.834 301.342 276.551 cv
cp
.992157 .721569 .0745098 rgb
f
299.018 274.727 mo
298.012 274.727 297.194 275.545 297.194 276.551 cv
297.194 277.556 298.012 278.375 299.018 278.375 cv
300.023 278.375 300.842 277.556 300.842 276.551 cv
300.842 275.545 300.023 274.727 299.018 274.727 cv
cp
299.018 279.375 mo
297.461 279.375 296.194 278.108 296.194 276.551 cv
296.194 274.994 297.461 273.727 299.018 273.727 cv
300.575 273.727 301.842 274.994 301.842 276.551 cv
301.842 278.108 300.575 279.375 299.018 279.375 cv
cp
.223529 .235294 .254902 rgb
f
286.496 273.412 mo
286.496 272.129 285.455 271.089 284.172 271.089 cv
282.889 271.089 281.848 272.129 281.848 273.412 cv
281.848 274.696 282.889 275.736 284.172 275.736 cv
285.455 275.736 286.496 274.696 286.496 273.412 cv
cp
.992157 .721569 .0745098 rgb
f
284.172 271.589 mo
283.167 271.589 282.348 272.407 282.348 273.413 cv
282.348 274.418 283.167 275.236 284.172 275.236 cv
285.177 275.236 285.996 274.418 285.996 273.413 cv
285.996 272.407 285.177 271.589 284.172 271.589 cv
cp
284.172 276.236 mo
282.615 276.236 281.348 274.97 281.348 273.413 cv
281.348 271.855 282.615 270.589 284.172 270.589 cv
285.729 270.589 286.996 271.855 286.996 273.413 cv
286.996 274.97 285.729 276.236 284.172 276.236 cv
cp
.223529 .235294 .254902 rgb
f
268.786 285.96 mo
268.786 284.677 267.746 283.636 266.463 283.636 cv
265.179 283.636 264.139 284.677 264.139 285.96 cv
264.139 287.243 265.179 288.284 266.463 288.284 cv
267.746 288.284 268.786 287.243 268.786 285.96 cv
cp
.992157 .721569 .0745098 rgb
f
266.463 284.136 mo
265.457 284.136 264.639 284.954 264.639 285.96 cv
264.639 286.966 265.457 287.784 266.463 287.784 cv
267.468 287.784 268.286 286.966 268.286 285.96 cv
268.286 284.954 267.468 284.136 266.463 284.136 cv
cp
266.463 288.784 mo
264.905 288.784 263.639 287.517 263.639 285.96 cv
263.639 284.403 264.905 283.136 266.463 283.136 cv
268.02 283.136 269.286 284.403 269.286 285.96 cv
269.286 287.517 268.02 288.784 266.463 288.784 cv
cp
.223529 .235294 .254902 rgb
f
256.398 282.331 mo
256.398 281.047 255.358 280.007 254.074 280.007 cv
252.791 280.007 251.75 281.047 251.75 282.331 cv
251.75 283.614 252.791 284.654 254.074 284.654 cv
255.358 284.654 256.398 283.614 256.398 282.331 cv
cp
.992157 .721569 .0745098 rgb
f
254.074 280.507 mo
253.069 280.507 252.25 281.325 252.25 282.331 cv
252.25 283.336 253.069 284.154 254.074 284.154 cv
255.08 284.154 255.898 283.336 255.898 282.331 cv
255.898 281.325 255.08 280.507 254.074 280.507 cv
cp
254.074 285.154 mo
252.517 285.154 251.25 283.888 251.25 282.331 cv
251.25 280.774 252.517 279.507 254.074 279.507 cv
255.631 279.507 256.898 280.774 256.898 282.331 cv
256.898 283.888 255.631 285.154 254.074 285.154 cv
cp
.223529 .235294 .254902 rgb
f
421.386 80.1788 mo
420.386 80.1788 li
420.386 58.4283 li
367.038 58.4283 li
367.038 80.1788 li
366.038 80.1788 li
366.038 57.4283 li
421.386 57.4283 li
421.386 80.1788 li
cp
f
393.768 85.1148 mo
392.768 85.1148 li
392.768 30.7418 li
393.768 30.7418 li
393.768 85.1148 li
cp
f
381.683 23.3957 mo
391.549 23.4947 li
392.292 23.4947 393.119 24.0355 393.386 24.6964 cv
393.979 26.1663 li
404.853 26.2009 li
405.633 26.2009 406.272 26.8093 406.272 27.5528 cv
405.653 41.2627 li
405.653 41.9708 405.044 42.5502 404.301 42.5502 cv
382.234 42.5502 li
381.491 42.5502 380.883 41.9708 380.883 41.2627 cv
380.264 24.7476 li
380.264 24.0041 380.902 23.3957 381.683 23.3957 cv
cp
1 .419608 .407843 rgb
f
381.678 23.8955 mo
381.176 23.8955 380.764 24.2778 380.764 24.7476 cv
381.383 41.2441 li
381.383 41.6968 381.765 42.0503 382.234 42.0503 cv
404.301 42.0503 li
404.77 42.0503 405.152 41.6968 405.152 41.2627 cv
405.772 27.5303 li
405.771 27.083 405.359 26.7012 404.852 26.7012 cv
393.641 26.6655 li
392.922 24.8833 li
392.731 24.4102 392.089 23.9946 391.549 23.9946 cv
381.678 23.8955 li
cp
404.301 43.0503 mo
382.234 43.0503 li
381.214 43.0503 380.383 42.2485 380.383 41.2627 cv
379.764 24.7661 li
379.764 23.7266 380.624 22.8955 381.683 22.8955 cv
391.554 22.9946 li
392.496 22.9946 393.507 23.6597 393.85 24.5093 cv
394.316 25.6675 li
404.854 25.7012 li
405.911 25.7012 406.771 26.5317 406.771 27.5527 cv
406.151 41.2852 li
406.152 42.2485 405.321 43.0503 404.301 43.0503 cv
cp
.223529 .235294 .254902 rgb
f
404.275 34.4796 mo
382.985 35.9657 li
382.261 29.0921 li
403.551 27.606 li
404.275 34.4796 li
cp
1 1 .933333 rgb
f
382.813 29.5552 mo
383.432 35.4336 li
403.724 34.0166 li
403.104 28.1382 li
382.813 29.5552 li
cp
382.985 36.4658 mo
382.731 36.4658 382.515 36.2744 382.488 36.0181 cv
381.764 29.1445 li
381.749 29.0098 381.79 28.875 381.878 28.771 cv
381.965 28.667 382.091 28.603 382.226 28.5933 cv
403.516 27.1069 li
403.808 27.1001 404.02 27.2866 404.048 27.5537 cv
404.772 34.4272 li
404.787 34.562 404.746 34.6968 404.658 34.8008 cv
404.571 34.9048 404.445 34.9687 404.31 34.9785 cv
383.02 36.4648 li
383.009 36.4653 382.996 36.4658 382.985 36.4658 cv
cp
.223529 .235294 .254902 rgb
f
405.574 29.3103 mo
395.094 29.3993 li
394.304 29.3993 393.426 29.8859 393.143 30.4806 cv
392.512 31.8033 li
380.962 31.8344 li
380.133 31.8344 379.455 32.3818 379.455 33.0508 cv
380.112 45.3869 li
380.112 46.0241 380.758 46.5455 381.548 46.5455 cv
404.988 46.5455 li
405.777 46.5455 406.423 46.0241 406.423 45.3869 cv
407.081 30.5267 li
407.081 29.8577 406.403 29.3103 405.574 29.3103 cv
cp
1 .419608 .407843 rgb
f
405.574 29.8101 mo
395.098 29.8994 li
394.434 29.8994 393.773 30.3188 393.594 30.6953 cv
392.829 32.3022 li
380.963 32.3345 li
380.416 32.3345 379.954 32.6626 379.954 33.0508 cv
380.611 45.3599 li
380.612 45.7378 381.05 46.0454 381.548 46.0454 cv
404.988 46.0454 li
405.486 46.0454 405.924 45.7378 405.924 45.3867 cv
406.582 30.5049 li
406.581 30.1382 406.12 29.8101 405.574 29.8101 cv
cp
404.988 47.0454 mo
381.548 47.0454 li
380.48 47.0454 379.612 46.3013 379.612 45.3867 cv
378.955 33.0776 li
378.954 32.1045 379.854 31.3345 380.962 31.3345 cv
392.196 31.3042 li
392.691 30.2656 li
393.056 29.4995 394.111 28.8994 395.094 28.8994 cv
405.57 28.8101 li
406.681 28.8101 407.581 29.5801 407.581 30.5269 cv
406.923 45.4087 li
406.924 46.3013 406.056 47.0454 404.988 47.0454 cv
cp
.223529 .235294 .254902 rgb
f
384.24 71.5643 mo
391.928 71.6414 li
392.508 71.6414 393.152 72.0628 393.36 72.5779 cv
393.822 73.7234 li
402.296 73.7503 li
402.904 73.7503 403.402 74.2244 403.402 74.8038 cv
402.919 85.4876 li
402.919 86.0394 402.445 86.4909 401.866 86.4909 cv
384.67 86.4909 li
384.091 86.4909 383.617 86.0394 383.617 85.4876 cv
383.134 72.6178 li
383.134 72.0383 383.632 71.5643 384.24 71.5643 cv
cp
.992157 .721569 .0745098 rgb
f
384.235 72.0645 mo
383.906 72.0645 383.634 72.3125 383.634 72.6177 cv
384.117 85.4692 li
384.117 85.7651 384.365 85.9907 384.67 85.9907 cv
401.866 85.9907 li
402.171 85.9907 402.419 85.7651 402.419 85.4878 cv
402.902 74.7812 li
402.901 74.4985 402.63 74.2505 402.296 74.2505 cv
393.484 74.2222 li
392.895 72.7651 li
392.764 72.439 392.303 72.1416 391.929 72.1416 cv
384.235 72.0645 li
cp
401.866 86.9907 mo
384.67 86.9907 li
383.813 86.9907 383.117 86.3164 383.117 85.4878 cv
382.634 72.6362 li
382.634 71.7612 383.354 71.0645 384.24 71.0645 cv
391.934 71.1416 li
392.708 71.1416 393.54 71.6899 393.823 72.3901 cv
394.16 73.2241 li
402.298 73.2505 li
403.182 73.2505 403.901 73.9473 403.901 74.8037 cv
403.418 85.5103 li
403.419 86.3164 402.723 86.9907 401.866 86.9907 cv
cp
.223529 .235294 .254902 rgb
f
401.846 80.2017 mo
385.255 81.3598 li
384.69 76.0034 li
401.281 74.8452 li
401.846 80.2017 li
cp
1 1 .933333 rgb
f
385.242 76.4663 mo
385.701 80.8276 li
401.294 79.7388 li
400.835 75.3774 li
385.242 76.4663 li
cp
385.255 81.8599 mo
385.001 81.8599 384.784 81.6685 384.758 81.4121 cv
384.193 76.0557 li
384.179 75.9209 384.22 75.7861 384.308 75.6821 cv
384.395 75.5781 384.52 75.5142 384.655 75.5044 cv
401.246 74.3462 li
401.534 74.3398 401.751 74.5254 401.778 74.793 cv
402.343 80.1494 li
402.357 80.2842 402.316 80.4189 402.228 80.5229 cv
402.142 80.627 402.016 80.6909 401.881 80.7007 cv
385.29 81.8589 li
385.278 81.8594 385.266 81.8599 385.255 81.8599 cv
cp
.223529 .235294 .254902 rgb
f
402.858 76.1734 mo
394.691 76.2428 li
394.075 76.2428 393.391 76.6219 393.171 77.0854 cv
392.679 78.1161 li
383.678 78.1403 li
383.032 78.1403 382.503 78.5669 382.503 79.0883 cv
383.016 88.7015 li
383.016 89.1981 383.52 89.6044 384.135 89.6044 cv
402.401 89.6044 li
403.016 89.6044 403.52 89.1981 403.52 88.7015 cv
404.032 77.1213 li
404.032 76.5999 403.504 76.1734 402.858 76.1734 cv
cp
.992157 .721569 .0745098 rgb
f
402.857 76.6733 mo
394.694 76.7427 li
394.231 76.7427 393.748 77.0371 393.622 77.3003 cv
392.996 78.6152 li
383.679 78.6401 li
383.28 78.6401 383.004 78.8765 383.004 79.0884 cv
383.515 88.6753 li
383.516 88.8916 383.78 89.1045 384.135 89.1045 cv
402.401 89.1045 li
402.755 89.1045 403.02 88.8916 403.02 88.7017 cv
403.532 77.0991 li
403.532 76.9092 403.255 76.6733 402.857 76.6733 cv
cp
402.401 90.1045 mo
384.135 90.1045 li
383.242 90.1045 382.516 89.4751 382.516 88.7017 cv
382.005 79.1147 li
382.004 78.29 382.755 77.6401 383.678 77.6401 cv
392.363 77.6172 li
392.72 76.8701 li
393.025 76.2275 393.873 75.7427 394.69 75.7427 cv
402.853 75.6733 li
403.781 75.6733 404.532 76.3228 404.532 77.1211 cv
404.02 88.7236 li
404.02 89.4751 403.294 90.1045 402.401 90.1045 cv
cp
.223529 .235294 .254902 rgb
f
410.365 71.5643 mo
418.053 71.6414 li
418.633 71.6414 419.277 72.0628 419.485 72.5779 cv
419.947 73.7234 li
428.421 73.7503 li
429.029 73.7503 429.527 74.2244 429.527 74.8038 cv
429.044 85.4876 li
429.044 86.0394 428.57 86.4909 427.991 86.4909 cv
410.795 86.4909 li
410.216 86.4909 409.742 86.0394 409.742 85.4876 cv
409.259 72.6178 li
409.259 72.0383 409.757 71.5643 410.365 71.5643 cv
cp
.333333 .839216 .823529 rgb
f
410.36 72.0645 mo
410.031 72.0645 409.759 72.3125 409.759 72.6177 cv
410.242 85.4692 li
410.242 85.7651 410.49 85.9907 410.795 85.9907 cv
427.991 85.9907 li
428.296 85.9907 428.544 85.7651 428.544 85.4878 cv
429.027 74.7812 li
429.026 74.4985 428.755 74.2505 428.421 74.2505 cv
419.609 74.2222 li
419.02 72.7651 li
418.889 72.439 418.428 72.1416 418.054 72.1416 cv
410.36 72.0645 li
cp
427.991 86.9907 mo
410.795 86.9907 li
409.938 86.9907 409.242 86.3164 409.242 85.4878 cv
408.759 72.6362 li
408.759 71.7612 409.479 71.0645 410.365 71.0645 cv
418.059 71.1416 li
418.833 71.1416 419.665 71.6899 419.948 72.3901 cv
420.285 73.2241 li
428.423 73.2505 li
429.307 73.2505 430.026 73.9473 430.026 74.8037 cv
429.543 85.5103 li
429.544 86.3164 428.848 86.9907 427.991 86.9907 cv
cp
.223529 .235294 .254902 rgb
f
427.971 80.2017 mo
411.38 81.3598 li
410.815 76.0034 li
427.406 74.8452 li
427.971 80.2017 li
cp
1 1 .933333 rgb
f
411.367 76.4663 mo
411.826 80.8276 li
427.419 79.7388 li
426.96 75.3774 li
411.367 76.4663 li
cp
411.38 81.8599 mo
411.126 81.8599 410.909 81.6685 410.883 81.4121 cv
410.318 76.0557 li
410.304 75.9209 410.345 75.7861 410.433 75.6821 cv
410.52 75.5781 410.645 75.5142 410.78 75.5044 cv
427.371 74.3462 li
427.662 74.3398 427.876 74.5254 427.903 74.793 cv
428.468 80.1494 li
428.482 80.2842 428.441 80.4189 428.353 80.5229 cv
428.267 80.627 428.141 80.6909 428.006 80.7007 cv
411.415 81.8589 li
411.403 81.8594 411.391 81.8599 411.38 81.8599 cv
cp
.223529 .235294 .254902 rgb
f
428.983 76.1734 mo
420.816 76.2428 li
420.2 76.2428 419.516 76.6219 419.296 77.0854 cv
418.804 78.1161 li
409.803 78.1403 li
409.157 78.1403 408.628 78.5669 408.628 79.0883 cv
409.141 88.7015 li
409.141 89.1981 409.645 89.6044 410.26 89.6044 cv
428.526 89.6044 li
429.141 89.6044 429.645 89.1981 429.645 88.7015 cv
430.157 77.1213 li
430.157 76.5999 429.629 76.1734 428.983 76.1734 cv
cp
.333333 .839216 .823529 rgb
f
428.982 76.6733 mo
420.819 76.7427 li
420.356 76.7427 419.873 77.0371 419.747 77.3003 cv
419.121 78.6152 li
409.804 78.6401 li
409.405 78.6401 409.129 78.8765 409.129 79.0884 cv
409.64 88.6753 li
409.641 88.8916 409.905 89.1045 410.26 89.1045 cv
428.526 89.1045 li
428.88 89.1045 429.145 88.8916 429.145 88.7017 cv
429.657 77.0991 li
429.657 76.9092 429.38 76.6733 428.982 76.6733 cv
cp
428.526 90.1045 mo
410.26 90.1045 li
409.367 90.1045 408.641 89.4751 408.641 88.7017 cv
408.13 79.1147 li
408.129 78.29 408.88 77.6401 409.803 77.6401 cv
418.488 77.6172 li
418.845 76.8701 li
419.15 76.2275 419.998 75.7427 420.815 75.7427 cv
428.978 75.6733 li
429.906 75.6733 430.657 76.3228 430.657 77.1211 cv
430.145 88.7236 li
430.145 89.4751 429.419 90.1045 428.526 90.1045 cv
cp
.223529 .235294 .254902 rgb
f
357.51 71.5643 mo
365.199 71.6414 li
365.778 71.6414 366.422 72.0628 366.63 72.5779 cv
367.092 73.7234 li
375.566 73.7503 li
376.174 73.7503 376.672 74.2244 376.672 74.8038 cv
376.189 85.4876 li
376.189 86.0394 375.715 86.4909 375.136 86.4909 cv
357.94 86.4909 li
357.361 86.4909 356.887 86.0394 356.887 85.4876 cv
356.404 72.6178 li
356.404 72.0383 356.902 71.5643 357.51 71.5643 cv
cp
1 .419608 .407843 rgb
f
357.505 72.0645 mo
357.176 72.0645 356.904 72.3125 356.904 72.6177 cv
357.387 85.4692 li
357.387 85.7651 357.635 85.9907 357.94 85.9907 cv
375.136 85.9907 li
375.441 85.9907 375.689 85.7651 375.689 85.4878 cv
376.173 74.7812 li
376.172 74.5039 375.895 74.2505 375.566 74.2505 cv
366.754 74.2222 li
366.166 72.7646 li
366.034 72.439 365.573 72.1416 365.198 72.1416 cv
357.505 72.0645 li
cp
375.136 86.9907 mo
357.94 86.9907 li
357.084 86.9907 356.387 86.3164 356.387 85.4878 cv
355.904 72.6362 li
355.904 71.7612 356.624 71.0645 357.51 71.0645 cv
365.203 71.1416 li
365.977 71.1416 366.81 71.6899 367.094 72.3901 cv
367.43 73.2241 li
375.568 73.2505 li
376.452 73.2505 377.172 73.9473 377.172 74.8037 cv
376.688 85.5103 li
376.689 86.3164 375.992 86.9907 375.136 86.9907 cv
cp
.223529 .235294 .254902 rgb
f
375.116 80.2017 mo
358.525 81.3598 li
357.96 76.0034 li
374.551 74.8452 li
375.116 80.2017 li
cp
1 1 .933333 rgb
f
358.512 76.4663 mo
358.971 80.8276 li
374.564 79.7388 li
374.105 75.3774 li
358.512 76.4663 li
cp
358.524 81.8599 mo
358.27 81.8599 358.054 81.6685 358.027 81.4121 cv
357.463 76.0557 li
357.448 75.9209 357.489 75.7861 357.577 75.6821 cv
357.664 75.5781 357.79 75.5142 357.925 75.5044 cv
374.517 74.3462 li
374.805 74.3398 375.021 74.5254 375.049 74.793 cv
375.613 80.1494 li
375.628 80.2842 375.587 80.4189 375.499 80.5229 cv
375.412 80.627 375.286 80.6909 375.151 80.7007 cv
358.56 81.8589 li
358.548 81.8594 358.535 81.8599 358.524 81.8599 cv
cp
.223529 .235294 .254902 rgb
f
376.128 76.1734 mo
367.961 76.2428 li
367.346 76.2428 366.661 76.6219 366.441 77.0854 cv
365.949 78.1161 li
356.948 78.1403 li
356.302 78.1403 355.774 78.5669 355.774 79.0883 cv
356.286 88.7015 li
356.286 89.1981 356.79 89.6044 357.405 89.6044 cv
375.671 89.6044 li
376.286 89.6044 376.79 89.1981 376.79 88.7015 cv
377.302 77.1213 li
377.302 76.5999 376.774 76.1734 376.128 76.1734 cv
cp
1 .419608 .407843 rgb
f
376.128 76.6733 mo
367.965 76.7427 li
367.509 76.7427 367.015 77.0425 366.892 77.3003 cv
366.266 78.6152 li
356.949 78.6401 li
356.551 78.6401 356.273 78.8765 356.273 79.0884 cv
356.785 88.6748 li
356.786 88.8916 357.051 89.1045 357.405 89.1045 cv
375.671 89.1045 li
376.025 89.1045 376.29 88.8916 376.29 88.7017 cv
376.804 77.0991 li
376.803 76.9092 376.525 76.6733 376.128 76.6733 cv
cp
375.671 90.1045 mo
357.405 90.1045 li
356.513 90.1045 355.786 89.4751 355.786 88.7017 cv
355.274 79.1152 li
355.273 78.29 356.024 77.6401 356.948 77.6401 cv
365.633 77.6172 li
365.989 76.8701 li
366.295 76.2275 367.143 75.7427 367.961 75.7427 cv
376.124 75.6733 li
377.052 75.6733 377.803 76.3228 377.803 77.1211 cv
377.289 88.7236 li
377.29 89.4751 376.563 90.1045 375.671 90.1045 cv
cp
.223529 .235294 .254902 rgb
f
395.308 57.9285 mo
395.308 56.8015 394.395 55.8879 393.268 55.8879 cv
392.141 55.8879 391.227 56.8015 391.227 57.9285 cv
391.227 59.0555 392.141 59.9691 393.268 59.9691 cv
394.395 59.9691 395.308 59.0555 395.308 57.9285 cv
cp
.992157 .721569 .0745098 rgb
f
393.268 56.3877 mo
392.418 56.3877 391.727 57.0791 391.727 57.9287 cv
391.727 58.7783 392.418 59.4692 393.268 59.4692 cv
394.117 59.4692 394.809 58.7783 394.809 57.9287 cv
394.809 57.0791 394.117 56.3877 393.268 56.3877 cv
cp
393.268 60.4692 mo
391.867 60.4692 390.727 59.3296 390.727 57.9287 cv
390.727 56.5278 391.867 55.3877 393.268 55.3877 cv
394.669 55.3877 395.809 56.5278 395.809 57.9287 cv
395.809 59.3296 394.669 60.4692 393.268 60.4692 cv
cp
.223529 .235294 .254902 rgb
f
368.579 57.9285 mo
368.579 56.8015 367.665 55.8879 366.538 55.8879 cv
365.411 55.8879 364.497 56.8015 364.497 57.9285 cv
364.497 59.0555 365.411 59.9691 366.538 59.9691 cv
367.665 59.9691 368.579 59.0555 368.579 57.9285 cv
cp
.992157 .721569 .0745098 rgb
f
366.538 56.3877 mo
365.688 56.3877 364.997 57.0791 364.997 57.9287 cv
364.997 58.7783 365.688 59.4692 366.538 59.4692 cv
367.388 59.4692 368.079 58.7783 368.079 57.9287 cv
368.079 57.0791 367.388 56.3877 366.538 56.3877 cv
cp
366.538 60.4692 mo
365.137 60.4692 363.997 59.3296 363.997 57.9287 cv
363.997 56.5278 365.137 55.3877 366.538 55.3877 cv
367.939 55.3877 369.079 56.5278 369.079 57.9287 cv
369.079 59.3296 367.939 60.4692 366.538 60.4692 cv
cp
.223529 .235294 .254902 rgb
f
422.927 57.9285 mo
422.927 56.8015 422.013 55.8879 420.886 55.8879 cv
419.759 55.8879 418.846 56.8015 418.846 57.9285 cv
418.846 59.0555 419.759 59.9691 420.886 59.9691 cv
422.013 59.9691 422.927 59.0555 422.927 57.9285 cv
cp
.992157 .721569 .0745098 rgb
f
420.886 56.3877 mo
420.036 56.3877 419.346 57.0791 419.346 57.9287 cv
419.346 58.7783 420.036 59.4692 420.886 59.4692 cv
421.735 59.4692 422.427 58.7783 422.427 57.9287 cv
422.427 57.0791 421.735 56.3877 420.886 56.3877 cv
cp
420.886 60.4692 mo
419.485 60.4692 418.346 59.3296 418.346 57.9287 cv
418.346 56.5278 419.485 55.3877 420.886 55.3877 cv
422.287 55.3877 423.427 56.5278 423.427 57.9287 cv
423.427 59.3296 422.287 60.4692 420.886 60.4692 cv
cp
.223529 .235294 .254902 rgb
f
248.782 187.611 mo
248.782 193.487 li
248.782 198.35 256.897 202.297 266.911 202.297 cv
276.922 202.297 285.035 198.35 285.035 193.487 cv
285.035 187.611 li
248.782 187.611 li
cp
.992157 .721569 .0745098 rgb
f
249.283 188.111 mo
249.283 193.488 li
249.283 198.07 257.19 201.797 266.91 201.797 cv
276.628 201.797 284.534 198.07 284.534 193.488 cv
284.534 188.111 li
249.283 188.111 li
cp
266.91 202.797 mo
256.465 202.797 248.283 198.708 248.283 193.488 cv
248.283 187.111 li
285.534 187.111 li
285.534 193.488 li
285.534 198.708 277.354 202.797 266.91 202.797 cv
cp
.223529 .235294 .254902 rgb
f
248.782 180.443 mo
248.782 186.32 li
248.782 191.183 256.897 195.13 266.911 195.13 cv
276.922 195.13 285.035 191.183 285.035 186.32 cv
285.035 180.443 li
248.782 180.443 li
cp
.992157 .721569 .0745098 rgb
f
249.283 180.944 mo
249.283 186.32 li
249.283 190.902 257.19 194.63 266.91 194.63 cv
276.628 194.63 284.534 190.902 284.534 186.32 cv
284.534 180.944 li
249.283 180.944 li
cp
266.91 195.63 mo
256.465 195.63 248.283 191.54 248.283 186.32 cv
248.283 179.944 li
285.534 179.944 li
285.534 186.32 li
285.534 191.54 277.354 195.63 266.91 195.63 cv
cp
.223529 .235294 .254902 rgb
f
248.782 173.276 mo
248.782 179.152 li
248.782 184.015 256.897 187.962 266.911 187.962 cv
276.922 187.962 285.035 184.015 285.035 179.152 cv
285.035 173.276 li
248.782 173.276 li
cp
.992157 .721569 .0745098 rgb
f
249.283 173.776 mo
249.283 179.153 li
249.283 183.735 257.19 187.462 266.91 187.462 cv
276.628 187.462 284.534 183.735 284.534 179.153 cv
284.534 173.776 li
249.283 173.776 li
cp
266.91 188.462 mo
256.465 188.462 248.283 184.373 248.283 179.153 cv
248.283 172.776 li
285.534 172.776 li
285.534 179.153 li
285.534 184.373 277.354 188.462 266.91 188.462 cv
cp
.223529 .235294 .254902 rgb
f
248.782 166.108 mo
248.782 171.985 li
248.782 176.848 256.897 180.795 266.911 180.795 cv
276.922 180.795 285.035 176.848 285.035 171.985 cv
285.035 166.108 li
248.782 166.108 li
cp
.992157 .721569 .0745098 rgb
f
249.283 166.609 mo
249.283 171.985 li
249.283 176.567 257.19 180.295 266.91 180.295 cv
276.628 180.295 284.534 176.567 284.534 171.985 cv
284.534 166.609 li
249.283 166.609 li
cp
266.91 181.295 mo
256.465 181.295 248.283 177.205 248.283 171.985 cv
248.283 165.609 li
285.534 165.609 li
285.534 171.985 li
285.534 177.205 277.354 181.295 266.91 181.295 cv
cp
.223529 .235294 .254902 rgb
f
248.782 158.941 mo
248.782 164.817 li
248.782 169.68 256.897 173.627 266.911 173.627 cv
276.922 173.627 285.035 169.68 285.035 164.817 cv
285.035 158.941 li
248.782 158.941 li
cp
.992157 .721569 .0745098 rgb
f
249.283 159.441 mo
249.283 164.818 li
249.283 169.4 257.19 173.127 266.91 173.127 cv
276.628 173.127 284.534 169.4 284.534 164.818 cv
284.534 159.441 li
249.283 159.441 li
cp
266.91 174.127 mo
256.465 174.127 248.283 170.038 248.283 164.818 cv
248.283 158.441 li
285.534 158.441 li
285.534 164.818 li
285.534 170.038 277.354 174.127 266.91 174.127 cv
cp
.223529 .235294 .254902 rgb
f
248.782 151.773 mo
248.782 157.65 li
248.782 162.513 256.897 166.46 266.911 166.46 cv
276.922 166.46 285.035 162.513 285.035 157.65 cv
285.035 151.773 li
248.782 151.773 li
cp
.992157 .721569 .0745098 rgb
f
249.283 152.274 mo
249.283 157.65 li
249.283 162.232 257.19 165.96 266.91 165.96 cv
276.628 165.96 284.534 162.232 284.534 157.65 cv
284.534 152.274 li
249.283 152.274 li
cp
266.91 166.96 mo
256.465 166.96 248.283 162.87 248.283 157.65 cv
248.283 151.274 li
285.534 151.274 li
285.534 157.65 li
285.534 162.87 277.354 166.96 266.91 166.96 cv
cp
.223529 .235294 .254902 rgb
f
248.782 143.137 mo
248.782 150.482 li
248.782 155.345 256.897 159.292 266.911 159.292 cv
276.922 159.292 285.035 155.345 285.035 150.482 cv
285.035 143.137 li
248.782 143.137 li
cp
.992157 .721569 .0745098 rgb
f
249.283 143.637 mo
249.283 150.483 li
249.283 155.065 257.19 158.792 266.91 158.792 cv
276.628 158.792 284.534 155.065 284.534 150.483 cv
284.534 143.637 li
249.283 143.637 li
cp
266.91 159.792 mo
256.465 159.792 248.283 155.703 248.283 150.483 cv
248.283 142.637 li
285.534 142.637 li
285.534 150.483 li
285.534 155.703 277.354 159.792 266.91 159.792 cv
cp
.223529 .235294 .254902 rgb
f
285.035 143.138 mo
285.035 148.005 276.922 151.949 266.911 151.949 cv
256.897 151.949 248.782 148.005 248.782 143.138 cv
248.782 138.272 256.897 134.325 266.911 134.325 cv
276.922 134.325 285.035 138.272 285.035 143.138 cv
cp
.992157 .721569 .0745098 rgb
f
266.91 134.824 mo
257.19 134.824 249.283 138.554 249.283 143.138 cv
249.283 147.721 257.19 151.449 266.91 151.449 cv
276.628 151.449 284.534 147.721 284.534 143.138 cv
284.534 138.554 276.628 134.824 266.91 134.824 cv
cp
266.91 152.449 mo
256.465 152.449 248.283 148.36 248.283 143.138 cv
248.283 137.915 256.465 133.824 266.91 133.824 cv
277.354 133.824 285.534 137.915 285.534 143.138 cv
285.534 148.36 277.354 152.449 266.91 152.449 cv
cp
.223529 .235294 .254902 rgb
f
316.217 176.011 mo
316.217 190.311 304.629 201.904 290.327 201.904 cv
276.025 201.904 264.434 190.311 264.434 176.011 cv
264.434 161.709 276.025 150.115 290.327 150.115 cv
304.629 150.115 316.217 161.709 316.217 176.011 cv
cp
.333333 .839216 .823529 rgb
f
290.327 150.615 mo
276.325 150.615 264.934 162.008 264.934 176.011 cv
264.934 190.013 276.325 201.404 290.327 201.404 cv
304.327 201.404 315.717 190.013 315.717 176.011 cv
315.717 162.008 304.327 150.615 290.327 150.615 cv
cp
290.327 202.404 mo
275.774 202.404 263.934 190.565 263.934 176.011 cv
263.934 161.456 275.774 149.615 290.327 149.615 cv
304.879 149.615 316.717 161.456 316.717 176.011 cv
316.717 190.565 304.879 202.404 290.327 202.404 cv
cp
.223529 .235294 .254902 rgb
f
291.391 176.011 mo
298.033 169.365 li
300.733 171.955 303.828 174.1 307.17 175.72 cv
305.605 179.191 303.423 182.419 300.67 185.284 cv
291.391 176.011 li
cp
289.464 193.098 mo
287.858 189.842 285.744 186.822 283.218 184.184 cv
290.327 177.076 li
299.605 186.355 li
296.58 189.26 293.154 191.518 289.464 193.098 cv
cp
272.935 176.726 mo
274.517 172.995 276.794 169.529 279.726 166.472 cv
289.26 176.011 li
282.15 183.119 li
279.43 180.514 276.308 178.347 272.935 176.726 cv
cp
290.469 158.866 mo
292.104 162.321 294.306 165.521 296.966 168.302 cv
290.327 174.944 li
280.789 165.408 li
283.69 162.624 286.957 160.435 290.469 158.866 cv
cp
308.093 194.844 mo
308.276 194.672 308.455 194.498 308.637 194.319 cv
308.814 194.141 308.987 193.96 309.157 193.778 cv
301.738 186.355 li
304.552 183.425 306.846 180.016 308.508 176.338 cv
309.512 176.772 310.536 177.163 311.575 177.506 cv
313.062 177.99 314.566 178.365 316.085 178.646 cv
316.135 178.149 316.173 177.649 316.194 177.15 cv
313.746 176.696 311.371 175.969 309.089 174.978 cv
309.374 174.263 309.639 173.545 309.873 172.816 cv
311.107 169.038 311.675 165.154 311.581 161.211 cv
311.08 160.497 310.538 159.795 309.954 159.12 cv
310.411 164.406 309.64 169.584 307.74 174.359 cv
304.624 172.834 301.707 170.804 299.1 168.302 cv
309.157 158.242 li
308.987 158.057 308.814 157.879 308.637 157.698 cv
308.455 157.521 308.276 157.347 308.093 157.176 cv
298.033 167.236 li
295.453 164.538 293.372 161.524 291.835 158.295 cv
296.562 156.436 301.684 155.68 306.905 156.123 cv
306.211 155.535 305.486 154.995 304.746 154.499 cv
300.849 154.424 297.004 154.988 293.262 156.205 cv
292.58 156.43 291.898 156.677 291.228 156.945 cv
290.303 154.754 289.619 152.48 289.187 150.142 cv
288.684 150.164 288.184 150.199 287.687 150.248 cv
287.971 151.768 288.347 153.275 288.831 154.762 cv
289.136 155.698 289.482 156.611 289.864 157.519 cv
286.141 159.181 282.692 161.496 279.726 164.344 cv
272.559 157.176 li
272.379 157.347 272.195 157.521 272.017 157.698 cv
271.838 157.879 271.668 158.057 271.494 158.242 cv
278.659 165.408 li
275.678 168.526 273.268 172.168 271.588 176.109 cv
270.615 175.685 269.617 175.309 268.611 174.984 cv
267.263 174.543 265.894 174.189 264.52 173.915 cv
264.479 174.421 264.452 174.921 264.44 175.424 cv
266.71 175.877 268.916 176.568 271.042 177.483 cv
270.858 177.97 270.683 178.455 270.524 178.949 cv
269.305 182.687 268.736 186.528 268.815 190.426 cv
269.312 191.173 269.857 191.888 270.439 192.589 cv
270.013 187.58 270.692 182.665 272.389 178.1 cv
275.531 179.625 278.459 181.667 281.083 184.184 cv
271.494 193.778 li
271.668 193.96 271.838 194.141 272.017 194.319 cv
272.195 194.498 272.379 194.672 272.559 194.844 cv
282.15 185.249 li
284.59 187.797 286.58 190.627 288.087 193.653 cv
283.478 195.386 278.507 196.076 273.442 195.642 cv
274.117 196.223 274.812 196.767 275.531 197.264 cv
279.47 197.357 283.357 196.79 287.13 195.561 cv
287.666 195.385 288.193 195.194 288.721 194.995 cv
289.704 197.211 290.438 199.523 290.911 201.895 cv
291.416 201.886 291.916 201.857 292.419 201.815 cv
292.145 200.439 291.795 199.074 291.351 197.72 cv
290.988 196.612 290.565 195.513 290.09 194.443 cv
293.986 192.77 297.589 190.38 300.67 187.423 cv
308.093 194.844 li
cp
f
305.576 182.149 mo
293.118 180.519 li
295.18 183.82 li
275.758 198.008 264.932 181.242 264.932 181.242 cv
271.915 204.289 293.451 193.704 299.179 190.229 cv
301.571 194.058 li
305.576 182.149 li
cp
1 1 .933333 rgb
f
266.322 183.712 mo
269.356 191.332 274.59 195.191 281.909 195.191 cv
289.451 195.191 296.836 191.066 298.92 189.801 cv
299.154 189.659 299.458 189.731 299.603 189.964 cv
301.435 192.896 li
304.908 182.567 li
294.103 181.152 li
295.604 183.555 li
295.743 183.777 295.686 184.069 295.475 184.223 cv
290.21 188.07 285.069 190.02 280.194 190.021 cv
273.439 190.021 268.717 186.234 266.322 183.712 cv
cp
281.909 196.191 mo
273.302 196.191 267.43 191.21 264.454 181.387 cv
264.382 181.149 264.496 180.894 264.722 180.789 cv
264.949 180.685 265.217 180.762 265.352 180.971 cv
265.404 181.051 270.676 189.021 280.194 189.021 cv
284.737 189.02 289.551 187.226 294.508 183.688 cv
292.694 180.783 li
292.592 180.619 292.592 180.411 292.697 180.248 cv
292.802 180.085 292.987 179.995 293.183 180.023 cv
305.641 181.654 li
305.789 181.673 305.921 181.758 306 181.885 cv
306.079 182.012 306.097 182.167 306.05 182.309 cv
302.046 194.217 li
301.984 194.401 301.822 194.531 301.63 194.554 cv
301.436 194.584 301.25 194.486 301.148 194.322 cv
299.014 190.909 li
296.422 192.429 289.26 196.191 281.909 196.191 cv
cp
.223529 .235294 .254902 rgb
f
176.17 172.288 mo
176.17 177.646 li
176.17 182.08 183.568 185.679 192.698 185.679 cv
201.826 185.679 209.222 182.08 209.222 177.646 cv
209.222 172.288 li
176.17 172.288 li
cp
1 .419608 .407843 rgb
f
176.671 172.789 mo
176.671 177.646 li
176.671 181.729 184.01 185.178 192.699 185.178 cv
201.384 185.178 208.722 181.729 208.722 177.646 cv
208.722 172.789 li
176.671 172.789 li
cp
192.699 186.178 mo
183.15 186.178 175.671 182.43 175.671 177.646 cv
175.671 171.789 li
209.722 171.789 li
209.722 177.646 li
209.722 182.43 202.245 186.178 192.699 186.178 cv
cp
.223529 .235294 .254902 rgb
f
176.17 165.799 mo
176.17 171.157 li
176.17 175.591 183.568 179.19 192.698 179.19 cv
201.826 179.19 209.222 175.591 209.222 171.157 cv
209.222 165.799 li
176.17 165.799 li
cp
1 .419608 .407843 rgb
f
176.671 166.299 mo
176.671 171.157 li
176.671 175.24 184.01 178.69 192.699 178.69 cv
201.384 178.69 208.722 175.24 208.722 171.157 cv
208.722 166.299 li
176.671 166.299 li
cp
192.699 179.69 mo
183.15 179.69 175.671 175.942 175.671 171.157 cv
175.671 165.299 li
209.722 165.299 li
209.722 171.157 li
209.722 175.942 202.245 179.69 192.699 179.69 cv
cp
.223529 .235294 .254902 rgb
f
176.17 159.311 mo
176.17 164.668 li
176.17 169.102 183.568 172.701 192.698 172.701 cv
201.826 172.701 209.222 169.102 209.222 164.668 cv
209.222 159.311 li
176.17 159.311 li
cp
1 .419608 .407843 rgb
f
176.671 159.81 mo
176.671 164.669 li
176.671 168.752 184.01 172.201 192.699 172.201 cv
201.384 172.201 208.722 168.752 208.722 164.669 cv
208.722 159.81 li
176.671 159.81 li
cp
192.699 173.201 mo
183.15 173.201 175.671 169.453 175.671 164.669 cv
175.671 158.81 li
209.722 158.81 li
209.722 164.669 li
209.722 169.453 202.245 173.201 192.699 173.201 cv
cp
.223529 .235294 .254902 rgb
f
176.17 152.822 mo
176.17 158.18 li
176.17 162.613 183.568 166.212 192.698 166.212 cv
201.826 166.212 209.222 162.613 209.222 158.18 cv
209.222 152.822 li
176.17 152.822 li
cp
1 .419608 .407843 rgb
f
176.671 153.322 mo
176.671 158.179 li
176.671 162.262 184.01 165.712 192.699 165.712 cv
201.384 165.712 208.722 162.262 208.722 158.179 cv
208.722 153.322 li
176.671 153.322 li
cp
192.699 166.712 mo
183.15 166.712 175.671 162.964 175.671 158.179 cv
175.671 152.322 li
209.722 152.322 li
209.722 158.179 li
209.722 162.964 202.245 166.712 192.699 166.712 cv
cp
.223529 .235294 .254902 rgb
f
176.17 144.994 mo
176.17 151.691 li
176.17 156.124 183.568 159.723 192.698 159.723 cv
201.826 159.723 209.222 156.124 209.222 151.691 cv
209.222 144.994 li
176.17 144.994 li
cp
1 .419608 .407843 rgb
f
176.671 145.494 mo
176.671 151.69 li
176.671 155.773 184.01 159.223 192.699 159.223 cv
201.384 159.223 208.722 155.773 208.722 151.69 cv
208.722 145.494 li
176.671 145.494 li
cp
192.699 160.223 mo
183.15 160.223 175.671 156.475 175.671 151.69 cv
175.671 144.494 li
209.722 144.494 li
209.722 151.69 li
209.722 156.475 202.245 160.223 192.699 160.223 cv
cp
.223529 .235294 .254902 rgb
f
209.222 144.994 mo
209.222 149.432 201.826 153.028 192.698 153.028 cv
183.568 153.028 176.17 149.432 176.17 144.994 cv
176.17 140.558 183.568 136.959 192.698 136.959 cv
201.826 136.959 209.222 140.558 209.222 144.994 cv
cp
1 .419608 .407843 rgb
f
192.699 137.46 mo
183.861 137.46 176.671 140.84 176.671 144.994 cv
176.671 149.148 183.861 152.528 192.699 152.528 cv
201.534 152.528 208.722 149.148 208.722 144.994 cv
208.722 140.91 201.384 137.46 192.699 137.46 cv
cp
192.699 153.528 mo
183.15 153.528 175.671 149.779 175.671 144.994 cv
175.671 140.209 183.15 136.46 192.699 136.46 cv
202.245 136.46 209.722 140.209 209.722 144.994 cv
209.722 149.779 202.245 153.528 192.699 153.528 cv
cp
.223529 .235294 .254902 rgb
f
159.505 137.127 mo
168.554 146.195 li
168.519 180.799 li
135.783 180.766 li
135.827 137.103 li
159.505 137.127 li
cp
1 1 .933333 rgb
f
136.284 180.267 mo
168.02 180.299 li
168.054 146.402 li
159.297 137.628 li
136.326 137.604 li
136.284 180.267 li
cp
169.018 181.301 mo
135.282 181.265 li
135.328 136.602 li
159.713 136.628 li
169.054 145.988 li
169.018 181.301 li
cp
.223529 .235294 .254902 rgb
f
157.51 139.155 mo
166.567 148.214 li
166.567 182.818 li
133.831 182.818 li
133.831 139.155 li
157.51 139.155 li
cp
1 1 .933333 rgb
f
134.331 182.318 mo
166.067 182.318 li
166.067 148.421 li
157.303 139.655 li
134.331 139.655 li
134.331 182.318 li
cp
167.067 183.318 mo
133.331 183.318 li
133.331 138.655 li
157.717 138.655 li
167.067 148.007 li
167.067 183.318 li
cp
.223529 .235294 .254902 rgb
f
155.541 141.191 mo
131.863 141.191 li
131.863 184.854 li
164.599 184.854 li
164.599 150.249 li
155.541 141.191 li
cp
1 1 .933333 rgb
f
132.362 184.353 mo
164.099 184.353 li
164.099 150.456 li
155.334 141.691 li
132.362 141.691 li
132.362 184.353 li
cp
164.599 185.353 mo
131.862 185.353 li
131.586 185.353 131.362 185.13 131.362 184.853 cv
131.362 141.191 li
131.362 140.915 131.586 140.691 131.862 140.691 cv
155.541 140.691 li
155.674 140.691 155.801 140.744 155.895 140.838 cv
164.952 149.895 li
165.046 149.989 165.099 150.116 165.099 150.249 cv
165.099 184.853 li
165.099 185.13 164.875 185.353 164.599 185.353 cv
cp
.223529 .235294 .254902 rgb
f
155.539 150.251 mo
164.599 150.251 li
155.539 141.191 li
155.539 150.251 li
cp
1 1 .933333 rgb
f
156.039 149.752 mo
163.392 149.752 li
156.039 142.398 li
156.039 149.752 li
cp
164.599 150.752 mo
155.539 150.752 li
155.263 150.752 155.039 150.528 155.039 150.252 cv
155.039 141.191 li
155.039 140.989 155.161 140.806 155.348 140.729 cv
155.533 140.652 155.75 140.694 155.893 140.838 cv
164.952 149.898 li
165.095 150.041 165.138 150.257 165.061 150.443 cv
164.983 150.63 164.801 150.752 164.599 150.752 cv
cp
.223529 .235294 .254902 rgb
f
162.522 173.999 mo
133.94 173.999 li
133.94 176.609 li
162.522 176.609 li
162.522 173.999 li
cp
.333333 .839216 .823529 rgb
f
134.439 176.108 mo
162.021 176.108 li
162.021 174.499 li
134.439 174.499 li
134.439 176.108 li
cp
163.021 177.108 mo
133.439 177.108 li
133.439 173.499 li
163.021 173.499 li
163.021 177.108 li
cp
.223529 .235294 .254902 rgb
f
162.522 168.806 mo
133.94 168.806 li
133.94 171.416 li
162.522 171.416 li
162.522 168.806 li
cp
.333333 .839216 .823529 rgb
f
134.439 170.916 mo
162.021 170.916 li
162.021 169.306 li
134.439 169.306 li
134.439 170.916 li
cp
163.021 171.916 mo
133.439 171.916 li
133.439 168.306 li
163.021 168.306 li
163.021 171.916 li
cp
.223529 .235294 .254902 rgb
f
162.522 163.613 mo
133.94 163.613 li
133.94 166.223 li
162.522 166.223 li
162.522 163.613 li
cp
.333333 .839216 .823529 rgb
f
134.439 165.722 mo
162.021 165.722 li
162.021 164.113 li
134.439 164.113 li
134.439 165.722 li
cp
163.021 166.722 mo
133.439 166.722 li
133.439 163.113 li
163.021 163.113 li
163.021 166.722 li
cp
.223529 .235294 .254902 rgb
f
162.522 158.15 mo
133.94 158.15 li
133.94 160.76 li
162.522 160.76 li
162.522 158.15 li
cp
.333333 .839216 .823529 rgb
f
134.439 160.26 mo
162.021 160.26 li
162.021 158.65 li
134.439 158.65 li
134.439 160.26 li
cp
163.021 161.26 mo
133.439 161.26 li
133.439 157.65 li
163.021 157.65 li
163.021 161.26 li
cp
.223529 .235294 .254902 rgb
f
153.264 152.958 mo
133.94 152.958 li
133.94 155.567 li
153.264 155.567 li
153.264 152.958 li
cp
.333333 .839216 .823529 rgb
f
134.439 155.067 mo
152.764 155.067 li
152.764 153.458 li
134.439 153.458 li
134.439 155.067 li
cp
153.764 156.067 mo
133.439 156.067 li
133.439 152.458 li
153.764 152.458 li
153.764 156.067 li
cp
.223529 .235294 .254902 rgb
f
192.696 200.162 mo
146.28 200.162 li
146.004 200.162 145.78 199.938 145.78 199.662 cv
145.78 187.163 li
145.78 186.886 146.004 186.663 146.28 186.663 cv
146.557 186.663 146.78 186.886 146.78 187.163 cv
146.78 199.162 li
192.196 199.162 li
192.196 190.751 li
192.196 190.474 192.42 190.251 192.696 190.251 cv
192.973 190.251 193.196 190.474 193.196 190.751 cv
193.196 199.662 li
193.196 199.938 192.973 200.162 192.696 200.162 cv
cp
f
195.189 191.48 mo
192.697 187.163 li
190.203 191.48 li
195.189 191.48 li
cp
f
396.703 404.62 mo
396.427 404.62 396.203 404.397 396.203 404.12 cv
396.203 371.812 li
396.203 371.535 396.427 371.312 396.703 371.312 cv
396.979 371.312 397.203 371.535 397.203 371.812 cv
397.203 404.12 li
397.203 404.397 396.979 404.62 396.703 404.62 cv
cp
f
368.723 420.775 mo
368.551 420.775 368.382 420.685 368.29 420.525 cv
368.151 420.285 368.233 419.979 368.473 419.842 cv
396.453 403.688 li
396.693 403.55 396.999 403.631 397.136 403.87 cv
397.274 404.109 397.192 404.415 396.953 404.553 cv
368.973 420.707 li
368.894 420.753 368.808 420.775 368.723 420.775 cv
cp
f
424.684 420.775 mo
424.599 420.775 424.513 420.753 424.434 420.707 cv
396.453 404.553 li
396.214 404.415 396.132 404.109 396.27 403.87 cv
396.408 403.631 396.715 403.55 396.953 403.688 cv
424.934 419.842 li
425.173 419.979 425.255 420.285 425.116 420.525 cv
425.024 420.685 424.855 420.775 424.684 420.775 cv
cp
f
406.481 386.807 mo
386.927 386.807 li
386.927 385.202 li
388.816 385.202 li
389.161 381.731 li
377.849 381.731 li
376.688 381.731 375.743 380.786 375.743 379.625 cv
375.743 355.748 li
375.743 354.586 376.688 353.641 377.849 353.641 cv
415.557 353.641 li
416.718 353.641 417.664 354.586 417.664 355.748 cv
417.664 379.625 li
417.664 380.786 416.718 381.731 415.557 381.731 cv
404.247 381.731 li
404.593 385.202 li
406.481 385.202 li
406.481 386.807 li
cp
.333333 .839216 .823529 rgb
f
387.427 386.307 mo
405.981 386.307 li
405.981 385.702 li
404.14 385.702 li
403.694 381.232 li
415.557 381.232 li
416.443 381.232 417.164 380.511 417.164 379.625 cv
417.164 355.748 li
417.164 354.862 416.443 354.142 415.557 354.142 cv
377.849 354.142 li
376.963 354.142 376.242 354.862 376.242 355.748 cv
376.242 379.625 li
376.242 380.511 376.963 381.232 377.849 381.232 cv
389.713 381.232 li
389.27 385.702 li
387.427 385.702 li
387.427 386.307 li
cp
406.981 387.307 mo
386.427 387.307 li
386.427 384.702 li
388.363 384.702 li
388.609 382.232 li
377.849 382.232 li
376.411 382.232 375.242 381.063 375.242 379.625 cv
375.242 355.748 li
375.242 354.311 376.411 353.142 377.849 353.142 cv
415.557 353.142 li
416.994 353.142 418.164 354.311 418.164 355.748 cv
418.164 379.625 li
418.164 381.063 416.994 382.232 415.557 382.232 cv
404.8 382.232 li
405.046 384.702 li
406.981 384.702 li
406.981 387.307 li
cp
.223529 .235294 .254902 rgb
f
414.806 379.287 mo
378.6 379.287 li
377.849 379.287 377.239 378.678 377.239 377.929 cv
377.239 356.669 li
377.239 355.918 377.849 355.308 378.6 355.308 cv
414.806 355.308 li
415.557 355.308 416.168 355.918 416.168 356.669 cv
416.168 377.929 li
416.168 378.678 415.557 379.287 414.806 379.287 cv
cp
1 1 .933333 rgb
f
378.6 355.808 mo
378.125 355.808 377.738 356.194 377.738 356.669 cv
377.738 377.929 li
377.738 378.402 378.125 378.787 378.6 378.787 cv
414.806 378.787 li
415.281 378.787 415.668 378.402 415.668 377.929 cv
415.668 356.669 li
415.668 356.194 415.281 355.808 414.806 355.808 cv
378.6 355.808 li
cp
414.806 379.787 mo
378.6 379.787 li
377.573 379.787 376.738 378.953 376.738 377.929 cv
376.738 356.669 li
376.738 355.643 377.573 354.808 378.6 354.808 cv
414.806 354.808 li
415.833 354.808 416.668 355.643 416.668 356.669 cv
416.668 377.929 li
416.668 378.953 415.833 379.787 414.806 379.787 cv
cp
.223529 .235294 .254902 rgb
f
436.178 431.336 mo
436.178 432.359 435.342 433.193 434.321 433.193 cv
422.274 433.193 li
421.253 433.193 420.417 432.359 420.417 431.336 cv
420.417 406.327 li
420.417 405.305 421.253 404.47 422.274 404.47 cv
434.321 404.47 li
435.342 404.47 436.178 405.305 436.178 406.327 cv
436.178 431.336 li
cp
1 .419608 .407843 rgb
f
422.274 404.97 mo
421.526 404.97 420.917 405.578 420.917 406.326 cv
420.917 431.336 li
420.917 432.084 421.526 432.693 422.274 432.693 cv
434.321 432.693 li
435.069 432.693 435.679 432.084 435.679 431.336 cv
435.679 406.326 li
435.679 405.578 435.069 404.97 434.321 404.97 cv
422.274 404.97 li
cp
434.321 433.693 mo
422.274 433.693 li
420.975 433.693 419.917 432.636 419.917 431.336 cv
419.917 406.326 li
419.917 405.026 420.975 403.97 422.274 403.97 cv
434.321 403.97 li
435.621 403.97 436.679 405.026 436.679 406.326 cv
436.679 431.336 li
436.679 432.636 435.621 433.693 434.321 433.693 cv
cp
.223529 .235294 .254902 rgb
f
435.106 428.53 mo
435.106 428.938 434.772 429.272 434.365 429.272 cv
422.232 429.272 li
421.824 429.272 421.489 428.938 421.489 428.53 cv
421.489 407.736 li
421.489 407.328 421.824 406.993 422.232 406.993 cv
434.365 406.993 li
434.772 406.993 435.106 407.328 435.106 407.736 cv
435.106 428.53 li
cp
.333333 .839216 .823529 rgb
f
422.231 407.493 mo
422.101 407.493 421.989 407.604 421.989 407.736 cv
421.989 428.53 li
421.989 428.661 422.101 428.772 422.231 428.772 cv
434.364 428.772 li
434.495 428.772 434.606 428.661 434.606 428.53 cv
434.606 407.736 li
434.606 407.604 434.495 407.493 434.364 407.493 cv
422.231 407.493 li
cp
434.364 429.772 mo
422.231 429.772 li
421.547 429.772 420.989 429.215 420.989 428.53 cv
420.989 407.736 li
420.989 407.051 421.547 406.493 422.231 406.493 cv
434.364 406.493 li
435.049 406.493 435.606 407.051 435.606 407.736 cv
435.606 428.53 li
435.606 429.215 435.049 429.772 434.364 429.772 cv
cp
.223529 .235294 .254902 rgb
f
429.451 431.956 mo
429.451 432.183 429.266 432.367 429.039 432.367 cv
427.556 432.367 li
427.33 432.367 427.145 432.183 427.145 431.956 cv
427.145 430.473 li
427.145 430.246 427.33 430.062 427.556 430.062 cv
429.039 430.062 li
429.266 430.062 429.451 430.246 429.451 430.473 cv
429.451 431.956 li
cp
f
376.345 399.155 mo
377.862 399.155 379.104 400.397 379.104 401.915 cv
379.104 431.403 li
379.104 432.922 377.862 433.193 376.345 433.193 cv
352.513 433.193 li
350.996 433.193 349.753 431.953 349.753 430.435 cv
349.753 401.915 li
349.753 400.397 350.996 399.155 352.513 399.155 cv
376.345 399.155 li
cp
.992157 .721569 .0745098 rgb
f
352.513 399.655 mo
351.267 399.655 350.253 400.669 350.253 401.915 cv
350.253 430.435 li
350.253 431.68 351.267 432.693 352.513 432.693 cv
376.345 432.693 li
378.234 432.693 378.604 432.221 378.604 431.403 cv
378.604 401.915 li
378.604 400.669 377.591 399.655 376.345 399.655 cv
352.513 399.655 li
cp
376.345 433.693 mo
352.513 433.693 li
350.715 433.693 349.253 432.232 349.253 430.435 cv
349.253 401.915 li
349.253 400.117 350.715 398.655 352.513 398.655 cv
376.345 398.655 li
378.143 398.655 379.604 400.117 379.604 401.915 cv
379.604 431.403 li
379.604 433.693 377.236 433.693 376.345 433.693 cv
cp
.223529 .235294 .254902 rgb
f
366.507 431.407 mo
366.507 431.976 366.047 432.437 365.478 432.437 cv
363.379 432.437 li
362.81 432.437 362.349 431.976 362.349 431.407 cv
362.349 431.407 li
362.349 430.839 362.81 430.378 363.379 430.378 cv
365.478 430.378 li
366.047 430.378 366.507 430.839 366.507 431.407 cv
366.507 431.407 li
cp
f
377.671 428.956 mo
377.671 429.329 377.356 429.646 376.983 429.646 cv
351.876 429.646 li
351.503 429.646 351.186 429.329 351.186 428.956 cv
351.186 401.427 li
351.186 401.052 351.503 400.737 351.876 400.737 cv
376.983 400.737 li
377.356 400.737 377.671 401.052 377.671 401.427 cv
377.671 428.956 li
cp
.333333 .839216 .823529 rgb
f
351.876 401.236 mo
351.778 401.236 351.686 401.329 351.686 401.427 cv
351.686 428.956 li
351.686 429.054 351.778 429.147 351.876 429.147 cv
376.982 429.147 li
377.08 429.147 377.172 429.054 377.172 428.956 cv
377.172 401.427 li
377.172 401.329 377.08 401.236 376.982 401.236 cv
351.876 401.236 li
cp
376.982 430.147 mo
351.876 430.147 li
351.231 430.147 350.686 429.602 350.686 428.956 cv
350.686 401.427 li
350.686 400.781 351.231 400.236 351.876 400.236 cv
376.982 400.236 li
377.627 400.236 378.172 400.781 378.172 401.427 cv
378.172 428.956 li
378.172 429.602 377.627 430.147 376.982 430.147 cv
cp
.223529 .235294 .254902 rgb
f
390.769 407.683 mo
390.769 409.606 li
390.769 411.198 393.426 412.491 396.704 412.491 cv
399.981 412.491 402.637 411.198 402.637 409.606 cv
402.637 407.683 li
390.769 407.683 li
cp
1 .419608 .407843 rgb
f
391.27 408.183 mo
391.27 409.607 li
391.27 410.734 393.501 411.99 396.704 411.99 cv
399.905 411.99 402.137 410.734 402.137 409.607 cv
402.137 408.183 li
391.27 408.183 li
cp
396.704 412.99 mo
393.096 412.99 390.27 411.504 390.27 409.607 cv
390.27 407.183 li
403.137 407.183 li
403.137 409.607 li
403.137 411.504 400.311 412.99 396.704 412.99 cv
cp
.223529 .235294 .254902 rgb
f
390.769 405.353 mo
390.769 407.276 li
390.769 408.868 393.426 410.161 396.704 410.161 cv
399.981 410.161 402.637 408.868 402.637 407.276 cv
402.637 405.353 li
390.769 405.353 li
cp
1 .419608 .407843 rgb
f
391.27 405.853 mo
391.27 407.276 li
391.27 408.404 393.501 409.66 396.704 409.66 cv
399.905 409.66 402.137 408.404 402.137 407.276 cv
402.137 405.853 li
391.27 405.853 li
cp
396.704 410.66 mo
393.096 410.66 390.27 409.174 390.27 407.276 cv
390.27 404.853 li
403.137 404.853 li
403.137 407.276 li
403.137 409.174 400.311 410.66 396.704 410.66 cv
cp
.223529 .235294 .254902 rgb
f
390.769 403.023 mo
390.769 404.947 li
390.769 406.539 393.426 407.831 396.704 407.831 cv
399.981 407.831 402.637 406.539 402.637 404.947 cv
402.637 403.023 li
390.769 403.023 li
cp
1 .419608 .407843 rgb
f
391.27 403.522 mo
391.27 404.946 li
391.27 406.074 393.501 407.331 396.704 407.331 cv
399.905 407.331 402.137 406.074 402.137 404.946 cv
402.137 403.522 li
391.27 403.522 li
cp
396.704 408.331 mo
393.096 408.331 390.27 406.845 390.27 404.946 cv
390.27 402.522 li
403.137 402.522 li
403.137 404.946 li
403.137 406.845 400.311 408.331 396.704 408.331 cv
cp
.223529 .235294 .254902 rgb
f
390.769 400.693 mo
390.769 402.617 li
390.769 404.209 393.426 405.501 396.704 405.501 cv
399.981 405.501 402.637 404.209 402.637 402.617 cv
402.637 400.693 li
390.769 400.693 li
cp
1 .419608 .407843 rgb
f
391.27 401.193 mo
391.27 402.617 li
391.27 403.745 393.501 405.001 396.704 405.001 cv
399.905 405.001 402.137 403.745 402.137 402.617 cv
402.137 401.193 li
391.27 401.193 li
cp
396.704 406.001 mo
393.096 406.001 390.27 404.515 390.27 402.617 cv
390.27 400.193 li
403.137 400.193 li
403.137 402.617 li
403.137 404.515 400.311 406.001 396.704 406.001 cv
cp
.223529 .235294 .254902 rgb
f
390.769 397.883 mo
390.769 400.287 li
390.769 401.879 393.426 403.171 396.704 403.171 cv
399.981 403.171 402.637 401.879 402.637 400.287 cv
402.637 397.883 li
390.769 397.883 li
cp
1 .419608 .407843 rgb
f
391.27 398.383 mo
391.27 400.287 li
391.27 401.415 393.501 402.671 396.704 402.671 cv
399.905 402.671 402.137 401.415 402.137 400.287 cv
402.137 398.383 li
391.27 398.383 li
cp
396.704 403.671 mo
393.096 403.671 390.27 402.185 390.27 400.287 cv
390.27 397.383 li
403.137 397.383 li
403.137 400.287 li
403.137 402.185 400.311 403.671 396.704 403.671 cv
cp
.223529 .235294 .254902 rgb
f
402.637 397.883 mo
402.637 399.476 399.981 400.767 396.704 400.767 cv
393.426 400.767 390.769 399.476 390.769 397.883 cv
390.769 396.29 393.426 394.998 396.704 394.998 cv
399.981 394.998 402.637 396.29 402.637 397.883 cv
cp
1 .419608 .407843 rgb
f
396.704 395.498 mo
393.501 395.498 391.27 396.755 391.27 397.883 cv
391.27 399.011 393.501 400.268 396.704 400.268 cv
399.905 400.268 402.137 399.011 402.137 397.883 cv
402.137 396.755 399.905 395.498 396.704 395.498 cv
cp
396.704 401.268 mo
393.096 401.268 390.27 399.781 390.27 397.883 cv
390.27 395.984 393.096 394.498 396.704 394.498 cv
400.311 394.498 403.137 395.984 403.137 397.883 cv
403.137 399.781 400.311 401.268 396.704 401.268 cv
cp
.223529 .235294 .254902 rgb
f
57.0356 429.015 mo
55.9644 429.015 li
55.9644 406.626 li
57.0356 406.626 li
57.0356 429.015 li
cp
f
84.7686 429.55 mo
28.2314 429.55 li
28.2314 428.479 li
84.7686 428.479 li
84.7686 429.55 li
cp
f
58.6859 429.014 mo
58.6859 427.807 57.7073 426.828 56.5 426.828 cv
55.2928 426.828 54.3141 427.807 54.3141 429.014 cv
54.3141 430.221 55.2928 431.2 56.5 431.2 cv
57.7073 431.2 58.6859 430.221 58.6859 429.014 cv
cp
f
72.5564 416.043 mo
40.3852 416.043 li
40.3852 356.171 li
72.5564 356.171 li
72.5564 416.043 li
cp
.333333 .839216 .823529 rgb
f
40.9208 415.508 mo
72.0206 415.508 li
72.0206 356.706 li
40.9208 356.706 li
40.9208 415.508 li
cp
73.0918 416.579 mo
39.8496 416.579 li
39.8496 355.635 li
73.0918 355.635 li
73.0918 416.579 li
cp
.223529 .235294 .254902 rgb
f
53.2763 362.18 mo
49.6937 362.18 li
49.6937 358.598 li
53.2763 358.598 li
53.2763 362.18 li
cp
1 1 .933333 rgb
f
57.4397 362.18 mo
53.8572 362.18 li
53.8572 358.598 li
57.4397 358.598 li
57.4397 362.18 li
cp
f
61.6031 362.18 mo
58.0206 362.18 li
58.0206 358.598 li
61.6031 358.598 li
61.6031 362.18 li
cp
f
65.7665 362.18 mo
62.184 362.18 li
62.184 358.598 li
65.7665 358.598 li
65.7665 362.18 li
cp
f
69.9299 362.18 mo
66.3474 362.18 li
66.3474 358.598 li
69.9299 358.598 li
69.9299 362.18 li
cp
f
53.2763 366.371 mo
49.6937 366.371 li
49.6937 362.789 li
53.2763 362.789 li
53.2763 366.371 li
cp
f
57.4397 366.371 mo
53.8572 366.371 li
53.8572 362.789 li
57.4397 362.789 li
57.4397 366.371 li
cp
f
61.6031 366.371 mo
58.0206 366.371 li
58.0206 362.789 li
61.6031 362.789 li
61.6031 366.371 li
cp
f
65.7665 366.371 mo
62.184 366.371 li
62.184 362.789 li
65.7665 362.789 li
65.7665 366.371 li
cp
f
69.9299 366.371 mo
66.3474 366.371 li
66.3474 362.789 li
69.9299 362.789 li
69.9299 366.371 li
cp
f
47.0113 364.58 mo
47.0113 365.496 46.2687 366.239 45.3526 366.239 cv
44.4365 366.239 43.6938 365.496 43.6938 364.58 cv
43.6938 363.664 44.4365 362.921 45.3526 362.921 cv
46.2687 362.921 47.0113 363.664 47.0113 364.58 cv
cp
.992157 .721569 .0745098 rgb
f
47.0113 360.085 mo
47.0113 361.001 46.2687 361.744 45.3526 361.744 cv
44.4365 361.744 43.6938 361.001 43.6938 360.085 cv
43.6938 359.169 44.4365 358.426 45.3526 358.426 cv
46.2687 358.426 47.0113 359.169 47.0113 360.085 cv
cp
1 .419608 .407843 rgb
f
53.2763 373.986 mo
49.6937 373.986 li
49.6937 370.403 li
53.2763 370.403 li
53.2763 373.986 li
cp
1 1 .933333 rgb
f
57.4397 373.986 mo
53.8572 373.986 li
53.8572 370.403 li
57.4397 370.403 li
57.4397 373.986 li
cp
f
61.6031 373.986 mo
58.0206 373.986 li
58.0206 370.403 li
61.6031 370.403 li
61.6031 373.986 li
cp
f
65.7665 373.986 mo
62.184 373.986 li
62.184 370.403 li
65.7665 370.403 li
65.7665 373.986 li
cp
f
69.9299 373.986 mo
66.3474 373.986 li
66.3474 370.403 li
69.9299 370.403 li
69.9299 373.986 li
cp
f
53.2763 378.177 mo
49.6937 378.177 li
49.6937 374.594 li
53.2763 374.594 li
53.2763 378.177 li
cp
f
57.4397 378.177 mo
53.8572 378.177 li
53.8572 374.594 li
57.4397 374.594 li
57.4397 378.177 li
cp
f
61.6031 378.177 mo
58.0206 378.177 li
58.0206 374.594 li
61.6031 374.594 li
61.6031 378.177 li
cp
f
65.7665 378.177 mo
62.184 378.177 li
62.184 374.594 li
65.7665 374.594 li
65.7665 378.177 li
cp
f
69.9299 378.177 mo
66.3474 378.177 li
66.3474 374.594 li
69.9299 374.594 li
69.9299 378.177 li
cp
f
47.0113 376.385 mo
47.0113 377.301 46.2687 378.044 45.3526 378.044 cv
44.4365 378.044 43.6938 377.301 43.6938 376.385 cv
43.6938 375.469 44.4365 374.727 45.3526 374.727 cv
46.2687 374.727 47.0113 375.469 47.0113 376.385 cv
cp
.992157 .721569 .0745098 rgb
f
47.0113 371.89 mo
47.0113 372.806 46.2687 373.549 45.3526 373.549 cv
44.4365 373.549 43.6938 372.806 43.6938 371.89 cv
43.6938 370.974 44.4365 370.231 45.3526 370.231 cv
46.2687 370.231 47.0113 370.974 47.0113 371.89 cv
cp
1 .419608 .407843 rgb
f
53.2763 385.791 mo
49.6937 385.791 li
49.6937 382.208 li
53.2763 382.208 li
53.2763 385.791 li
cp
1 1 .933333 rgb
f
57.4397 385.791 mo
53.8572 385.791 li
53.8572 382.208 li
57.4397 382.208 li
57.4397 385.791 li
cp
f
61.6031 385.791 mo
58.0206 385.791 li
58.0206 382.208 li
61.6031 382.208 li
61.6031 385.791 li
cp
f
65.7665 385.791 mo
62.184 385.791 li
62.184 382.208 li
65.7665 382.208 li
65.7665 385.791 li
cp
f
69.9299 385.791 mo
66.3474 385.791 li
66.3474 382.208 li
69.9299 382.208 li
69.9299 385.791 li
cp
f
53.2763 389.982 mo
49.6937 389.982 li
49.6937 386.399 li
53.2763 386.399 li
53.2763 389.982 li
cp
f
57.4397 389.982 mo
53.8572 389.982 li
53.8572 386.399 li
57.4397 386.399 li
57.4397 389.982 li
cp
f
61.6031 389.982 mo
58.0206 389.982 li
58.0206 386.399 li
61.6031 386.399 li
61.6031 389.982 li
cp
f
65.7665 389.982 mo
62.184 389.982 li
62.184 386.399 li
65.7665 386.399 li
65.7665 389.982 li
cp
f
69.9299 389.982 mo
66.3474 389.982 li
66.3474 386.399 li
69.9299 386.399 li
69.9299 389.982 li
cp
f
47.0113 388.191 mo
47.0113 389.107 46.2687 389.849 45.3526 389.849 cv
44.4365 389.849 43.6938 389.107 43.6938 388.191 cv
43.6938 387.275 44.4365 386.532 45.3526 386.532 cv
46.2687 386.532 47.0113 387.275 47.0113 388.191 cv
cp
.992157 .721569 .0745098 rgb
f
47.0113 383.695 mo
47.0113 384.612 46.2687 385.354 45.3526 385.354 cv
44.4365 385.354 43.6938 384.612 43.6938 383.695 cv
43.6938 382.779 44.4365 382.037 45.3526 382.037 cv
46.2687 382.037 47.0113 382.779 47.0113 383.695 cv
cp
1 .419608 .407843 rgb
f
53.2763 397.596 mo
49.6937 397.596 li
49.6937 394.014 li
53.2763 394.014 li
53.2763 397.596 li
cp
1 1 .933333 rgb
f
57.4397 397.596 mo
53.8572 397.596 li
53.8572 394.014 li
57.4397 394.014 li
57.4397 397.596 li
cp
f
61.6031 397.596 mo
58.0206 397.596 li
58.0206 394.014 li
61.6031 394.014 li
61.6031 397.596 li
cp
f
65.7665 397.596 mo
62.184 397.596 li
62.184 394.014 li
65.7665 394.014 li
65.7665 397.596 li
cp
f
69.9299 397.596 mo
66.3474 397.596 li
66.3474 394.014 li
69.9299 394.014 li
69.9299 397.596 li
cp
f
53.2763 401.787 mo
49.6937 401.787 li
49.6937 398.205 li
53.2763 398.205 li
53.2763 401.787 li
cp
f
57.4397 401.787 mo
53.8572 401.787 li
53.8572 398.205 li
57.4397 398.205 li
57.4397 401.787 li
cp
f
61.6031 401.787 mo
58.0206 401.787 li
58.0206 398.205 li
61.6031 398.205 li
61.6031 401.787 li
cp
f
65.7665 401.787 mo
62.184 401.787 li
62.184 398.205 li
65.7665 398.205 li
65.7665 401.787 li
cp
f
69.9299 401.787 mo
66.3474 401.787 li
66.3474 398.205 li
69.9299 398.205 li
69.9299 401.787 li
cp
f
47.0113 399.996 mo
47.0113 400.912 46.2687 401.655 45.3526 401.655 cv
44.4365 401.655 43.6938 400.912 43.6938 399.996 cv
43.6938 399.08 44.4365 398.337 45.3526 398.337 cv
46.2687 398.337 47.0113 399.08 47.0113 399.996 cv
cp
.992157 .721569 .0745098 rgb
f
47.0113 395.501 mo
47.0113 396.417 46.2687 397.159 45.3526 397.159 cv
44.4365 397.159 43.6938 396.417 43.6938 395.501 cv
43.6938 394.585 44.4365 393.842 45.3526 393.842 cv
46.2687 393.842 47.0113 394.585 47.0113 395.501 cv
cp
1 .419608 .407843 rgb
f
72.2398 368.58 mo
40.7021 368.58 li
40.4061 368.58 40.1665 368.34 40.1665 368.044 cv
40.1665 367.748 40.4061 367.508 40.7021 367.508 cv
72.2398 367.508 li
72.5358 367.508 72.7754 367.748 72.7754 368.044 cv
72.7754 368.34 72.5358 368.58 72.2398 368.58 cv
cp
.223529 .235294 .254902 rgb
f
72.2398 380.452 mo
40.7021 380.452 li
40.4061 380.452 40.1665 380.212 40.1665 379.916 cv
40.1665 379.62 40.4061 379.381 40.7021 379.381 cv
72.2398 379.381 li
72.5358 379.381 72.7754 379.62 72.7754 379.916 cv
72.7754 380.212 72.5358 380.452 72.2398 380.452 cv
cp
f
72.2398 392.324 mo
40.7021 392.324 li
40.4061 392.324 40.1665 392.085 40.1665 391.789 cv
40.1665 391.493 40.4061 391.253 40.7021 391.253 cv
72.2398 391.253 li
72.5358 391.253 72.7754 391.493 72.7754 391.789 cv
72.7754 392.085 72.5358 392.324 72.2398 392.324 cv
cp
f
72.2398 404.197 mo
40.7021 404.197 li
40.4061 404.197 40.1665 403.957 40.1665 403.661 cv
40.1665 403.365 40.4061 403.125 40.7021 403.125 cv
72.2398 403.125 li
72.5358 403.125 72.7754 403.365 72.7754 403.661 cv
72.7754 403.957 72.5358 404.197 72.2398 404.197 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.0.0
%%For: (IvAN) ()
%%Title: (1410.i039.023.S.m004.c11.data icons flat line.eps)
%%CreationDate: 10/29/2014 3:38 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",Kl!"hSo'lPP50s0Lijb[Im*g:`.Y3,E;%R[g`K14YKESX*N;(6YDh"h5>,Tgmc&>93jEbs[.qbh[VtRIhmFuEI6+bui+0Thd
%=t2Lc76b_upt,?1Ir=.mg>$Q;/hBlfe-9QFG(6FEWAT"8ohMR:m4B((^K90D(Y*$jV-8-$BXKmN(=l[>g*tN#D$:06buS>\dljc*
%$XqHA5js5)IbfW[ci?7NG]^04#,&Y!^CNk#gUuG"-Yp(^6k'+>IGAZZ2gbL@[GU>X5Ma5OV6*QN^"56IMBALrV#l96F7<\5gc2;D
%>(+e2_3BPlrk/@k0jiQs7nA]m$DA]as#BS1G[mu_W'?1Ks)3c(5N/qQn-ZnnB4n-$ICQ":Lm3Xd?!2^fFb#Q6N[.MA^N"GRWqIBZ
%Wa%J2#),M9+8V]=_]8/tMa:V?rPE%-Z!nOd!f+Or(uJk,1X1nDRZ0Ou$;VVkHD<!'ZdeC22?*of-<W]fG6b6>pN=+$#I9%'QACBB
%dA]'.0MGDnZW6*c91I&'PpQ.)h;^sHGd5^9i&iP*@RpCjEc>'YIW$@\1"j\BH)&(1H,C5"FC?.T*-m5\.Ro?t.>qUO_JDY4<+$1X
%.ISsJ$]M(!q<Z6FYW6MnFVE_5m/Tq"GFQXtp<mCYZQ-PMZKm]lZYm8f.)Hu"05nK?PJ;tN.kq8io_XWV)@CNremB!6GD\'IYk*it
%ID']V'@OeM2;n9gLdS4a/:TN1r&8:uE%XYu!=(8>:ncR^LB%.CQf>LL@&Gl4+.mX:KCc5=;<P^oR4HfLLQ00?7]kS4_A(T0gP9.p
%j^)AU94_PH>HL11n?0qKX3L6_@iC#?FrLVT/(E[alG%W0K?/Z<0F\<O7f/69X)h#S(?P+o\C7IdX5*jW5rVn[rW0c5JPN(6/D01$
%bLIrDb;kZ<\&-=ag:s9\q'fBHec#kgfLEL0e#eO0K/nr]_"+kBp\jH_dq\U%FF+_-;sj:J[8pf+H`u>J7ptEEDL8uI;!ea=-\_Lo
%Ve(Z-$HSj`e9:_`%YnPRam2[Qb3B:^S>KWDX0#Fo\6D*\C"BRNb4o9:8:S6NVgC9b*Ei?o5O#<rGQN4hS@)44JjLG#p_T7Lqm5"[
%SQ)&5@g!P0p8HXK6X87_2#@_<8"Hu-o\'Y!-e7em(KXUWcSQLZJ>Jp)?u^1fNF7eAEUV-cnDX6-!^+iUKdCtjpS.3kloT\L2f!*0
%X535SITeAJrH6\+_iK^@R;VV8cu4FY>C_=%DRZ&e;`e^%lJ4q!QZ*<C[Qm.E+7Z!&G8rO=36*$%p:\=q4_V3NC_urCg)A%1-]R9Y
%8Uj.=G4eNC!t8/FKo$krT?V]^,faS/\Z6WBStUPX0oYRb4bURj%,nCj)a]=,F<o!J5GBATmbG4r0fH*)<K4;kF\lhDT2Z?Rpu+*r
%3C\^V(@klrBf`L`kT3',eugmMdmDP&9+B_PPmk_S5E>HqCqJ9%rmAg)Z*a"#N<ptHr33blhOp.SE2eFjVC7?t0Rc!:eQualg\<Z,
%k00Ur;rt2tE:(qW^BlOIp]:)53D@-IiBsYf:1Z4r"RMipN7[iarGbG^+F`iC9X$K6gS7`)V>@IH<Uh!I-0'a-3H'#?&6S!1M^`sP
%"5<&L]!]Nk&N/^=U0KKrjmp8uYTAkJEeqn7_Ld,@it6N4DB'CWB;+)`%VHR":!sSbU"goIErIVS46fii:hdW01jdh#R*.4bZXE4$
%K=Mt)PZ]OrMreQUganb\`H&:eDE.F]Y?*9ACH,6*b:U<W+I^J4L^B.*+OXD.r6]3FSQ+pG5A*Vji)I,hUNGEN3mp#tSR0';DZ%oC
%4&U.1RC)b>q>i]N^HPu>PNngmCKB2*UNpgarT5*T<mRNQlW:"to8FiRBrYO6D<`)]oc!c:fOu1'=[((m/[E+8Ve@QV]S3LBmcLS?
%P7`;9N/h*n1\8;F-T<Hs>nr^ffL+")FH<H0`a5d9Da7@nWu;fBp"gaK@^qgi\@Tc,ah_sNH%T/*]CFKuVql%LR@W:d=#Rklj'1uZ
%Hi<6+`b2;FBu%!p*;JE6#`!I1j*s(Dn\6Ro7Z_C"q8<'0oJ(MMc$$jb0>k3eo?c-RU0<\._c/Z[QOGi$IV%I6q#f5dXX!QS9hW]O
%\Q+Y]df;E+R+"0,Il\$:56Vt,ea2mkZe%a%jmYB-8*-X"(@rp-h*:T'N5;"MGo/D6CCKRp`_c%\q^6$9I\(-AWA9C</HGg@nrmZi
%09`W3Q3huekT2[EP#LW4jL;;DF$>%&(:.:1ZX#b__dV/2QVXcpRImjuOCJ\4^<,PFF(f'sdqPq,)iamZ=H:&^qj;D7.AnLDcBE7]
%`,o>-)!Xi.2t'q)@R"9;f%!m[@ZG4F]%)+JO@Lb"Jlh@4G.QiaGZS5^6T]j-aE9PnPikTZ9T;cFI@2OfRI[rUS1J!%]qgED')L(P
%Jq*7rLP`D`;j*?6ia&e?n6gX(]rt@Y0`Ebe=e$9#jlA/eZX`MA*fHXm/t@=$PK.oCM;aln$OUqEe)YH+3?5F=A/^_ST#(?jAGg2.
%!cfhRXe/SIm7(lpdGgd`aKl42<9:."\!pl!lLNsSY&[P&b99Ei]SE]_WN3),2W\Q>]N)'kn:N2DWom;pEmC]3>`PYuWJGX+F(Am[
%a70#bC[*7uH;;'10qZ]?$p?B3EVs5?A"EZj'tdur-U,1cOcl)JrH=PQq_9rX+jZS"BtX-acQl6!Wlq0@IrHAjC!q0hF.:HPZdm4-
%"0$Ec':M:QaH1N,0DPUfN\+91WWq-k[N!a:gU"`TY2T*kF,\<W]eY4'b.uGQC?%:?1s0i?23_kAcg(6E_ZA69YBFt*0i@MAL=C)0
%W%!Kmea#s-OC92EdRC?S<:*FBc]DnL_:daubnem'8E$Tf<Y!=.n)Oc`3tq!>*HaGVGmk<=G%G`W6P%]<gbC-J?"mhHD)]d]8\r9i
%_Vc>;bdJ?qK:OEula.<OcX8(aP.<aaK!V!rPE_]aF",\iD+1F0YH94Zcg=Hi?BdQg3:W:^Qhd-adkg*4;0)3UjR5O:?)P@aGm<lD
%PO[=4Pb0YDlb4/]8)QMaMt3nrj]_%?WElF8.!Z"Qq1e'9mR:Qj]dV@(heKL2.$MC^--mi2^8ees]dV@68i)HRC2u&iPg&62?_3U"
%S(_[*VXJ8Tl'[@"MT&S)E38O]/8ZDlq2Hj/5<*(1NV;[AhC\=4D_%F/ZWYoXQC4.I]8U&(B6nElf;:g:jl"UU?CU2eXb2Tc5\BH<
%J*%Y?Lm_;5BWX2aen/+Q&mB/7XNe-+'POnBY;XjE\[38\&N]^'3tnJg\`FsM5@'/;WWg2+(gUI,U6uk[+Mga1An#<@beN9b4?Lg&
%)QfQ2p%uRJ38k]6KcnD?3C3T!>^PO&fdYI$h8WT1jCJ_JG'OHGY[uE8YQ4ZF$Li6WT&IH-n3c0tClQ)r;kdc(FS]pSl(-iT2<0HN
%]:ih[6d=tPRXa3(29g<XER\fcrku+]KBJ5/^RXVM'N4YIN*%,YE?/tFR5EOZ0\7\RVe5Ds08O]tGa]sC3r*LI?_".g_kcOI9/!bJ
%rn7(lfm0J#L3%^'j+Hi"UYSC3`3_/hj]$"oU'T<bf1i(WaH?E^bp3"]="*g0ZnG@Sa0*m&E]Gn>Vk_iB/7.qO0SIP&L/H]nX>+s`
%4V+=-BoR[Lh&*0JB)gqndEgja9U0V1S.kLt1Qp4s&919i4tUh:46a4.>Q:8np##(ScerX<2hNO1CAjLF0WkDfc>q4`Suqf`baS"e
%X!G#/hq=Ie%iEi5c$-VY4'V=T>8&_qo:<#Z:2E[S3\haT^ZM$G_QVghHN\f8?JaFgXl<F$D>!&=d3-bJ7A`PfjW;gfCP!YCg,l8A
%5D!P=8rcpJW^cZpd;!h'*'^f2oD#*l"VtluB5N[VV(57/Zq4,!n$F6KCZeP)6T&o<V+EHJf.'-7=F'_PgM!s\60U4l+f]8uGF&8B
%G$9n)EjnnQmW>MsOfJZ7Qo`D:Qa?VC/:TS$T3YVZcLPVSr7M56ci1%Radk8$.Eo'XenDm(c?'^KHY'i)k87.jJ'G;cJ(-sm/PVm1
%??)F2guN?u"b!-rh4%:XEC*)TBiE.Im(2><HKU8+R'#fL3\55UZ7U@3:/9`e?g$@tj9j[tX'F<XF(em6m3OM$_c<kbIialBr5!*D
%=lSP#'/),c+qcOa$cDQhZc($<nM3bMbRuS8`60_%1/#:(&hj:'e6[c]n6#g,Q9`#,,'u)8S*CF1FZZ1C4VL?;mZr]&:"-K95b.8c
%-Lr-=TCg;Rno)aAHqi1,p33O]Obq%k<+FP=Neol.R.NHeo%]E`]49hm4gL^NV3RHgr0\0Rl,N7V51e:$aOr.=P@YnM[kQ&XjFhct
%s#T1"NU,tud,WS1T<m:=(B-D-I;);l?eRT@eiSB\kYLY@ULq)LVt+n6VDXX:nn6"r-S]/WnY+&#-lm')ci8-1S<[^q3PMrE$XM:"
%3_)]R7N^<^gSj9LP,V;mfB]m9D*Cu"`YdY&0^5sglK*VK8Xl,`RZ<t.B\+n(A"Iag4GTLbo'IFF"g?(W0gF!'rbU/,D;UN<Y%fYK
%/BBQ54MK;[\l/>.OiOH76D*u/QH/d:=%H,^GBM1$(u[$,0g1QJeE8RGCQQTX1PT$RA!Y0&jY:@mN*.4^qG,0aO"h)hN.4WVf!"5i
%STN]JZ_MEGeuuMgG+*^%/r4g`l(OT=fIKqTK<oD3pE-s6Pb<`6C/D;X\V-r%3LsW>CO?Vm]uFZnnSQWdfCB%MWUa+J[WZ;ehsAra
%j[H:>!LDJY[W4*r<I0h=E8o2Jf</Mjhk[7MCN\$$*_eB$E[P@-=+B>Wm%0[!4Z0QmC4;>0Q/be6rD"DX^,+`Ni_d1+QH)Vf@TPFM
%J*XL.5:c915Nj-u>%$p!3@T3$DEk[TpOqUbFf$EaHauLMZUF&&mU4?5g@1AC3)d-A/'h$=I(NIO+j;ik9u^(_EC::+SLsjX/L^83
%\Rj6uS<.4_bLEX@i$;U/o`Sp9T^Y_n'X#kKS],V:(17p$rGm<FMrnX!gann`7<>eKDKlHe`b6u[:O1ck\SJ]</B>^:ZZto<j1-.n
%1^iJYiS5uSRtYpiE,HH:V;n3+HA-FNL,1.7g`j?7!F<E*bX/n_#jL2h3q_NN23/Wfmd]'i]8e%)QnXfW1#tH\4m==GY3EdSWP;MD
%G!G-U?AW#G\8.bVAf"uOLtXn)JKlO+XM/f/Wn'q3$Neg<YL]0@mn:4^L;!T\<h:kM/9b*!Qh1+E;kjhCNornoi'0kn2NdO,;MtJ1
%4Y[VBjLj'P[)_VK>lX=<1s8Dh9&2BO0#D^[0/(AGI;dIqWn&)8[;%m$^aae59U>PXZW!XLnp`E=dP]a>%hYsVTcl(1jcpgdoMpn9
%c]_VS]3Ded!sKGndcPXjkmA(dCJrU347-@h3qDTZ<a$bS,H"8)1i'lSkrRU''BZgTWmQF-S;D,]p<"6(b@.HPs(e28E\2+mP#q!6
%Q()#h.f!,3(Od\T>_Xb,:X-P_$1d42ogRr@n`[-6+-].EWX7JUlb(\ajKbc&<@6@0:rlt[B,IfB06$`aeg['`6o1J!hrb[?8KB\=
%:=44=TR8nnTkg"W^=5!aP23n6Us/Uj36`]IVcP;Fq:!-CYK9tmr_Bj]dT`;423s$:7W#cA=NmE(0oW]U`u9Rhd4sD?W%up@f[YtT
%g26OZc5O7-]J*?_nXAlfSSmJT7q*h$3*t%rRMj2g1bOu0+S1E3U`7B;o.Vt^'/0+[3nlWR)<BJk"t.sc\UK,gD;Q5$1lf)#GPGFd
%:V;\#2.[\sj4V\Y4GoWB:VC&W0>^N\`C+?=BJ.=_%9&t<T0Vf#"ad\T;;5AGKhq\#W.H8oA3FYJplY-f4GloL]^j.He`jfX8Cf+l
%9jH.7E7acgO)&HDVuD^8`TqJ7`aTG@HfAtcfY5WYH`q&hD2L!7pcI7h"m^&nXi<Zo?a#rNYMC839124tU(!oG'*/i<*9RU*7WMV&
%&*lue5CGOl2_@oaoaWiSbIaN=GI,u9:+;ec<7mBm_u8k/*\pDXG1%u'=CU7lIZl_&AX0u=D6c08f64&iNEdhX.n0]?E8B46ac+KI
%Ra'LX=(Z5L\iGG!3-_6G^KYRLNq.Qh@01`Rd[Sme,3pCAFj7SECR=e*>]_YO6/-LZ55:GQ;QKJ3jCT;TSBL2]C#RNTgLBuB0Y$16
%OD^DnQufLZY3V,lEEIaaK9r/&%^a)k$X&_`[Dm3m9n3!-IpS`Hm5g+!Xjlb,iDnDk@$KjAcC\tQL>4QY&J2'r]R>Ad]`e6n1[R'G
%c<C``a=1rc5AGNMrcqR6a=dBh%$N)]+\F2<;;d<:0+O]V*[36DJcm-^(V'Q5R*1)C6eoIQ$L^U>N7p#WmQ8-GK;YmQqm4)._Mc:O
%:JRV_?heUWk72g@"+kpt1=DL%3^Eh0ToQ&(::8X9pD[R\4,5ea-u`G2#EshG`uc;QKi#OO3%X\JVK3i'Tmj3&j`sOm*=h)bs,`iG
%&-)US:(@3*)/ODeQ^bPn1hob:n;p)$^W@q?V>SBImq7EH(,kjc./0U3UO&"mQTMUk)7[9>C*363p;$h75]4G?9,HJLE!d,!)q@tt
%DQVH&e16NRrYmG0:n4KSN67o\+r&UCnQ.U>K6eE3]l"osBROb?bh["-%fWDMHconn%i!#*`eJLPS"BR>oqXWb[dg\)j0tpP=Wls8
%U]6M+,R:knnK5lkIt+\>#X7hg[+2.H2TFV=`%b+XIj@tjF$a,Fi,9^uS*ME`/ojNQT%UgJa[`1()t`utZ_+03-=W4+;gh;gj<#\6
%]bICE<#/d)<RF<($O_h=5H"Jf\_.q:YNK!IF1juPGP((ZS+fJcP?t:m]09ub&%&)oEl@df=NcgLhlNB/Z/th0/]Y\T_"R%`[[:]@
%@lN%\"MR[QON*>om&k!Kqh0n5'[9gZF4#4B4+2(>0J_JP2NPoAlo6c<PpXM#i/1C-.J_SD-c:K8]/C7GS2L/n3d=[i!1Dmi,BL1D
%P:*ncNg/\!_"HMci_\?$$Is%oYZ'r?$iG>1Jm15&2Dh^L$[6a'(C#F,N%W6[LLpg%RjDY!aDr_,`WCQn8j0A$nVf+0UffACRf=U)
%8dKQRMm7jX9;1&)[&X'/o\&0M^Cn2ddd\;Ip/F7p(6t/J+@&KVj+U)CSlb7NFPg`]hJ$08oZfPsFLc.e8_gMt<hVA6G7(t4?GFl.
%4/C=`"QGt<+%X`rS.Cr\$Kot27Mgl%2JAMLQT6D_'(\inLkT1%l,"qG[pEqO;=3b=i@o%,45EB0dJ]h;fPg]<05T.-rT[gtea+f]
%a!X8O)A1UCoZpseMF;hoL"usWmXU7X"]hH9NS_de.WZ\=2!W?%)>WA-&Nu/Tc=]IW0fUh&!`f,W2NX::U0f%"+6I?*$s0N0gW+s3
%EMKbe3N"Z'ZD"noUsX:_rUYL$SGjA(+.oo$LXjsnj*]5=RB[45['m[$CUB[6qg]r"gurX@Hi3&CgSE"n3ji]17r4Hf-2'&#_lbeN
%Yf=q`22YM&fP,HtI^=LpO2_hEn,p%p)h7O?Jtl$#'TVfZJ3:3-m7*f$mrhI6I<EPomK;pSA0(J8:,"H=X$IJgZ;>95d:atp@<'[D
%dLA%2V6/!.X/2]j%?(A0%_n#G+eN^hL_T*8+C/jYRg$U)8k,^\brs\]2'\-\G3XshOV)#;pg#KbMgk^F+O%V\<IR.-63>bBc#\tq
%bX242MW,Jmf,IZM>`!^gO%/j`QO\u&")?=Hh0Pif_5W+n00=UZG@^t.J9a`OU9/GORqG^O[!uI'YQqT-o5;s5M9L(iEkQq&G^`s`
%"0/ecm2b"0%7ZS-9/frhb<"#<fY0cqc]eiI<cn8@hQc\7)5rm2Q]*C%"Y;*"ct]W&_M]B#GEg)SP+_$!.SPU>qlCXSUIn_.c[e=h
%F?tfUdffo[PaIaU7j-mc_Vt5U\I7st(NRt^aje=J<")6V:Z*FErUIOn5'];O&(BWp7ea<3#ZK;i*k/+;cRR$UjK;D'Kh=;E-1Xle
%!uH.)96Q>aX[\n6e_X`@Io\_I#ffuTG\6SIp9\4[[_uac;sUf!CA[4,>r3$BWq?r'<qJh7]CfX2gB='0QJ,1+#ZThUVu&\gPV\6f
%I6UbJ);N"h4t`Gf.AS`KbSaQBT0pu-N@jqGR$%)WkH3J4$T*bi<,;4\k'7pHbXJRY:.Lc+=s'8$mC&'mm@jWO+.o)>+asLUUctrK
%q:,-emc;?;7Jk>YSruDr;%Y:h6)K[Yd\*,X5G>Z1,c\7ik9<d`AId,X)HZ,B'O.nle/;>j9=?rr-^sBPaeAfh%BTgndP!8>BJCe)
%@h,QqhF5n2"pW4+AK8^T2R[FlKgoq,kiQfORbhk-L;hK=h:#[;m2Vr3g,TM$ErqBUrF3H/ZuFT<LdL:\UJC\Qm>C"OK>ZQ"?:V2D
%fL.)]7<mKs>/\n8jH*[[h,*SmHP`_p.+iDW=4,J<f,Ro%p6\/uL:pX<!532K$3ftCgl643,&1Pc7NWZ42N5M7/@3#h0pAQ/jo.:o
%G.["c2Ti<n:bq/%#9t-L*boX^6"tmA0U4No=:bo&QkIi7o-j%d?9@>XMc:FU^jq9^99oV#DQ>_)\,,"aIgSg?#3VL*q3T+.TT2Ss
%UtQ[GmW@dN?4I@_M]E8\[>R";'U#_ik,rOEGhHiDh773JCM2[53o5tcV"]&)X;/0%ejGaViM'OeUFaJ(GaHnbc'ehbK_i:5^;uT%
%/W%QUdm)7&IDhLPdG!:JdgO49"%?WN`_7U<[_bJYP-ApA`X4kLfE&%#VI$^"+7pK5:5rn$X:usVg#4j5P,_Y-.@tN&ph11FAJQFs
%3?B7QTT;E4ArXh6,-BF`@_L7Q3Q)!dMdc]<f*.Ynm58iJh(_@Ge#E'4iho8<:$QA^__#iK.%qO'o<p_-[8L\HH$Vq$0$'f80Q0o=
%D-`OT[$+@SWQ$Jgak!IK!Q82Ia(3T/9G[#U9G[0(gG0SS2_oGe(#(ZJL8MG))3O34n4)KHf$\gqX6b!j-^?%k]Wnee$#3o5ET@aL
%k+n=l4J#r(\IfMhKlW>M[[<p0m5-NMm[`KINRgk"Hdj`s9/H0K#+fq;FUYM_eTP5qlI5%F=p,DE.QF5%=4H5F#8aQF8CT<KRAcFL
%[nCB3k=YEm+b7_)P(bTMm%!ghXP;_@.\O!tI\Mc:75jbd@V!S,7qQj64Z1ulX^3+AfK`Y<V3SLCVZkij?EfXjM?W^RIl(Isd*r1V
%/u98OB&e"4H`sP-71[t<$IdG[qUS[ePQBN"5GW8QJ%U3mj8@'SLNf)cmhVL?GIA=><kD/Q:6ppp2kFmC=I?_4hQ.K>\&-`m2o;%W
%X08-XHJq(pWr.>?`G0TnM`*NL(\)A)q_oOn=8lAe?>sea/q5M1?X6eon#c;T]+:R(e`Fr5Xt'+G^NTPI<Fp<lDsXSb+$Q]iMoE<K
%6[_u"n"IXt]QniQqXC:frq^?Rs00"03pTak5aD>jr1icD@'f4WHFrmYFn[J0;a,5n*G2a'.nYhr2m5FE?J8a>^)>`W/[t@dFld`:
%e*9i7GW&o8\38K7HW!([DE,<f^Dq&#b"&)\7Vf-Vf"7cR[?LUd8b@R:'_udI>[s%;X"08"^(h(Xd_5>"a.GH_FQZkRX1i^dD))$9
%X0f?\ZRq8`=03"+S)injHu5Vo]UE%hnILpe9"2Jqo4ouq^<Ed`hgN2KhAG$to]FiOPN>uMHAYMCq2M/lM<LBg&#rL9H0`XOoCK<b
%>3knB]8PM@hZp"#hOSREJ:"??cV?Ud-<u#kBslHnh*%6WpgX%bFS>ULAe[Dl*I4K!D2ZZ2/hu0mXo,9p"t1;DD+&;*VnUYcIo(hj
%AhP4N/M8m2>1(W`(rQ6nmFCm3Q()\N(6S[DOd*==L,U2Cl^cAn.rX\pQe]KJT6Ru/g:(K]O2CcQEEYP\Do5Xn,h8ZtdsL&JAC*:.
%MShX6Hr5>h?+I:eA,\h3]*\"_cb(!!"M/R_J(sPibP\-[(&>6-G2p+]^V6rB7C;3kGIN*Th`::h*c3I<ji>CPAOCAXXt82>^AQ2f
%;e$7'D6F,C)^r,f9V_+!TYT\2mUE/McXFYL[IO>GGIc+Jm"Z\"YI2f-q<NG(keZk/)qF60>AN3VlW;3Rm<>a,gZrW:jeKNO\(,Dh
%QB%Z.2?3XSJKX03Yl8(kJBbi3oA>hA2p5Rc*iq<8L(BT2c>F_BXrlJ45f6*!U1h$m0ce8\hp.g[[O_*EDjKkBT*sp4=pkp-(?hA,
%?d1fa;uJ%toI,[!X3:D=hb*dlqLdbCV2.bmTdJf*pP*Et%jYh8*=p\:I&PpdG/(+@/j#Q;YBl]L<kbYOQ@VQo0?gVBP0`CgZAD4%
%=&"EWT>r=m!N-TkL6Ch)j[n^p)<6+N14R%9ATR;'H*QG3m!j!Ch>4c.0X3&>%X+&Uk1lO!Hg<'<mch`=V7:77($+;$LF\k-NB/i[
%.S/1E*>mSVHgA^")nfpqp3O1^I;n)@k@*Ofl]'HiDbi8,(ClY1Bh;&=ce"k[df,1$4=H[h8U7H/r\P!i?Bg\$nif)9iRr/jpPJoZ
%R!nfmS+h)0bF@VOK00+saVR'_A;1<KWZ>qoP_3X$>hjeGF\e,_IC$_9/O0#NIXga#^OEWBC;9"tp.sQ$Ji94HlNYWn(-4,)br^j2
%a3sD'a^(k=l-<Hl?TF7Ko3V7VmaDa:m@4HI\FJ_;;l.m8LZb<'^!5*fL[S'sIjlK9-Z;Y]DqB;Y\N?YDrK")UCMRpDCH#`>YT$N6
%o?:??4.SHODQZ*1F%"Q.fY(XgA-(FO<&\k.#9.^p^V)Lj-hSuFoNXUA"p>ll6NuI&o?1@O,LG>US&$!^Zp'fL^-#Vd^F#d1X"-ut
%MbrKX)pehT4)=3#i1RG9f_<Xo]J/V-J=N`bCJ/liPYj_pn:'Khp3JgS4Z]0ELS%q?]K8&iD'3VtZR>((<IB,R4F=pd3fV%Ra)#1%
%rNV)?1,Y^D;j;q)FUe$'3j6Y4_nCs)$@dIPWiI2l&[j#i/$1@?7_rPZf0/nJ^4A^RG[YtO6T5q"2(\FK1aKZK%dc/T2>WAUNFcE!
%dFmJ<klI,1-I<2DW>IFc(%",3Z&c,#hO<\`[umPN69<pQJ(<rRWGZg#?>18bn:<\[eE#^OJqB*Oj5j@2#^`);\snu7oH=UpZ^!8[
%Iq(631SMAlQ&o=LEBXq/.[qUmq7+X!DbYHS,QinRm*Rp65:lqNrhQ"t^"TZA2p`+p@ZQYaJV>V#>_ZT@l,A-;L*!5D6SVgu6&His
%c)@o:Fr"@^,-,GQ:_G?;;GNN(]8aih3pX@m_:kkpH!qqGaO"PAXJpVYR$X.0@[&W9Am(n=UXb0.<W7X!!kd@4PP\gdiDeunj=MlW
%bL2,mE*>^aa,FJ2Zn+f!ag'V1@s2d[5D^i)JT18OT+AA+Ge^Wck';;pokn7]id`8?g5i&Z#4$P>g&1F#rR0hfqaE>W34)e5!/n>%
%T.-D8^:j@=GeNqK@!/5fqX'<ID8aI#qE(Ii*U8R,^ZFDa7Vd1c_bi!-0A_%,I);GVHbUMpB>nB+c.+askE>M%_=!*LoB5#^k`F@*
%)Pu85H$a]&F8$6:gXbX-Zb)XgTuGGQVff5Lpgpdqrq4*GpHCp:qW<1#[]od>/R3628SH5s%Zeemq\r=jbJbL#B7n.L7XA^^a4hlN
%URhY-Y8@6eXj,.RE8-*cGiqH%`Qj)P]>'[D0m')(QOc:XPMd`WjMDq9Ii,iZLg60+W#9^i#:BRg.mj5_C*K%T<U;o7oC2VMWH=Wd
%4^6qfXs''ElIlC_4Pj*Nf@/X#ce$%Gd)3Q7[9'CNn#sF9rMe+KA^hVq#,u:7_R]\Dpq0_cqAN?CjY60hilNVt[@]p,>*]'7p?UnW
%p)p5a7h$f?@Lb]P7q$XLbJBCM<d=P)`s0nM#nMbfD/>Q2SDJ.6S@r+BoLB@^(A^hPIlg>eq.9T&h/6dl%'stU.[qf^^"2I2<'UB%
%C:fP9h::+9&fK!_herM.:Aloh!VaLrc1R:XD_(q/#7$+i4r%MA7FVBSV_@0U:t[l"[@f'Zh!fUVe9uSZr1J>l=fS+%*1X$A<[8]g
%D6@^Q?IZ)FS"Dq$^U^o&*h[bh\!+.#nCPOZ#9W!)<dD.IC1e9_a8<30'%OhqgSIt)pYK:KY'tWmeWXP3gi9(;_;UDQ3A7h4oX5^p
%<7a`);n`4pY+ZfZR@C85m`B6ol,DDt]SC(]na[J)!8!d:A:9@m^4!`hFNko/3GdYsmtN\1+$Z*Tjl_QuLOK2,Yuq^eg;_!EpU=d2
%2t,X.n3M31K`Ge[h?J&/]=E3+n&>ZoeQZ<>r7kV,qeH,Ud`MDn'<GX5Q*WR"eO-<rVi0YLh>:P)V[`7BNK$H&W0Utp[<uHML8?ue
%,k@JM3(`g;T(6>F-CCGC6aYK+>&X,'+\t<RIb](;D1#P`245[.5h^X/",sc'@h5)uk:L"NM8_D-,1sR&I]$P!rgqZZ>X!Q7Z<j]+
%,n#S6kC/&&rioC.IsP$1Vo?r@7n&Oo&D=M$%tg^uQTGXJWi%ohelp$u#*&&Y\M"$?Ld#1[N^%A#I(oOkcp,7LqJGWkS2Oe'Reo>T
%LUV.'0p4,q6,sq"%mDgec\CcSO$(@I-G4AX%TN)o`VH*BcUH5p`S5'BI,7%L!0:\/FjJIKNS;&:Hc_mQ?@aSR)[l[2p@$gB?$ZAE
%:3l0,q/J!2o<)2AFarSa[(AP`J]Eu/:Hh3_Vl\aO%ZE(q%j.%F5$%*H#I;O2J?E53b<eGM^N41/oAJc%pZ3VBfifo?[8;<1GAiMR
%4@T]tpYtuA.<%cIg[`ao]p"C]I5%_6]oDjbi=WJA3+(hRCS+\ch!4WVf+j\8iu;FAZFPl%*UFRYXl&R'E4.qo=cmQ7PKWR/0>8JJ
%/N*"2H3(b:6><e(rosB__-,lOH0Al9;s330(R9;f5C-I:hG+egDLB0Bb4BLD09;Hh)[i2I%+Jh'8peD:V^H-Uqff=#=06:nGj/fN
%Cs._MiSH[,h`Y+l\c1`2MF$=W8,("nE2gV>_G%.^,As8masdCGhr834I/P=#*f;)=cbo82k-q6=j]3Z]%^MVGcSod,O7p;0esjG1
%$@onim8Ei/<[WffptR"\D0KaXabuo!XL,[JnU,J)m@:cL'"=.:ea?m%5RkD1ME]QtQB.1^%lQU.qKGg_9tkf>mXm1^q0f5`Z@*gO
%B![HiUA4'C#(8c&nJ5Pu7h7s?MbB5^d`-_b8p7a0Gu-\NeO(Q5["cNnl-7KGd\l-Mp!r*YVmd_QX]"`J[$4jlFT:[lS,KJSk"<0[
%ciLh-o=*8H[uKFupq1sh;jeNZ5g4GEcPQ*!c:Qlt$NJFiA`ZML`S(0akfHc12r?eM^XogRJ_&W?@>b("nAs3CX)F$l#Ggl[iNkh\
%\6E<F?$c>>P^)Wcc[PZDAp[f9h.X@t<oP:jg)8O1CC9L<*h5&NIo59Epllsu[g2#mT6n9B_VsXsb.V#g?NWg4s0d*Zr?rLpRTI7T
%3BR2T*N3O-#>3=W%6iSHKC[E=(ZIaDk_t>W<q"M(-au$Q4C@L4r7iqIFh5O#^.lD'*oFlSTm*!l7uoeX7Ol,<O!2C4X`1s3DnZ&%
%FPPgHV#9<$m0<>+8LQ@'[5T1R]%uJm\ZP^4$p];4D=Oda=S[o,`*hH?LjGK1]0CKm%_Bi%_-)*T[C"304G_!!T<>=Z3kn7?;L(e%
%<.@.=l1>`TKTBI:)l6s4q(#D^/>F.jMPL#ne(r>,;SR'Lg)IGm%:(V&mq'l3DCO:dYmL$kI]([E*R0T-#,qPa*nA7M3*"8odYiA]
%D!V(k)nAAfidNmHUBEjFm@?Fso7"=4\;rRU!Gd+'2JV]m6$`.fq);;uTnAA3.(JN`qpcHhIT.r?r53.hSe2$T)>^_kMH4Zc84,"c
%L:AuNh&i<TfNhZC>3Y=WdTjbLVtZ^h<pTZV.aBE37SNX:`hB_ZQhpH^a\_n3C/l4_VK!7cH^rN%Vp[4OCk&K9#O6E(dC/BNn)hnb
%mC2Qu6om9<RiCnce$KANmHJMBLXXF:B6Wc/FT43T/lIF*n,i7V7ZgJ+G&r50Z2AcTIf&Oqd.$Yd7HGT(!-rs@$bG1GAp"R=khb4"
%Y-^+U;$T8?g>6KD6s9Mtrc07Z_@=`eUY^dE-q[I033%aTYO9*E#j16$k09_;l0G?IRg6&#+XkR=[2Q_?hC-?=H@9$h?eh/u[eOI*
%]fta62jWm%_5MSHdB4R>46,`Tf?fRo%9mrb9(Cm90sM9prI/ukI0r_Wa&tSE1qIBigppd@5\fL?B$NE(jnQiY4`JF82E+]uJ_Bc%
%qt9Jq*:h1<;Z`_I(ViCV?#W\B?Bk.!<afm+n$fE:30.t,#/;1Cil0nqkUM<9-3O.pDQNZ3om6Dqoqs`goQ^?!qT6eSD]"*)[^u%P
%qcnULI-!<#m[UG7IbJE,cGo/?Vq9jh7^(qpGMua8Pl?G:0Z-EDV;52Ael'W?GH8E(msZcOJ*$e+hcr7hd]R<u^s7^Ks'X3n[,'T`
%onVYh+T-(f@ISV"I.Zh*#)#SB^MU,ieg+1/?)?)9;GU2gojl:OF(bL2C@k_uDaj_#5-7>%p!*oUlK>W?0:Ij`;S?Dk?ZN4AGLfrU
%D#_Vh&+A4+2uPUtrt@h-IQe`fIebf[_&XM>H182n?J,#JAC(X,q!F&M7ZJN@^4k6i4]cA?*r!%5Z^UgYSoLf%p2*q!^&c"Bo)NJ!
%r\g^b<s/&pjKuCmrR]H2+^]9$qR$BW5C71B3K_`shLa!5GBtQJjlJKoUiLd`h-J\ehet]WXXq,7^/g+-[]mG,9cOV/>4!\sU;!'=
%l2#7IO0r"=D*NN-l`S:sOV4gNe#VBA<\uum=5S28@Yjnhj6Q*WNMP%Yq#'R@2<^XNpDN)-KWhjLI[/'QZMFC=`]*AZQTH.on6W?m
%inh@\eD>L/cNEl_)Z(9E!\ZJ#!a":UYd*se5$mj<HAdF[R\(CV9Ddi-rUAS5lJmX26-hjh[DM8?FY!3+rFYkEl1AE[;tKr^_JZq.
%*r^d$3ZHV(pM0Y;[D#c"C9>6F\H.`flM$d;F3iHIS=?&[$QVP8.t\mX*RVeB2:snDh[#10[(?6ecG\0mcZH3ub(kYJ?[*j`3H[DJ
%Za<U.no^YUIXGX<o?5o:(PUlCo!99*N^6K!IdhW.C]!@6\Ff4^+cN;'.=F]o32nj.3LCpYs6h$$n2nndLJ'Qjjk@*V,R<o[0BNq0
%^A.qoV>]7?mEnjGlLg_>>KQ2jO11;4[hq[=DGN!b?i40_5H4;fbPup"p?:0k!R(C=P?^0Mk<<dk=p'5TX4&Zuc-oq8>L@HFi(eRh
%5i;3[_7jS_G$U^-.<R:+d:G2KJ)Pr2<E/Eo]jMA[._FSTT"Vp&oJt(^2NC^)a.U%;c=UA30L*q!AfZOD=a$]hgt8ommu9VBD;;r-
%..(MYFWTIM,[<XClM7tC3OaLdkVW^tDPPQCBb]Wr\jEUJa%M)4Kg/?Om6\#Q#;TDh>sJn4a6P0<`8_nmC(GeNHY1es.)j'h*cDnp
%m>6-i_r!P._KcNhG1qX>]nsLC1dn+ZeRlG?Cl<TC_YacFkZBdjL2e%+*Gh\*-oC`XqeDg)(%o<$2(UH@<jO-U([2BD-]%7m]?Ce$
%S&RkBZ9O_C!FX_D1'faaKgGSMDsK$9O?,g?BXu]2T$o:4(X0s,^Y5hl]431KF2_b!f72O7I+)p0R7!?p82nfHM%KtrdfT3n3qf1k
%RS?f8)]Sp_Cj+P2>pO?[+c+D=qrFWI4JF'\m3$TL=dM!Wd8aNNrLMgDEksTJU]CR<-J@V`]8T$kb[i)<&7.%1quGP:n.aO]IdpOY
%jZ;^uG.fou[%F?!P/iEf:JYVa_eIpHgO.jo?[VN8#2R9t>5(u#0bQFBP)_0'3M:%ACL'VK?8"b5Mu$;[*YEh,+]Qp:oitaPe84bt
%n<94p]XOfph\#&2O?OFuAY/q7`)SME7nqN1??Fnlg.AbpehD1b3ZKlKJIAZh\S0W9W*AX-cn?tDQX]Nf3`)u)e@b;KT;p)4H(CR%
%rEHrFc-sX[k.c*fYO8Wu72dO;6r<"D7nOWR&M01jH!>Mj9'NSOa2J:CZRZQYZ5G$C,B4bT^=d7X*$V\(k.=[\@S3KHbp>rHWdW8\
%VDRT6Y#4dDllH?1!o3`Z3b&<?F/[A^XkPk;p++\^%IFsE*eW!L5JLE8'7,@gim1BoZngdlKom*oa'J*eZKBln6b=SDmf/iaj=,Qa
%IMXBVEn\kkh4A\VStOr>p)ElVK<rI=[FrtE(Q8[rJ/><q!$S"hT*3m63oCu=R[Bn3gmqO$6ha*H&"T!\islnfF-l$.9ME/VPPW5>
%D>Zp3p@_kaTbYk8ii=q1IcL_5NKO?air]6':*Dl9jm^%bRH(+Ols?C6k4(IUG1HiHYIDXcYD^g6:g/PJc2eW/XY2q,6kAdn2Z3G5
%n,E7RIg5rOci&FkPYX#S*M7hB-hR>Ta3WNDTcYQT@3.Xj4Wj[h\mF;=JH(s'!^C[0q<=OLhs=cXJR<tUL<m#IY,Gtt(=-=P=d1qp
%5EY4pWU@<o$@VX8lE5'*_m?KUDMPA]T1'W'h2+jK-T9Kqa&K=8@p7\]>[8AB<HTtgFVX4FPgS$Vcr?&m;`utuZCXK&>s1$?_e37<
%0]]O26]6&XDb,Z0]"2OqANfo+krdRZ%\Ildf9"1)[RnLFknkS76c_]gR70.q0r2^"<S`WD\ZFu4,+TYldc%O8*Z9!$c`oo"2`.>J
%B3dYSjKb@EMfc+?8E]i(FKTQ'ANsCpF$2lOf/'4D>sg71fs=8j#jE0LSO:IeT:&D7LQKe9Ugo6)(O_T\<-8rqd]qGdN^\\-eoPYi
%NeN40/2X/4Tcod$Cls_]L3+t#Ugq+^Qh;>#Ugou>*V0^(QtscS4aRt/Qto75>XCJ@84T:XRrf,`SRY3W(i#1'=[H,K%GbJ\[b+E6
%5$Be$%*9\\Z-X&=4@U*s!^j**&<#6Do,(SoU.0\^2PSBN7Bf4E81*:J65Li32MDQj<'<qg65s(hrbGqb_=oSeg'WGaWOIb1'>mcq
%m5Jkkp!6Z+^=A;^[45n*q<<V:,udl!<qReqTM!pVROSXeCo")r`3^].TiG$0Z/(MKQEmNtL$C8`8_)=[[[IOGm&$d$Ks[P8OuN'2
%mAKrO&mO'[obLBpVV]0(Z)'$P<IIJUBgYllqoqnK>?Y$,eYU3Mel8!ChpTGT(9s8rCr[a'rPhaRQBkQPQ$--?`K\$7[j4CYBleDs
%8o/3W<D!'>:(^]6?WAtZ`0OG*Q*fGc'X=JT<`OQ?CtGTG9u!N\/M49.l;;$&/gYH$btA_>=i=nfYoSb8p)?X<gTcS%:h$baP1P.=
%elr"l;e!)#&t;=S]W&A"7;Q\K<Rm0DRt[*>l*hA3V%$L+"%mCl;t?gBJeYJd2-3d@8o3Wfntt9V'X=K?f2XD31Q0oZS!tb5@hIIh
%`(h_'XVYL3,p9(LN[^Z38m2$;7HK=<3MJ>?.8d46-q3'EdPmi[[;@%7#u\.<c(Uu,/WFT"_R.1aoS(9#(*+u<OesQRWG-pFd%Y-p
%9CTSrqZrc0BtH$i"T_"/qQ,)Iq%KaqPNlWDU'uJDmHT91U5BeYGS\14Aa$ItJ9Vf8J>hJGVRkfT.b8Z7X%V3nX%7RiSmu,/Z(AAJ
%(U(^8M^hS;WeZ=6f!DgWng?dcBtM?*@)unBLDK-MFVe&*6TSr)72bsg>GRH@>uYeQl(eKLAa$Hp3^uZ\#jE<q0)EdCdRj>\X%8^2
%Smt,?lT)4@-`shY@Rqk`Zm\;6@uGHW<f8H$+e?!aU'uG[/^d2u/ZST#FKTQ'ANsCpPBL).nI4Yef9"1%p2&/3697S,k7D[]B4d@Q
%+f'/fku_E97A#S,'gKZlF=]>GA!%q$oc.23PP/$V#n?-$BZOaL>GRH`<`BA6l'QD1AN^86l(i/2<BNW0jr/8Cc^mQdBi/FV697S,
%8"X(VF:KIb@n;q'C6;"r5P])2kS>,C`J.:_d@scS8/<)#Kn`.Z0s\k8(hs5/=O\+Ra2"D`2$uaV&R@jWJh<EZ1'r.:\e)-R.:`^[
%l=lCmg8&O-R^5GATqSd\]AgAqT/i@G%"7h[1VW%Al>C:8Me>mUPbHF73f?^TAm1MHU'ch-cap^JlKV\b>*dL/MW:S+<HTr):%cT7
%/>'lq`F8UG=-!dS][4#:T1,$d8O)P+JK^TIS!N0BW"SmiB91?KWpZ:@jmrb71t>ku3^uZ\8<9pCIb*$i6TR.\/^%d(`<k#>Wk+Z:
%d^cVs=[!5&0lbXf\p@mXkD#jFq(/O6Iem2K%h.]-_TsjnF'45]lfu2-SP/b2-%,+nnSru8FKS8-8,1a`I-qX;EF#&UN0'(hZV1)K
%-0!r?Mf^L)Ugo(M)<#X+`.oWSku_Ie`s=mc_WQl6%uW!eZ-\Sm&Un>FcP[<:(0[MD^*+LAr6,G=1Eo$,[n+P%6TR^3R1VVq7!tA7
%PE$7'&Un>FcP[<:`[oOaL2qs:$'Q%M8M$m\L1l7&$%EVfM(O=5L0fOg$#:3*#q]=XZTtUDl%mE<D%\r\Rm])m0(;f#R_XTc#]#P/
%M,TI=.!.mVO,/>bUafLo:kXYI#`?*KIe2Zj-u$H<P0+W1L2b52+n;G0MN[ZPBo'a8+\)?kDlTfcBtodb*1&M#c(b2?^8\,m48`\/
%ihk$Y'[_BjS#e)4g2Ed\L_?2H9%-U-EKDL62ptMfM9V$WBumc&#lNX?dZ?tUc-</#aKojTio)iEOD>Gt=i=nf%^%nk7N-:qZ+3HV
%5KbuceHq#g9LITORYG;*O*pP!Zd/%ZBdf^ok%<1$'N,o]8c+K('Mr8NQ3=aaFNK^>)emBk`-*^=E\6Nr/J31)'X:rq,.8d`XsIAV
%-,QgS-8r2dD+Th)8XF4LYffq_AdKbAZQt?0d`!aLAk@m4/>C'pQ38p8\sOe\/4pMDKp:66Os"@.(UHMsKdgIeT+[Vr'#Z?c@[79U
%5=KDN;.;=SJs[iibS"@HV2<GJ@TsJ`/EpW0#W%bjG!]n[ac@`OQM;dU3ldK/QKVFKAP$d0,&p.&Ce9U4:mTI_.I,UkdB\P7CJ/!_
%`mD%LL8?T&cLQ`saQ-J$CU('#WU\=C&PLOTD8?k$oWtN73=2YTQ&C1=(&]+dLVS@>iANXbW]CbX<>WuDFp%)D?(Js33\rA2k=?PA
%qcR!E>[<niIJK(SNjQp;T62%u%ScW;Zn.goD<UA">s0s=j!J)4%o&+j%"6^W"%,+efN!'doGIAfB00<JX*^^Tq&F*IDEmIP/g25[
%Ugp2jf1eKqlAd#.2r4$Pq&F+TD*R>tT>ZhO)f/M;2Ef2<oN>7V%-b9i<n0RdUF\d)FnNP3c6`DT&jDXnkd.G[)q)9MT3]=s/eK2W
%[n,\nKQMm>?,GbW&KfW48]M,$#X>qScWq_Y0!e*h&jn]LpmD^XB1.,L@Zc[>L3/CD1F%:mM"n3q+rq%#knrAl7eiJcnR8+[3p%C0
%0uD7qn2V`Q_gIAabVQ&)KV'.@F%4*'GrFn(+W]NS7eiJcnR9Wc?",3P\=#$2&Y6k7>&9!a(n'kPOdaoH=D6neGaP]n&X^q>'f?B;
%.[Z6PXOnl9UU!HZe*$itor&0jG`/dAR?0E$W.dQ>2"cY1fM=>(r-Hj&Bta&i.D2\`E=-d]$LcjNkj?]i=7eioOb=Go5DX7]Tp((.
%.*OD"W9Ya\%1A&B&i!W@.)rubLj:SX.)ZgF;@K;8PBE';@(_P^\VY&sp$9CAdP02V1.O0[G2NlI2)'ZWWLF't]4&V5pi/%,PqQ;T
%@'7]I-F0?^M%pDK`<f3@Fqa^-9qE%>k.,Ze/-DGb^XCjBTm@>l67UCPMD7IaN2*-1Lm8u&#+^E,#9e&=5UJ%:8^-oi(.6,@0WR&[
%YVD(Z:3_DB(C>hPTQ]>c#%P[e':9IIa2)eF0a\)A&TD*9\gRbAcZ'dTQYoS/"fEBk!#0QC\RM'CI9[UnN'/:r+;YfN:?!JW/e#mb
%3hQb+*:U*5="FF`[3rPBggUu0&T?).?/bdp7HSiR2]9.\'<2J>kOWgL(oef*K45Jj86VAifB4\Ge=P/L;:/r+iC-m#([lu#cj,oO
%Os6(rP%#9K\8`dKJ]`\M#e7eb*W(Cm]LoX[`tH3-l:>U8M^+@lKGesMKJsbQ6B'hWEd0MddR9lfYmP5XBET$'R&tIWatJB-N^@':
%0tD$'<5Ej>?qc\fRq"lG%WLYC8E[$Ba.eV(@F+/S<\djB#)*)UTOETk4m"Nd"=T?c8$j+$Jl@3D%+e2iJae4D3!s%j_Jjn<-BV+<
%6g[II%"rg!ntT9.4LrK[/:sdOUk&FW\[)S:3_"u/bRNYL/!/<6j4es32rp!tFF/$b!ORMh*<B#"R#Ws4"&Ci59a6X9'GLS&'F1?$
%6buVBO=U]W>;<>g[)-89p6==PCF5_l#H.jb:B6*f`)U$V;!TnI@u51'MID`;]V=`7/Sh4(knlBKO-bDX$5jY*cj::OK`Ne$Y$_`9
%7L>G$>h9.6&PSG)]HdgW(_gD)RIDWkjs6'S]",\.P-2^4`.L7Y@20.@%4o$qB'LFWmMPB3alpadB[XKuAp"4B4Oai0m8-X^1JO=L
%=YRH,2V\`s:V*KUOXAaM0WQ/"g-a]+);Vg?9q&Xr0WUZcK*?i8('lZt+NRrAU%W"U)(Z>0YX";d!^R"u%(.HW=9]0.)(a]YY^i@^
%!^l?h90(L]Qb``0"q12D/25SF<;ROai+9-CQb``0"q(jI-ZrMq$b.'*i+B3DS&#.nmE'6$=MW0h!B5W7g^Fr8C<nm/k_t-Ai?Si=
%TGrF5/,"LE<OH6M$M-.!eBNT5\jtQ0%sR&FFQ3fhC$K<Hlu&?PDEsO!'f@\nUiR-ll3><kg^VHjL(-(Ul=Rl6DM!,CRiiP#C1*o1
%;`>(rGE]iEIKg2T)(Z>0YeX(^-3P1N-A)L"$l8=g=CA'jfhDYYGSr'jA[$]W_#d!k8YqWe!aZ'=GSr'jA[&sHHU^[6lMlBkj#Rdl
%bi&'45!FK9k[D]Z+'f(g/On=LU1;ga*\RYr(bDuniu?d]%AA>8e>PVU2AaG>P(Gu5j?X%ODHRUk_X$c3gTQAU#eK4,:uclTog/bt
%37Dpndu"1IY1?#qb$bpXatT!A"G7eY/J*/bJ]+-@.KPMgbeO2ZLIZn=8sJ?J!(T.<`&.rJF?`gR0uM8OR4qXmK#nKVp^@#PTJ2&^
%\k)9(b*^RT4U7^J1BJf7(`7S2EE#1B+Pbj&h2;Ec329!#:LGkD&m<nH!>oQbR)5hcJZ%Jgf,89GJ0cI0`%semSL43r/.X-1V_F%l
%"&(n7nAN*bc3PE4o*e#ATfat/Pij@6Yd8/b!+]/qk7pUS$oEGDf=Mk^LGmaWQsj[PYV6D<W,!7FH:a3#ba\\XoJJ>U]]"-m^^uf7
%4:gMh:+4<78^st8jK8p7ZZIQ-@'R@t)/bbb(k=K%Enmo<G8eXTApB,T,KI2/*p-"arR^rW@<`'_[cVcF="f561qtO@iHGG\ln)Er
%]IeH8fNf\#a[#EpYWH51LQ8Lt(!LX+M]!G-j9=\iAp9%k,asJFZXC)A`UL/8c0u'o+ZqOuhA*_#N[MLWNX'A;GRg2&_$6`^OT<Po
%$>(,[2Ij8O:rC(R4n9aYYEn?+BT(Cf;T3)T(p^N7Kd\A?%*rFd4(=oBGm,<QY<[i773gr#G!pU^+]QQKnu(t>YalRb>K&+[@HX:#
%\jQ`*k.\h**bLJ$Dm=<u9\$OYU4(;V$@s?OZT'#I_`P+_hK347J.*J'dN%_rl!>WcEkHuAAsU[YJ0BZ%.@_k*G[;uB]+NEB9.Z*Y
%C%;>Gk'/O3!iIiknmH$K-,?at"AkDN+N)L1'a'P';4^i;<AMr!3BZaGj&d>?=$/-EL7aSgI0q[,CD`_d!kD..QoPOD-u<:s"2jdE
%KcrRb\DE3609kee4DG`.LRq$.4EQqT705$CQS?>(Z5EbK-;ojdefu9Ro4"jEi:'A%5D\!J39uN<=Is/E$]8Tm,#q$1\H:8?G6m>4
%0I%XEPp(ma;'u!o/tV"Mc*4"":64g8^(Ug9&2OC@`6aT\7PFu(I[kY-+g/ZcQ?XgFOTlWR_@'<U6Cd3WPn)a0&-=lJ$B1!"Y^!`0
%"V;@Z@\@*uTO]iX_Gjl3RKPgc'nu/(W/*.lhcrZnagW(;OlhiT@>9t3Jq0<PSW$ZD)p"!PF(l;i!99m%O8pG@+DdX#)<$b'(s*sH
%eh@W5MJ3\LZjPie@BJ_$3$VsTa:N@%97e"K%)eWBV8JDB=;!Y#oc7Fb:[GRk9bHA/WC\:J&4n&`Qq[NJ(a9*c8J&jKBZ8,f8KoH'
%pT>GS=:ubi,St"l-B"[.-=rF]njaT>JTtR6OWo`)_oTV[#Sk7u2+\hk0R4<@,8h^C9Z$O_A\goda1u3j5Wdk9,\])g-]s\@=$<$(
%P(o**$r!OJ,.HbsOi\-%:.u9,pW:@4^lhOQ.U+V-6OXDK$)8Y#s+.ZP\!W\]N=8IJN.Z]'KTG)4R1_8[DUM"/b9b@dY\_;Z9ZBB9
%8<.?hc_&,<-?!Gi>f$mWbJ]DA(t:Fe,`+ATAq1/<%88Zu\6L43KOkpcS%OmB-u0SE9I>-DPI#?Q->d:\>f$pLb#Sq$9VR-,*)RWr
%?d@XX;.O&q;.MXkVKaqQX!EehE0;Wt*3N\(Tk-$7RrtULJ4s!W#g8jWi$;6s)-jud5KcG)AS.2H0eee+1)ukh1H?Gmij&[2iX1A_
%4>U-qA;Uf>oO<&MVK`f9WuR5c`$C3sO"6T+C"\C&B1!(01J+8`1k.BLPLP]Q.?bZ*0Tjo5>cuL=R`e9;89;=n)%IFaR!4`5dP-gh
%)T)'CE&l#LBeEI@_n[I?A)9p@7)MP:82G0"N21;!9XM!K>TkeSAJU>jglPqmdtrXtUlOGSQ1Zl&R+.5[E<S/b.pF_.6OO>JBqQV+
%Il3:Npt0PM8Ko"=9]Hs:Q\cd$j<baTQs@K:"3Y9b^a'LKN+@BlnGG:ODR)Q_b9bAOYY<VEQ<'r"(s2\hp<A1$&f[5)_!nm&@0k11
%4t##+_c52T8si<4BKg(n:/!Fan@=2i(7)'>!1?=\,Di$91bYI0\dWorZ-jLiU,$_`\Q#DK1b4dfO61Wi1D1k#).Lu3AQtS8dETc!
%Npb'NIl'2!AB#bH(`Lnb:B5)U+:0/B&IN+Q5U9S_o;`RZJ]Z,qDFNZ1FB9^gUcDeuN"!g?W)0J-MuX03F=R^WThuEtdD(eH&;UP/
%Q_AsJmM-$No1hcV"\`NGF=SiMA'cn9+P_$sqskKCaHLGZ#SS)[L'_s$,7<8#1&^n6&+Gj>7pSq@?/JAljPclSs&\,:%hFW7K4$X0
%>ti$SpC_o\_28(\SpuhU?uF;UG=b>-!]12#TR_K#KP->YE-9$J'`pK!J:#l_TZ6``L<.[ZL-#ImOI9];5kVN;[LES2`2SoNkDuu1
%*-ITXR=lb!k/29FR/'`94;8G(LcO[4]X1B8"QnLe0ecW:,aL-Q^^ZG=0NjaZ<!Qi6FSmOF.&>69'&u'R@ombm7U`/-%0QG3Gk;*8
%&NuZ'`)$%Lho-kH3&VmA![/,?D.ipCKRp[[e3ce+P9m\f_Wqf:"9c!Sl^7@12s+fk"MIZ#GWgf&*hluYlO#n&?,6pgb@V/Jp-j74
%iDdq7o4RPR*a:l\.Bb7h@H.>`-BWM4\8SW5T#HOT\jNfC(/38d@%r(okmDtuP$+<8RtbF8$SmZPqCo,R.I:hFLZu)@ORIkO(!&)6
%Cr65]+Z)k9<67DrW]3/[?,#;@OPq\(kQ`Q=)F<:#a!'D`(QVD'K[V6_icGJ_9IuYf!8/1MFG3X>"4*UVkq5ADig?1nF9sa.S3S#"
%"`V\&XWGL$+:2loScr&8/XYn?n@D"2NFis0"*o,=Ph/JS"r?7P7\eMMjOen%GKT4aACt"m@/u#p)Q"(GA0?//]^?P&a&_IKGbJPL
%WC$BL,`uO.#Z&"MSmcaFTWG;(L9kGIL95#o(97h-.`5Bf$q:J5j!V;0,!gsah'0"JC5+W+)]12+7^ha1KGiJ^-KiWh(72_4nB5?]
%:NSi>S9/-U*5"KXfN'_O'\GR)=2Nf,@[L:V?oXQJRtc37\3h*>'mBn30uD`S(40OX3_]'FJ>ZIY_qlf-%^:n(DZug#X^Hm)AMXN5
%qkEGZE2mI,q,8+M2kMA(-<Dn=^L7_9Es[A,DJO:.dZ#9:H*^nYXp("0(cI^/Us[CqoH4^9=H%,Y0edSFK#D>C1m#'TohJUpJIEL@
%2@RAt6GjL(Pmer<`o`r/_;[iKF@K[Fk#oJge=>eJ6&9$F!&]4G;=_AQ)6T4K%'aN+Z7[8W[lrtfJB8uW!Z^$_!`79A0S?ZIAnYF6
%4uK.H_%VU:WF.-AiH^OT&>ks)6%m]l,D+kV0bQ26\f#a32%<g^?K:co#Q[aU/L%20.U/o'"-`NDAe`8L;%Yh:=@An(1Ht&3aAJ9X
%_o=rCQbFCa$k._F044t>$EcQs8B?!0jdm:a#%iNZ[UK5I]G`-DdB+gEdpr5eM4nq`\0OEZUjnWY"\&a#O!jW@&+u$s@b&L\%5@>7
%"F-mJ&/[ZM_R!nc?MFMXb4cdt4C2Hj6-+q.B)kRe!c@J.`/5*s70JJj(@]RQWY7&(.iT<kL,XqCAl-::Io'r(?J$CWBcuhT:&*[5
%^Yj[L!3S$DiCZ?;-8$\X]JRM6!s1gWEFTRI+<f)I*d,E%./;>G$L6XY''%U&WD7go/rKNk'f*0j.^jf9ZB4-ZJqP:R;fS\Vm1Lh9
%F%hn3bU63t4Wl\FeUd4KcToG?n.+=H+;1@R'_fV`XLKrN?7^)DhO%YlTK8\nf>DAQ49p"O/:::,4s8fc8gZ:LnK;'UIR+/O?^!$q
%^drjMU/9&J8/dp73E$X!Y%K4,d#+2>LrD[^oe?mro#hPD-TG%tT0/)B\*,eOM(?T$R#;JHE:+3&2+$)cm\:-IhonGKi0QcXIKH,p
%;fI%SUZGtpcdR!T\h<E[,/hfp41\j`N'.a4iTFa&q')Cc=&<H(!52L[Nr^kMH[+EQM@B&c(l6*e:/BjT)$G(&7.U%X&(I-I#"m:`
%qg]4\/k%$UM+Rk9@I-Q^m('jg$Ek9o/.uI5]0rlaf\s;@!CX5\iPeWSP)_]T*/ZTD&2=:[I1JHHOS")8+#Al`(Fa3WTrX:c4]0`=
%l-QX:2t.+[&/PkoKpZ5'WlW0T$(M#\%L?4"`E8AO.A=BkBF`:S]:Z\DLR]F\Xs]T$#on56gH\-]-S:RLlNh3`KGsGF+9eBT%DoYE
%P9)5+a.ZDI-@X/E'I>bMJc`4k$Bj&kKZHf"khmaTU-T4kHQ1noF4*PYeh[;D,02/D::WYq6!IgTj9QKbcp;e@5SBJg-5D#^`YMZL
%%HK<HhT_$)jD.Bq=qTg*,76hb0t_^e;`dHC7R8#0&JZ03+.uKC&djlmn?O[q#P]iIJ6V.F/det'iN8bN9)P(6F/tr^:6+cudK]e%
%A>J!PW'\.+6feSF-]/BO<4$bF)*oOPi\UkuGMS'?EU\](TE?_V_3I7lXqV5ca[&\PIIL6I5%S>@,E4/n5bod_a.57t&/$BHV4e.f
%5p9jW$'\+CJZ8a64qnmugdZV01T3:^@P]Sodpb*bp2ADhGWsD_+pI+^+Zb"L`__dD+q5lP_T,=6p^H2"KlV0g5l$D5&]YT)=&EPm
%+b=S;T1;1PgH`Q*X-NtD&jl^ZPa99+9+hg>aA+-S@T*s,,G?9:9J#k'!J53.6E`ZN#SQXt1!aHn;'<#Z1u\kr&r[u(W1\eRWY5^P
%aODuEpbVOYh_6LSI:*t5XelqD5bJk66*:k6-kaa"@`c7pZ6f`H[+>Im,ufhbM&$O7&-bf9U_=l<LQb$.;4r%>Es8ZOH:.$='.D9`
%%/Iru<@8J+YuqkGQV`B]`J2MYP"l]71?`Cc0Kk$7&QhUS4-<tT3E2%N,`01L!Z>5LPi,0-^c[GuQrS<]k_i"gZg2C3km2Z"k;ZEg
%NX:dX?IOQ$5s],*$'\+DKfU&gHG$g6oTc-Q5t6FV1Wamp's%52<NCU#57YR]3VdUq]QdDcC'4lILuF-i'QHHKZ2cbYn*k*s'*@18
%>J)8K-T2['Y?jKS?=MFpMMVVK0e^U$4X)$(Os]mN:ak1d/?a7AcigQ1A\>Up`-5<(]^lq*Ll<8a&8r-mGA4mN(ipD]0q7H_%%&mG
%/;Q]+4d1[R]"E^JXRT)b5V&Eg#Dg_PFs7!i#jV60@0DH1]]Y_N=H'^X)+\!@ERlGl,qo<'NL4HU"'m!+20KQ%gX#@[,P)&ZE@I\1
%OU`"j5V%G,JWkafD7o2^pZ/,1\3shX3%gBZ$6"hm:s4S?LgnT/7rd`q1`.EFD4L"nd?<M.h!II<iXON19<n\VC(kMMJmVZr1SQTV
%rdb94,L#/X#(lOf0A2BT[R^Qir>4LJfe0Cr!"s9&M^<V'1'NAVZ+'3-$l#?38:HHF5ZuM+0ImEWTNf5U0kS6].O"gUN<4)&nRgX>
%!',Wb3%kW@g6r/sL$qMI8E-qH76i%BfUEsN')`A#Dk%+XH2O&<!`fFXMED6b0f`"q#nXiRg'5CC-Xomj$6;0$Ia"*C+m+q5M-\tZ
%N7ghq`"A?gpBX;f#u#A)TTVugj<doM#Y79W3ID/8)^LQFM7O>B&XSWZ"U,Sd>PUj(d:%ig^KaN]-O)bWK="'%:i0&B]J/-97Y1)@
%3&bDHQs19j1t86RFA-roAnlt!lgof8D,LXqQkTTJ-A=^M8HBCo\8KeSJKs3n.?hU\VrbFs`(a=!oq>nm(<&P;72[9n[3uH%5o8A]
%Yp^#6qbF*WW!MCnDB)Ji$6ZPV*]5AL6u33]&u/o%KiPra,/1m"gBGA>p+2<$;_44tW*'/"\=UOd7P8aLC/lgH[OMDPX9sM.X+E.g
%==,;GN5&\&(s96"Vkf#3Q*`5E1k'!*HX-2kT*be#80Y7YYf+N"-',jA%NpSo>Uh?/7)XdEM7=+q&f9.3Gq(9rn=,b@YDV@rVkNnN
%*L.E\,3(#t<&]Jlnj4He?A?R8a\.TU4fCkj-3t>ATg=LI\>XMeR.?)l7[->@?3lA.$\8q9Z(OEiY`g?<3?FNg/BO!,$5:.@D95EZ
%RQpGGl7q!"93qnBLl2I8C!f0t/20;kjadl)nCN"pQk=>KK9$G!?c:kAmK3:n6"KT!LIZgQ`#T.1I)fH1ib0SO2fUjlqJ<4P+i'-[
%6trU<XHei-5=UL>0Z3g@3g;>4)tFr?dY]0eDkEi-WI[ru`"lg+'TeE1@UR9?J_.(N$^hat43Nn5__8su2N3b)Ub8n1MejejRj&E9
%c(Go(Jr8XgNFBJK.CY[X28Ymoikm5[MKdm$0a[[G@k/$q04dJ!"gULE"gp[G;d7</&Z.X0-Q<'e0"tR_+]/(T'FRh_5CS+f7nc8K
%Qk`m30=*DW^B3(3^Ok/_^T"BXJ=V4JU`bB9H6sB5A,[<@WQP+f9[']5G0I._->nS[j3W!eLkg19=><$h9?27!EtX<$Ea9UT7sH@>
%@3ju:&3K#U:cmeu[<9jAcd8Hf*"tEn8#5Z3D^u8k>eUM@8,S)C6Nk'E8B+'q'IY2T'$*W*6/i^pnXD5PW#-/dkc-ZN;#rlbR=Lnp
%8\e,q1>jNGN)Eb'L`mAF$"A^",=.9kD+L<DIL7hBs"FJ[K,>6kP9>U5r$7(q:_JJ\OP^8AOInd0aA8KRj<l[@MV1Q06UH57_iTu;
%`%\'s%RO.5:I->e-VtHGgJAs]P8M<$@>KeB)8d"G+[@>$-A9djXs4c5-TZc$Jn!^U<S,/2>#5K\#`=125p9&N-mj<rJtg.!92Km.
%64;N+MlEk9TI#;BLnkHA0KXZe,XmJA<)QEbU05FQ+'MPnOHpR_V340<;Gp3\@X)0K0:&Etkf&]!*PIj*.KV>fU*3K4'[W!V!gI/g
%U),%#6PR2Uk_4@J@?C%LM=3jmPY<KF@]8IX$,u;AZ'4lDd:mUMOm4+6I]5QSE%PC,%1HZApNcktbXn?t:su&igmnnNhAs&_#JiqZ
%+Ul?+&1.Lc?gFZ&GYX%InI'Y4JS0`kkg##<-tWQ5H]IF@d?'XF:_LK="AJTRJ_%"6G4?CMpCM$56D,fUEA?5-d/X;6lPR4tnAUAP
%pUVdc`/$BE\6^o?nJdjU'u(:kM-gOQ`%M=pitpo)$@.H(!t`BtLskf$@P7=(iFO"&CFKBQ#9CPjdZF68R#KPU\@D8a8]NJ:hBB]O
%MJ2nhcku3^+l5:e>"#,%o<)R>"X9(e!i`]K`D(cS't5:i&WK4)E<7J!R`$d1^PO2@C'S2UQ]>9$J<!h>Pf,-h<5^@J.mC<!Q=7Z/
%H@O/7?)ZU6kof7ll+Be=OK&SWpW3P9[6aX:C1A*]?Ya5'94^#6=rBG1iR&X#FEr8k;B7[FZ7""N3:2k<[B,>'JQeHbbUt6dkUVG<
%I^f5Zh7N`4R@hrKnS0"JCcrG.LOYm12oIB]!:Z&-6/Yk,&?f._'lf4W#`/IKJ3K!si^NbH1BGIf,Off8WJYo,33bU3_XLdASE<#l
%p*^mr4BrZnges+$1G5lj_%sT@W^3"n'TT5q.o4KeTY/6/bd3B5IN4,nn-k4f[hqCV->mbF+JIH<PC:r!D@r6r%_O($=*Ut$ml&q@
%Kt4V!;QVi:g[4X6=SQ32JXd)FTbl;?ji@9k1u.>KHcc&)j(Ghii%1Q])rUA3Jde2#"M'X5B+Tto(iUg)W;HrD0/,'kghIDS<FKnM
%F`g3q@olaU=i+\r28i-@6s6u9qjodg'T:`)3/EDIC5L9m6WI2/:NV1b3_,4nZN:;afUQa-`I!`\5[i\-(96?8:K,0l7_"G;dNMI>
%)JZ+J8iP)T#s23*Gos,J'J]MZY3/4Vb"!MQJo8L;JDhm!Kn]7UV3EAWP6[Y/_JUe"$Vk63M/Yc+'=6m0)[MYFO0=\WW5nE>>YT0&
%(lNujs&0R"0dS$E`Bc4#\4Stn<Oip6T,*A32-iG2a3jBC.S!*,i!*M=Jq>37$m[_+i65W:3(4!Ge\n34&5h&/iR]it!'_UA5D=Y;
%BSZJX*o9`:GDP0;5hCR$oC+)-%'MYs5Jljap^%"E)DRA@lX`>DLj5o(4Jmq41i`8MO5Z!f[%VHt4qKgtLBe4^0'roX\=?'6I_uiS
%i8^q`S4E(mS^LmH^JkG^aua>S8r2%:V`otO=Z6]L@CT`Z7>O[>_[2rN8Hod=Lqiae/K!Xjk(nBeO($"^THPLSYhm;/08F9d)/9[G
%irPSuO$H#0PG=1fN#T9HJs\T;%DaN,F5N7Pol7u;D"uM[j-lY&YQb>P%11N5MBu]I!@#F6VUH3tJ7[6P$l=,]i@3;FSU0qimJk6A
%Y-_p@;CAG'>^=I+^GG?;eI7sB1f'cCj5KCT;Cj,m-?P9O<N.MdTbL'cmUAMN:VSP`?gq"<_JMfgOlDFi)dF!ebTt^RLj-o`.^9CA
%Yul++/;DRuc5a@lYUe"pfF8"e4R,W,(+*=Y0(KPS8HZtB#b6oO?+'pL#juUZ:TS$T_8SElXgoH]!ikDiKjm?+1Egb22I$;PH:'e=
%SKGni1J31^%!Bo=EhomjB42g#rZ]?tb6=n0Y*QT_kd-$kM4_9=+6%:eg[fe&nemXm"1+bicGtSWB/+DE(dA)g3:^1#_udcY#tkD6
%L7U'oeOQfM:b>3t^Oct8W<;9sqFFFWW5XjTj6F3`,.8cdej)-U8'nm1T79-9#i)>#N]c9SmU6YUUE%?<i=M5.o[_@qPGck1kr8qO
%aKQ0>_O@DBa,.0F4Md%#0CYcC'4+%V);[Vjg)1PC@?@n9M.N2'(.^*G`IbMX@7cTS?YZ%V%?mDInh:i%7@m@D_3d\Ol54*&V^'P+
%&,G0Ei&>!_T9:=.OMshi/h$//O%F*kU3`*MTnK.Ac7aaqNUaBf+4+=/Li7pqkim\2%'$_oZ.=C%2kC/$b3`%L;MZ+CUJOa6LI(d4
%TndNc!N!j]U$10_nuTQA%PRT#ZU$m?/s2W*"]8Ff\J<@,&FJ(721h\c4cJ@iV@Kp]X?t>7R;hoMaYaAna\[Tm%up,#+O$WN8BBq$
%L5[sU35\iiOJE'oZ*Q'M3+S,F3<QRcTqNAje!qK!n9?O!:.@eEhmuSlGP!52OqM%&`E4HTeJ@3-K300?!VPhW.8h9+&@'S3LCX^+
%q`qW&5a4A8)P^?oF]E4e."`<_P?nu[c\b1f(GpckXUU?bV[>(<]La7!(&^$+&1G":8YVMJYV-'`fMt;4Q.SAD1!S[<Nao>p!_L8E
%]LT=OqG#sJA@ac'UAZ"/7aNuiLG:pJCuGgDdD*>*`Xb1u5]QAF+@@uG#mI087$5a1SHg@uQHeq'_\?,a`(/lr0V?^DQthb9<6Z;B
%71B^V#b'oJ0S[V0eeDaBAFjB\,!5r\A2;$^"AGA^%RoN4ImQicG8Z+m,)#ATW7[$N.gI9d9`sn>D,)5"AXf:-/HM1\%@-^U[,MVm
%3+rG4FY))Gn/u8)W$-f]p'J*85ssEB+qOV1Y$Q,=,#!Z.Ob/>Oj-\kr^8H/g"qmqUaG(<Ik]'(G+X;5e\dfs0CFCM4Fo1sA.<Vr=
%5TPi.KH_>4U#8qNV-&@;aKIN1;G_t_-$-o%>KAG0E@a`aIcOZ8#+Q"Gq=o3)aQ$EI",)O)R35FYX,92"$E0t+ZJ$!LJiSBA3jJQ;
%5gh2[fl^PL'Tb.5gns9c_9\>9Lc^Lab8'#X3AL<f@X"UN<\,B]%q4J(-Dl)9cr>e70K1@g6V9_mIj'#s.:k=i^`Z0YBL7OIGat'/
%6u@q8j&Pk5."%.EcNFI-eJIhO;9B$%U(q;3@rXo+!-.%`3!tQk_ub@KFr6%?QG0.ZEd1bG)i3I`_`.GM_A!Ya+VQ8$Wat(6EBX^o
%);mnSQo?*%Tc3&pAMIF''"@C"R"5`W!j#Khh"DHYP!9&h)[V0_RK^F>_B!jaNr\2%5>POV5Z#T+)O,a^&FV\5G6eKs)IU>o$2Ur*
%:L&U:"Up*///H"IK5jB^TmD<3?f<$I]QGQ_YhUq(!e1_>9_!%V32io`Y4Z)7lJrObK`HBR_&$HV_d-'@+--Qa]k-3GD`>Q+K4H5]
%&S^V>5q*I<;53i\dVs3t,/mmk/c9V%6l7;(BdO8U)+u-A#mB)F@N*P/4r\/HZEulK]:]?%!75.hiIh:`'Sn8j&>F0$`?buP/)ju3
%Y7S<l8I:Sopph6c4"%%snF[>.Gd8nkk)[k8OBX79LgNcnqndtVPl_aQ6*J+(j8!FG!Y,q91-@+eZsCmP7RDntELikcCL7[)<@eu9
%HoLbqKld1=*sR%c72PS9#SfZG=5Jk%,b]b`if64LKm8gG\jXM1,VTjUA&9s>AHiWRhk4A7!HsEQqVr-92'bFl-5'HK!u']`f*50-
%FM,-%,q^,n76)ni8=Kr'qP7o6:L4_IoLp,W$MCeh?f!ufa."K8'h=i>$WoEB"J-q\M`AWkK9[-W\&Mgs4uBJX47eDH&k,]dHXbhG
%YX3jgis[kAfkciQUt(O9k"MSWM$cu4d:?ch!A/lBMm/aK?'DFkB*(eM<&-Q`/u4B^oP/NFJ@=m%;9R,+XK%fp1R4#cP4rbn;'pl%
%LkbHLG2O5GiJdnB1IVp4Qb('C0?K3,1D&U;)@mF!D:BlI$3fG3LZE,I4VLAds6tqW0l5bfJ853)DatkpQ,!_1@To7X:X#6lR6X[+
%SD;_51Ynbnko*7I0L3jbbI1.<9H^>6'/-H)n!?Q0MAeA*=u4X\1-dUuVKsTYk=mj`YZiFjb[^g5Nj*D3[LA8AX/VZsba<32d;>Ap
%`c%g!)J6DdONac)SdG<PPE!\q+:RVY`cN3H^6?[e0J]]+E[L;=9f5_HKrM'6gU':oW\f[YWMuBoba<';r[N5mhSMNZ0GA#JA4h"3
%/D..ojTm%4cVNn1`ac*op[*em5Vf15H7&.EbqnJaA05ETnY6iI=IZ9F5Vf=9H6t=UVB_tm2H,TBK@(po*GQ^b<`;-pphM3\)ck:A
%_$?&,_j+NY^kr<60.4<Q0WF?*5Z@Vo)/JR`:7T6Xef%YqJ/J7-%F_2#-I>^61=isd6$9-nZ3F>\TWd)seMDagmI7"mCHC,qN$>Ss
%J7`+Zoh=:>RquqDl""SA9P97`c+K5)RD@e'eqTGb[^OA$[Kt7(/#f*Hr$@Q/9e2cNAXM^m)46gl;E5Ece#$<<<]\dR0[m!V0JfW&
%E[GaMU6TGho;q=7SL=Or;eg&[_1'KWCVrbW=kdLK;$:R0PZ5s3rj6t%L6^&j[``cm#gc6pWLaD9SnW%Dku;H19P97`c*WZ!RD</c
%fs1<]"(-G4E<F"E"ls$En5Z&TI$Qc3.'$FTg8t5!eGTpVA2rGn)ou7"]L7.q37@>b!`g]\G<8=/-c[m@B*(YIbqpc_8p#j`Bh;#g
%<J(97h);7(#u##f5G)Y/Ps5nlDZbrWg`-7fs6RG@Na0]3,krn#/g(fc&'G0d^9'%2E*#W(2td2f,,-t8pVS*u)8UXPn(l6J'Y4ao
%e-;K:(7`VkGCBH02@Y$tp@l06.N%n]c(23pQ",=!JOf=`9f!Pt%_28R">?7A*gb#aIL@4AJ'4_RLCC\l5$gTuE8;U[?pCI+QTkEY
%S#.:5jOt^SO<sWr699:^T(^2FfPb<B7Gtmkah9q8(']hjPZQb_rjW(-mnk&u!n.N!cInOYdgI/JldPjC!E\m5?(_.K9`q7<_GTdW
%1^gs4)AKl/rTR4j"4-*_Rg+d,#@..9JX9)`-kbkCfH3'1g&)LB9n^WoeLOF:J=CtD>??%WDYE2"ci:SG-8&T`_:-=W,N&?_.G<Xq
%^;Nqbq$Q!J1bl(L2GY!qJoWXn#IrHRU\QM:>BlT2i.Ir\i5*.orG`2dm)s1:s+X6hn2,KA*)+JZP;`;Ym#O6tL8W]-5'WO057XQ$
%K*V:ZS)8h4LSrf.5'WNKlC32^p;\1uYV32.rYmc?_:.cLEA/]Z:>5'XYs7Zl)kLXTpu#l[r]$:.@jc-ejk(Z!i:#W=(4f8Qk+MQ_
%?]P))".nl&CS1WY9lok^CO_jJag%$fqf;%a)t8lc=Tgp6R^fbDRjg@@dUljHrG_r=-D%(XkA-K:XMHeYS=F=W^rHJ]7Skn'HT&VB
%cfQ=NP_7.\R"\!IA>=FJ<m(M-%Zn)AR[h]*o3:^#^5/=\hg#[Pln>^=l>3^jqR9YcX8+>l2ZIVKKZI;Z"3KU95[hVKri/CU@L[])
%+M@/9Q>b/cILDal5?].e/4m\#s8"lsVF]@tirCf&0=SaIq@5S+0>dJ6ZX:TnLPrS0X2P..1teU*qjPAPFuK>.]ZMms:D'DAgb'=m
%k>na*>W9WU"+6VHBdf&p9Bg2?$QdPWg3d(h<14e7$ng;Ih23p4pc-)fOi1X&d@/sE8+U:hMlZ<N#:uoEfE3b1[,(IkIL@4A5LY!@
%50HN`3/EQW.clN<'0E/()rH7>8*VfuZS;qfO#^1Z9:_kbi'GoLr"cpiF^KQ8;Wk8fCg(]FV!;]D$iVJNp[Qt[2ggf-VXD`G+U>D5
%Gg^^l^BHi_fW[Qn(n90^;>2GA0C5@sDL;iKO;^U\r_2Rj)B=uJi'GlCq@<BcF<9m@NH@$?k_p>o=._,'%3?eNc#:EoUiSg'&:^N4
%CJ*0,-.N2qU9<Xfi!lO'kKgk$WDSmiIH_YhJHo>%o3:_Y&0(:u/[,.>Ch-S,l&"%#4QsAGhh%IjCm<)L0b.ZFRuU:Jm04*4mcM":
%*O4qqHP:aRBj+k)>AWf)lY:kVrZ&3CpIbP-O(-W&9E2r.$+mEUQ'HdG'1[3RY1B5cV'.[ood;B:^^HK`U7\QQ-\gt'gs'cI['g4p
%>[#kaDD:Onj,s!.#&NIQ^O]&4P[7&;-M2mJ8WTaXi+LI5@&FJqD\h`5o*.-FO63q0%@oF>[HW(CBU_g'G`[#+^BK)tSMrX<k^7>_
%McL(+&9TqG"[@pn#<0%>^%o!/WJtbX*fY*S=#t8;l6,]\cOM^KE)Ukf^;GC-OUkc5&c#h\(7>YKe+77#$[s"V2^>_eHn]3&:'Z#?
%F>pr<?cd[L;Obr:F1+Y_J=EE+o3:^n;#4Rq2Pi?N[OJnp:"5s./biJ55.IPDd[N$S.)!Gke>)gkGXL`?7;YX=SCo7>!?OYbc#:Fj
%U@b@'Ah^[h>-=s[">@D*/@;Nc\Zf:S2uYYb%)s`'l]j>si.X%@RBp$)l#(qXmcL^S)9d#?^r;"%nA:X1O?<?rc#:F?%f#k$fh(JN
%Ln0c:fHTV.p($sV6>o'Q,kPQ`:-rl<e+@=&$f2G@nPKOb2]Hp:l2V?`mcM":mih>_U^f_07dQf!!H,42ep#cEOa=?3#H8LaG*$HK
%S#/^9>O[p)Mj6?f]_J^pc5YOah6$.Mha6GL8f^mfSCg-+"'cO'>2Nb\8*.]]*E:mSfKlG<4@m&Qhh&%RhON(]kfno(ZoYuse>)gk
%pfg;&H)["WM\S<F]tm.gU\,Z$Br'Uee4JrEM4LI!i25eer"cpgojXa-;K#=sT[a&a<8Gf;_4MqEVm0l_loAFiPs(VpPs)1j#^tgR
%m_GUnV_MjU<p\"p5;VZKStT1RIPPKkK"L\+G;d0KNje^:_lgXTh&UDlljhgQIg^%8P'O?A-^>K`[cr),@<^Ym&U?01#E]fAFqAr*
%At,@s(Np&?&:&7mS&h'(gLNA?Z@ea<"hOkd&!7YAFV&h>?jE54[d9[Nk/$K$cQi$nUGeMV&%:`0fs4>uK*/^f?\uF?W.W*Js#Oi+
%H*U/ic%"PW^P0OoJN>3l\Z^WR#>;L^H150bi$VEI0i4@VS,M&?3`r\?S=BDe"(,cT\Yi0_c$O:o*W4P:keVT$J\Qo_Rs@':]K!*Y
%baTX-'Kp]E47Mj_]U>[Mb_u-TaLp32:!nUb\cZll]Juf`k08*e663_k6.*r#h17dZk0IPV)?PuS'.[\QKbZuRL6f[if6%Jhk+B\O
%28l.PR5$)aG[f$G9E'Y6\cI$H)fDbF!B3)@pOF3A]C4SR(9H\L^O[OiLqOY2K@UFb<';/WJtGNtK7,dO]fEBNe0g_D(\tprh1.G[
%hAk#lotcl0=rlNee_U-=r&pk4/CZ$>_3SqQ*T068h>A&d1h%PCe0anOb;QV#?>V=cKa53j?V.pkWIrWg2*35"_+iG8q@<BSF?UP@
%:$7-hgOqW':"#g4/bjU5hQ55(o>-u7;I*D57F[M7])c7fI;i,Se-CW7WHE`\X@Mkdn@&u+@&FKDD\h^_p'*H]O63q0V\/f6W"*9T
%*pk*DagfT,^@5Vki!lqM:UQ%-Y\BS1#C+U<2noNGMV.t+ReQjMhqtL=nAOGe__'nO!YZ*ji,4G;jEWH>/>m'H7o_.,OrQa--/h]<
%ZlmisGZ,h"rdGaP^tGc](^^O<s+dd/XNMlm$3p694;.NU^Q)>#33kBHp7'8m7fMTVji/Lm<1h(%i`epUg,5pa*7cS+M5U8QB#.jW
%0O@-J,Lh.3575Ymn"CFFC6NP2Uqbn31>=Al\_1I35?g8oi!AYTa.(/:F,;:>5X+%t!bi#N*fKBGr\njk@tSj2];nB'-^l*1H@G[k
%Wq3;fba:A5%)4lX%6h/GSdGBDLaA!#REJEgj7pruAJU*=CoDorqa#i/4SH`8DB`a"Z(e)d=(@:LUmiDrbW^%d3Lg<s($4aHSda![
%*u'i!\rU]];KT$Sf-]jg]kdG9(_&J54H@AV%I0oNVOjCX+L??mm5eKr.ZClMeQGW9R.skEj7>Otf#t<*fEoNjiEW@A4Dbpd>kHju
%U<3j4NuCF,;E#'^9p@4I"huDJ6_@>1A]:JJ\Ic7=%1lEqJ*a>,Zg$hijOSF53P)W7n0p)c^u#9Ilhao>s$k9[=l>h;mV70t-:6I6
%$k_+M>Rcd9E!':$fQnal/#u\.IMrGo=!N0TH4EKf(H`-V!*p%KX,8[(Kp#R4!EBWM8A:f[jus=-bo$.d6uC5(=ruug6h6$C>l3f!
%m/;sm+#Xs[5"[N&hB+*[ptc)]/.jtAs3OcH^qo]/fS0!'T%BP(o>R2J/cO-VQEVF:6_3pQ(qpAsn,o4c+XR"FJB\CZW3;ne3SQ9e
%;ZS.ijE3s%Usc[N@!E&eq?C<SnMYtsR@3^uY$X9rW1M![o`GL+#IQKFUnWSE<Ru\r$E5(;#m<l#C<+0qG"oK"KVg.A'oWRRCgFAc
%hKId94ZZBH'KsuVnX<bre;:TY:/H@YX'bo1[?ief_MpB;%r)[7riTbuZhHj3mOoj[.rNTi,K]tX"aiW/F1)DNr!Bs^KF$<f9n+T[
%,-/k[6<:NPj&b3r7.<HaqTbD=OKl7sOcK2%cbU6++0;/+H*0OhL=$*b:pDlSGQun'aI#s@;S8$&:ObA[%YM<Q<`fO`i&(Xt4bB.A
%262gQ&Ttn/4":Bp@M(ZUA!rl.=Isqd<:WK*n?-<r`"GtQU22dr\)>PG/1Xk">hB3(UT[98j&VT/AGt.IPAQkk>u?rG?uK&7UKZDc
%bE$:fs'8SPOp']R8R?6VQOWI55N,I()Z(6Q`FH>n4oS3L)liVOR.r1s:)aJ>('A7l74X`adr,jFP_2<qUX3l4%4XeG6:,\6jpJ)`
%6EM-e@;N"=(rc5+P[_,TGDs7$]2i]97D&(BqPIfMA68pD-gK*0._LpA[L#0>W:Pt#Lb]G?#/0Uhpap5qj$`ZfNV%`Y;E`^O9;CG\
%6e0;3%iE*L6l4;"\jaWPOmT23mYnDPMXd:_PA,i_Bf_CH00p%EQ5CV3!&F`f+9aXGq1LbO'iF^2Li9`,><kV`9Pg5/T5FEQX&05?
%ES9?pa(5hO&tiP:$@W!F87_e>LO#:NK+Drg$$S2@AG(`!pq*=31X]"U*G`n(D.>@%k^i=GpM;83g@uCBI]eIkC_5W\SDjF.eWmJk
%AmoC;P)]&Ta?56C";Vh/>@15DVaoKhirf@%7`\nQDkjOD_I\o]l3e,k<;[`8X>5\c"X5CplYup4<T$]CM?kmW/fet;be8h&j1mo,
%MH2d+Wh=A%H9OJe+'A&8Hr7d3aPOp2iLj^OSo[u]"I#d9LGr_WOBS?Nc&d@+-W4*!)^UqYaE*/W-8LYYGj,'qE5qRE)e%O+Sn/<6
%["(f=Q+K/0mcL64>j],];HKn1nWX`P:A=U(032oU^MGPnA]^o>E#_N4"T&;uU5XT%\98*4VW<Sm*hjR9Qd5fHji[[?1^'<mOI$cN
%,mPK,gr=u;X$ZSTUB9D%hd8Y7XZJ^AXGt^FQuIcfP*9s2J-G!Fj140I4*25@j>gSK#HjNs%d"n[`K&"p6P-^cf.k3W59g8d2d?:k
%\l`<>ZNYb?k((.#"&MfCSr5L50@g:K8-sX$-?b,IoNghsC?a_8G@]`1=Kb0,mpY),TMd*=!Hp_BP=R+QMSUCUKE7lqHoO@!Mr^g;
%6RE5IUighag"CUp"*-$09>'sX_$gML#oO)J9/\=/$,6!RHAYYBnl.t^-QdKNahm-pDim=&0iSX,"VB2['bZ,$UkhWTpl=)!m&R`^
%72EOt'mf;:N3hU"kA\n+]gDBWhN^jHK#k`-^5!1UOn>urA>rl.A6e)On$P:I_dX?[gcDC2r\0Em(D8%cINCEKWt/2ai\_A5GhiD%
%BDMpE=/[X*4(NG5CT8'7*O7H9-n]bWiYlbA7cKZ9>kXL+A.VA<N_B(Y1C-j/,q@j`AX3d:ikZqC,4N)S4K/fN&q#(8m4Ea7L3TV3
%CY[cRok]qGV(Bu2fOo4(OqF`SE-/'(CPaOl@lo('(cJOZ5UJ3rncn>3ei-)=XtP)DF2<2mmP[ZK",R,OgDP^&%n\77au]aR&$MW#
%og@@$IskC<p^d5t(mP\VU$LEe,q31\GBDpq1(]AqH1djF>m`p6!HD%)UMAt,YUkWD-K)^b(l7JXTEfnM6b9XI$299uOhF#\_n.ZC
%^B+%.7rhic<EtC,GtM%B'_J8$(]r%C&]U:',)YEteeKu!Ml1(jerBN%AGcZo;o-bt7YG@Apb26<7u>!XX.fdXkBYP9<T3Ngoe;F'
%6U+5BI7bbB:#CSMr2PLn;kc^X060RaihkHlB8E)A4?!SM1%]V1[jgUI[[b$-%>AZhA9;d!5dWk&7/1-li6)=ZJ)0YTMAI&MP)Pa1
%H6&[KXr0=:lo>XUlK$W[E_<5\4*r2l8Wo2i:e1jfLoYM??gX[:K=QGcqQ[Ho5p'#aKNiL?0tP=43&8a?i*s-=Ir#OLA,mYCG(gg3
%,-Ri%B9+:3]GZefmpHb73oRp6OGbs\B&$Sn;&PfJEFP9?pu='3.f?`ag"Bc(`%JS#d9(=)2TDeS4WBkV\)*3(,saf=-i62<bSV>L
%3i6^LDC_YV!45.C(of#KOt[:'r^+;#E9:rR7cS4#@WXa`YeXZ%Rb6?F.K?777hfkR-Vlh\dQ3H;GfdmgVdQeh:-:=I!USn'$Wn/f
%)<tTR\b(l/d9@3KgkDbh5UnWk&0E#*n<nK3ZIU@3iL#C<ieU6kB>=s$i<`+Na;K]+aB8EKW=(?k*pGmdU9P[;!BCJ4m_DF#AI2YD
%iB'?<:7gac9Nl$P+[sLD3Aoh%YhtV^$>3@^$!(;9&G@<XoRV7R]8;#:1uU%q,#]?.R(\boWm;OTrqR>BM'H#plP)pkRpX*,g.Qf'
%c6e*d3GHU@=<'g%'dD<%ciLX["B8>ns"_Rl,)W10EX24l1_i<&P-tY5:=mf1hA[ZgPX4_4ThM"nBsps5YU/4%(o3\F^8&+%0eT;)
%aLF%!YfOh(_U?uNUZHA#66ONEMif-%'9SsD+k"?+f&u]+j+65In8_!T8[4[MVF+Je5mmOK.CM#8:NA5Ie<JAsFZ[F4$&[C3C76;g
%%lR2*SK<uCdb#_Bg;Oe#0/Vl3W#*<'n8)2imhP3g0#Su%+cmISSO=s\8P`Ar%?j=CF_TY=(/O3Pc6!O:i05!#;%4QTQ1Yo<Z'>'m
%9>`!jVNtaB4f[e/mB,%XiP)WW.0NT=FM&T@iUC#A=!)Z;6>bEG13Qb[,(Tg![(5RK](jL\7IWdtA8i2^lE;<<_RQWR28gO+[rE%s
%02lKjVSm=cT8+SP8s*?JfMVNM]AD4u4[p]ga;;+N%7U@j,+o(#8?NY)LWiDimbH&Lk\YTa<"%kI%Rf_Xa^(I$!"lb*pfTl9b0!W"
%NC[L^*aYSs\6!Fc.iC#G4V\ME\r^p$l;Fn;^o'3-`/G(VGM(UuAp%o^4G6!/4d9rM+gF0@K,Q8[Eq(gt@ZbG*_d99u*5n6Xgq4Y9
%cCQR`lufUd2(#H^=@Pkc*?l<1.>Yd2onUYX,mY7UksNViONZ8O'D+H4?\Tk1q'Zh(eCGC+0+`XgY5>hqVWQa)5`N25"T\hRY92>1
%9OEJ9&<XL84>5Lnh.O1PA+)P`3Z<OQS9nc@==)jb]B\$#e,Y"lKMDrm:H!fa4mn/+=UJ?s@;acD;W[sbXn)OG63/"iVH@B`O;.']
%P*B/Ml=*od?C#^Ka!G3@K/juA.X`e)68,*f.hp[)i\N/?n1kiIC0lW-Q:(f+k-jr9[<p#I(;$;HXSQ(R*.Yr`R>QG9`QddE%g?)p
%@[i#g^RV_@T4;%lZmGuu*,Z2t=`:E-F_E^-VY7;tcJE8#ajeNKhEt5:+3?JP`[0<]`[;fd[r2>fAL^iG(W!OE/-EgG2Rj1%h>euH
%gI5<(-phgWP_JAY2\sHL*1DF</G&-PH\D6QXXnG8,9,;.l4'FSR_]3c%DJ+,lKr=_UX&&TR8Ka1][p)`/0:BB(Z$DMSEVXQUJ-E/
%[ka$F+*5-8[`/=C+:k\[/q:&[a80B<2!b[IFdY-maQbAQ+E_FYgQ#V`lAF!]e&[VCQfWe$#8>$i#$?7U2Mt&+0#06G&*U!PECn^E
%J^_\5)-h(G3fW1&(WTHPO=ensejk`J(gi8Th4+3)QKApGU#%W_./@uh%&*r9[S>L2pj0?-NXlcZbcF*Y2<,;@.pAqS-H!QA>ZAZ[
%^C;+o);SsGD"1Lp%bJpl'2Z:=_DR+n2+'Q?+o)PuXsoP9UgbF'41f)*ngK$<:OW0sih@Y*RH"'S`9ECI+\=P!!^Vr;*f+\h:cBq2
%J]F/oH#2l@0;'m,j=,O\/-a.-oVe".Wl`hr+CqJs#.'s+Xgn<,P[;@P-IY?);fc+.INK[I&@+LDT1R91L7#7XY2HSgqC:/-k,(+t
%"Wb&tp@>SoN&)JgCMVkOqZ=m+%PSZ^JLSu<a#:lqV'$WQM%3nR<,g;Cn\#f1b>Tj"81@JlKKd*Tj+aJaLK(uV2hQ=&O5LEtj1^ZW
%_OL0[,\ecsa/TIaU?OG,A6N/E>Nh8YF*e\l##/sTZRMXMPld&[Bc.'#9k]ZC+AE50RKE,+?0%]EmGVOQ$WAg*0Ko[f)N4sueQP^i
%@#D9t-@o"+39=iB.M_'q0O-=0Zrg"?dEIClo.MT8/i,fR2?_V%P10<8XTr?JYj@pe"0WJN(8,gg:M'*kC@e=JM9D:5^o.9-Xi8sn
%kDMB=Br[-n3;OLX4':#J[:<b)@p!gFe<A$'Y\9;tZ3,sM/ZO_s76fqZ!&0TW)5-et+bt43d]QMkn^%T+2?5j9.q+#@?&43/_^S'6
%=-8_tXu7`ZEq7C1E,rBrHDSY'GF?otJ\%]"9<M_uC_[7sS8(AeV!fNfBKE7m>V"64j0$Jsr&2TM.%-:dOL69bJ;IPA:68m6^mhEd
%i)Z"((#A4uV&Ht4=Ac<LI[R&7HuKJDVEs(NTNcCaOhM-H9<sb\.RIA=<IC]!"gG0!/V+)48)$ZN5*ff]_&G_D<A6^/D'jUPKD*Jp
%Xd;I>*S'Y?R7=Y/jot?L,jUJKEe6P+*ZQ@YC#O<XM<+'\-OHNo-Vc#N'MR6t6BFXJ<%kKoSqg\?3KPk8nAh,()"7jV(.9A)fKq?=
%2R%kX<'`<(<KfPl@jRssUU)k[*oQt&EK9&kDc:>-Y%kl$KMB$'o364e99f/FSAW>IBttX5)1(6JPk6Ho[F&_P0C%:U>sIZ<"V2Ps
%FUaoU$;n;\_a1h'r(f5'%).Z9G.\\uE[,ZOo$D@(6TbMJ_NtV]$.OnZD-Vkslnc%*$&K]\I(>qp(de<A(Ik3X0&la!@!BS;@GC!G
%JNZ)XklHQ4,r-%\j3`Vdc'#V/FE?/ednOZ<%B6/.\Hbp=?k>EQ*.m='(FA9\;C/pVV9\LGJ:3(:%0E5K()/G0#"E*GC82E3%tt^7
%'t.HlVU`n?R5U:6-cidH7CtVh4cZ;%J/'Df6CV@;[9t<m6BIe#mN0q^JMH"B)nuH`@NXhZoJP:K:s$dka*[u^5b^=S=3%:KX$oYC
%=K$8\3AVqae\Tue^1Zd7]rOgpl]"\]n-itCaN-i';$I[&b)!<_ic,.q%GK"m2%M[/eRb\HSk\(jS;choSU4P&IQb)@N'd-(G5.BG
%2(MU@!&0O2MpQ)057C-3[\dG'T%[5td]Bp_0uO;-0tpS?n#8"^/F4^%OA+sT=D\=oAg&#7TNtdcS4@ihbDE-m.*foEU9.ag;ZY.r
%FXheU+5jG!,D.#4o%t73dC<bHbFi+"WHQ`P^4>pACG@q7fVWQe4U5t/WUC$88rX@Ao[8;N)fC)WD]K@cbKa"@GeA:F8s'0_Y2ZZ8
%PnH?PnVM@7)8LJDda=J3jf.bMJ!J7([_ul6_m7H?[Oh.(ATKhSHsjdD0rd"Fe&+00#X^\94=rg[rg`o,?(QcX]ZG9:/f$fOkn[EY
%e3\]g-;/es_'QUM0.48q[SuB^n9:C-3*\*d0mZ9O]lLW"&e)%iN1H')!;%]sJ_535;!Hhl[eX'$(NQC=2H&W^5`6BpG0"iLFlqn"
%RTRHsY!L<@D\%NX4lFXKe3ODeZsWMV]"K5Z[T;)4'$eLh$.^nFm3neYW#n`D9HPg7["G0a-6LA'%^>dZ=/SRmiBYgJ^u5o"33p0"
%'3tNAM6$^4[,$rHBQCF5)OUXI'L7@C84gl6a"*8TV:H>X*.?4C8ak,6Bum<C>Ar[(,S-[2U&FO;A/;fi5\>*IGVcKeqsqB?'=ibV
%b]sI;:NVK08kdD]pm4f7M+Sj[gq43)JRmOi5`/gc+Vr`4iGL;?E>U!hljJohD$[/7k8jJKWB+Ea)!j=<Uffp=^9+<nK!?uq,]H$t
%K@=\@K-PsN%C"g_4RKaH1i_/!p^)r',a,L[*.+2"=i,f.g(f-K:_O4jKg-!f7)npUKN:)Uc&Q3u]Wi7V.QoNpq*B-,K+n;%EG$Z/
%NQ_8)N!AbI">bKB.l-gq(BSH2V`gHQ>MuF(&[a;\9XE'o],[P5Um"#d-/>sP9%9Y.,Y4q#4JhuZ=kkXG([s-s3059A]U4g7KAeIE
%XYBS2=3c9E,$m8Jj,+=gLE:J2=6l;d)RAVM<A]7/:7>G2?9a@9g]9!DSOdep_Pjq;OFG\E$JfJ24[fZf.Rk*Fhcd?0EX1F*eAO`1
%8B)0AE?Q8g`tsZqJ]d)452'Jo\i4Voaqou?lVQ2X)VgfN:I%O&1Zo0lUPk^dFTnm'0Jq]tA!p16%@S&`),=g0=so(/g-b3!_IC:I
%ckTqb./p,;_FY:C@n6!U"DPOd+&>C,]bJjOq-d7&=@(mcFi2UhOUi;G#eh48AT)@[cVS&oH0>(Z&3-FXWTuVNLE_4#W7kai:M'8(
%ap['kn8</*pR,VL:nT(L36o87#D;<\niBMHs3F('r.T(dF1lc8ht#rVG@)HPcNWlr:I[01cD'R5j^$a\J1)]i0(tTeK]GhQSBW2X
%U_/Ml_%PCsTB%go.p8748'$B0*k2n=%R%pb5A-*j]Ou7E8NEr3g;d7=Mni"&F:U:+]$D]*7G9"01XLcH%a"D`2oBndYc0Pdj13u6
%Pp'*$LfT^F-l0`\j<5]&)*_AqfmTQHTp>`),8NdCd>g<i*(;nI3>qU&E[`rXQ\Q=ogH5QUa*CE_>dC!F#-\7+Vg&J9]Q._]!eOLC
%#]HJp=Dq9fY*IdJ452Z0(<P8>Wb^HgGWl_Gg[&e'$usEP>C!69U!=FOd%K",*<e%*;oE9C=gqG-eg3TgZ7]TV$Pgrtb3STg$ND)R
%0qT^T9O;*,Hd<(gdnS&^W(VM#a+6cND+D3NHV!-[@J7-J(R;hnno;\r)nSlEfF5@1/`[TX>$aLUR@u"M?9Lj$5`4/<2nJJCMBkr)
%'?d1:Ktk=Xj#kH:)uB[u#Ak!CV%Sb>9DY=<RdkTMEc\Mf")G`?:N.#-O"[=Z0c^VI9N6NJWO,PKm_QlE'Ws;1U2b\/hD>a`XVA"7
%79L,OWmaIp]f#=tisi:EFt=A^d:e+-ikUEi7^3tq-mh/;G43"&LfM+8C%7+@EK:=hdSWZIEV!AV:7^Pc]tbSH65?XcZb-=go8^&e
%'IK39Z*uHN0ghIA'hOR($II9K!J]3#5B6uH7$4%s]B+QEJiM3@(ln_?'o'GT$$JXK+QRH;qteL!5nkL"&#j:t6lOY*cq7FtBPQ#Z
%Z;@.sEn9X&f4gn30N@B'b]fro)60#.VfALD[?;*dT#n&/l1kXX5g"8sqo15&#Him=IMCAt#YW+(pl7MH&3fmNquu*IX(4f2AD0pT
%8o37UY_u_]7p)?4I]$[RPgP^JL;bTX55?1TK[LTES`B>R*fir,a5Nr,!.tH+Thf#fkUjB]+l(0*A^c>tW@9q2eR]'$A9Kd[:%r*k
%i`%4`\&nk'3idI&AIN`A86b<rL4J3[Ap86`cG'H\:`Hedp+nbLj#Ms!$f)[5!sN;jT@oUTJGP_?b]/?A%oi=81[`Zc!^3+C'&<os
%MQ$'7/dUt?kcL7-FrG7k9",?o\=lPO"_/ASD:R_$P3n[=+j?_1\_[arnn%N,cWGbo:?jN[L1)MAEXUI+!SuS=$8U&ZameT5I);!a
%WlmTlP9&uIW"`MGbqn*qRNJ1/AJ,2p**fSZ$&k`%:#;DY^pV6/"#V.]97!UQ'c8l!QEkW2VEhY]o!.pmkW1T8FYZD46]l/X=kV<K
%?#5mg/QAV']Q`iobqu5FWHST7P(bqDF/=I]F#OJQkplmOm?Qu5$GC2RQkm"rq+!@uJ1t#ms7N+(4:J9]Ynl+Fe,.tG[>kUcReBWC
%U^/-&6'52?AcRV>etq(/YtIG%Ta\3n(c<pVi#(S\._,iWT%h4hP).%+chS^6m.d?bZ;c%:7'D&.00,HXa%2mTSRV;)QuGu=V+J#X
%A@kh>oSf,CZ-Rq^$0PR/V*-"i$#Sb7-(s8?\kZ`'b>oU@(KWIr"_f_j%MB\fj/A3KfR9+<#W]n4,&&U71J@??ND2*<-M^d!Rb:>P
%8IH[T>#b+U_&YoCG%S?jMaY*Y=Kn8c1BTs<(Qc!85<EA>)fGK*dU$4!<Cg!S2b6^XK#M&u/6-9mp*N8Y[pI.'!\$Ja>_@105\NYT
%YY.pl#??#jP7*W;0_%1-c_j;I7)oYUY[H/jg*%mp>&u`7^u&0t?e&q1.g#=L'V&L#6*V=)M?71Q52Pts5Y\IX0Ik5?df*%\[%%lO
%7*<'K'`U?WBc$)WVnl5IVND5)\5/]';gM;H8\'7`Lu9okU_I]Z^Ro'#*$t*lq0h,1@$?b.aEcT-[2Vo14:PcX!M.lrLhKd\pqc2R
%!=M(c5.n[pQO_<Da2C@u@!AJ#1=0,/DRia:K+b?&XHg$>LP(jJVCV;8h91bSA)1crF2=Db1?ft:eH/SD,d1uNLd![bWY*ZkXE1YB
%%rg0:VFYJdYKdRA_=e<TA7U&&VXT`"I[$lTomYG9m?kTZIT1S0kAE4J3(V<8>A4jWU4*jY[kpjQ^n_C-0iW!_?LC`8-92M/jq^c-
%8=Q@+%23HH=?Ap&Ui!RMcJ)KmAm4`L8?W#q(_*rKg(pt5e+P5n(,;Ru%A>9n@U(XJK3%:j9jb)0K!UM<AeEd)OHP3pqVZ^26T>9H
%e"1"qXlAJ(<Rp*)R,9H;&'`(4p8kh4#<rm!/6VbLJqYam$.:-q@UM,$OEq82\8oiU1(gj!5qK3Ob-o7dS?8/B8B)%[``7ojjHk4m
%^g*[G"?XL%9T90RMu^53)eO(9*uLX5ldA[Q=cpOo;Uld%G=%igK/aC^!X7N"9m)rO[6\3DRp/"r0?cCR[a\dE,t>fgql3XLrO@dW
%SF$lW/7V&gMs(e+#W@gt\7t0`I5&Su6XlF<,DjCbRnLOWFkp.?J"6=:N7Do/c!qh4,?oE?i-"9r'V0!#(FJZo)8aqR9kE);,%qs,
%<ItS\d;a!Hp=92k3)\3j(24P=8ooS_!ib6S^"&=19U(Z*JCb.3\8aEO'puRr;-,`?RJIP@CmJeL9<tuO15'lPTr0[EC<\)\q'\/N
%0b>+ND#X4Bg,AM%f=f;Oo4MIaa`c^_;l:,.:R;:f`L=o&0^(ECG%tX-lE1?GV7^jmnMd"iC@4Zt:<hl/VB1iQ@P@4,*A21-qMM?\
%J"'\f9cK<uJhAh)*'[OJAiKem7`ncV'F_Lm,$-kl/qRptC&Q#$6A(QgU/In=$WZ4^]:dR.75^JI-;%]9h--+`a?2B?.ml8;6f[,\
%EC!Q=H>PaTN\cdFdh*U0/)=>G$u2g5eeS!_.#:^4/ur8gF=dnQM40PR2n*:nSeq#$4H'J1&X!5,,6[e&9nYa+]Sk^ThN:;I4+LLP
%q&:JbQ"_8shd!#,B#Iu=_j0O':^+(,Cq+7S/&r4%1m&oV\mgK#.#>BCe-h5!9L4lafP8c2Ba2F_N9\&GA'G$X`X*IEY7rNkAU,N;
%'2M\-@hUX]]]<^lMnR)')]0=K:iXp>A3#.f5`G#I#%I7?M.BpXp4^\C+H.^[@RW"bgd1.bOdeWB&u5NloR>u30eX[uJ!1'9dQ>Ei
%`3"=faWrS38_-BXZJ.VY@+urifW,sYA4!t$;k9VC@VA7cj`4G^Ne'n($HC+ikX^D^8p7MN@Z5-"VVO0=0C_\>lRd%0De;lN8-]2W
%mf_n/WNZJfTKK)4Ruu+j+*,OoGm1*WJ3jue@qDuDL!F91AHRYr=j,(f*;iBb@?RTApUAlK<H3'ho"KjZ@[6E8!pBa(<gKr405_YY
%*Tl>Fo\9TIX(=!tiscf-mF^FSAd*ebC:kTbms[$YdTiQWMTU0(1lRa1Aqj]7(7&A:FrmK5J8LS>$1Ln#R_>%G)g3B_mVt$HqZWLm
%DS3fZFU8uqeaA71(C#hM%Vo[L'T@Z-=DX&eb6#Z\;Xh_#XY&YHSA[5S6[6;kFFP^gPmSY7$8#0Aq5#_JBJXLZQX>'hL-f4OXH\KS
%/iDE(fGQO1[Q:*/r@0Me.63;qR4u5J3&@e;/'UiZP9WJcW$UNHbh#j^&^)BU)9Z:Ko;77Nk#m$3XgcNQE/"eOKeXhVRlN;]mU\`i
%YGg($pQ3XbH%'GVPK8J=/_`Zfjp!rNfjOAKWY:N-,a05f>'+2HpQEsY,T\8AqG`I=X2sEOYX1C$h927tCk9=WI[$=N<4W;*o_YGZ
%6/6(;i"UMXB(@HGh9i0V4""\KKh<h*(H$un*9^*'$\<Tp]n"+88+%,Ek`RAmEE;>h%2T.$ETHNO'8)o;0?L:g)+q+#Gsul<]#Ac<
%=JjHJ#]5r`.#28;U.&#to<r=Ck^`<<]dr=@0mf+`/mE^HY`$"K$dRmPT(d,,$^>5\>YF5C'SahS[489ZP;c3Wku@/<Z7g%7L]\JA
%Tc2r9+n[+*Bo-Ddq0;rc]1lWtHb@?%,_^5T-;YgMLYbjPg>GF1D).Hm6HcM*bVRobWFRV8RC70b<)-l8NklJd6NB?%6C2sU9858r
%Tu&5Q0$<-d;*/*KiQEs/*_,X:&Ne3?A^*QNT2AbZ)%5"BP15aq\>/q:`_+,u/ht_C4<=P3YE7!#<#@FElUGW?)5WP#f/J>aZHb)T
%A+FM;Vf[[$b"5WrK1n)\ARj(E'C!aKR4_TL;*q.A3SR^PCGArV4D2i*,"R,R?32!gPE<^"-QpYa0h9A%Suo^f5t:AWEE085h?bSf
%l:)bc?Y2B+EJd;m`Q9PX,\\o5[!76Z]h0%:VHAiiV@*CZI[tMK"hFai3*qY3Jm*poM*[1gDPiD>!Gu+0BmR;ce-iS+a3:MS0/lG8
%KjTk134N=&)!oT<2PT$a@SJpND8$l@`QT:FZg#H[GWuM'9J7*JC5?Df;CsF&(.apicXpBW$FV'9_E4`$l@e$c2#'_U^_EP4kL/"(
%,h_+DX2pd`m#a4#-CfIP1DuZ_]Qlmjm@_8e4"m6$s*o5;`/H*LX<T%E2r2q/)RiEPLtp0^;[5*S=2N=K-6eml8YqlMOW`09V2\+T
%!U?!E(@PM;BV_@qh^MGADDA"7bY78tAj%&B7g!5H-3s#M/k>sb6scS2'&*"M5&P)Z7I)OoU6c?d`jtuh)a5tfRNbCG\g2'^Bp;lZ
%dTQq9R_@HrCU[9Q?2%^3gnrFn<9Dkhr^WkEcaWrnKQE\hYFd1Kb.\2Q;N[bU/@TPp$,`S%jTu(_SY[a.VlSWMK6&o1Q25P!9EF<I
%7gMfp'8^l9Y^:#n?Po/<ghA.jRAmIB[9.e&^$k)p>1<,c9N*bhpR+$q8VoFUbW/u#6)cLTG?=G_0jc+MQ$)90T(LGfB:_U1Pd/))
%W&@AO1Lgq1Z'6HmS-)^a`n=RW`\-@hSfO28:.jC(]57XV']N3nOJ]nC3sF\WRL_;n'6nbq*]!OR1792D&<l?-,/ut-iFrUoc=Bdl
%-8ir3nqCmOSMrdnFt@&9A$,M^>-i3kWV]kX$S'gR)PIhC`W[[2AdF>j9b)gg4%.;O_Oa-P%^=2:"mtY$f2Y[cJ[@a'Zf]`?5TGr5
%cY7I)I'"7;5;S,D*DBgCA!^8:ei]$q\BC5BZIB+k'E&Cgj#3Za@`P@2C1#gDh_I,G5FXA]OFaIaE`I%7fs+JF1%-RAAb<6%!!e^X
%V?gh9Dokle]4AG[Enp(dH1Gf0D0IRD$;_Ae.!Me*\Yl"8iM\Q@E5:gA/6=5H9)7J5ZrZ1@-k.M5a:d/G>QMu'%=,!,O+2F0JJh(W
%?DI+iS\eX&*,I(Gi8``k7]!W_h'<bbg<P;ZX;>k\kAn%5[`)uf^=eZaN6defJ6IF0o+l"+)*I1.jQe[7dV-M2G>@$Eh^iC,OO1W-
%5T#5Ll`0p0X4#K%Q)Vt7PGfa*ZSr&4]=&FfXf\PgV<',%.PSJFF-`#N,ILId]^2$/PA3=sFY-Scd]74'12tE[)^/D_5ff8A,c31=
%Nbaq<-06"+8c=\+V,GM%c-N;qp/jut<4uiWX;2[F;1l&^09a`IM%SRJT6Y^pl;<31X7p(lW2)p?VeHHbiX?l`VB4?Me2g9n.oqbX
%Gh'FYCK\CBZ'b[C+gPJ3R&2A*dE=R0KJP'6puPG+$l1/XHWtJ#OZ+6:@hW'h^J]hYmMI^?W>H5d3A2UH:-rf!VtC?D.L@Z?X\6X\
%R1gg`]^0W5Gur&k87n4/>Hrtc!0`SKp8,B2jpj"BoLmR[B5!%fe7Ah8^/!Kh(R<^5?;KFbFXe(.20=X)80oZ_1K^Dd5D22G&hig/
%;:DFRX]99XZSiN@)<Tp6OaB8Ocj,<2Jp7Wd,VeDJ4#A<j]_^P_<er;J"qX`V!,b;*ZW1UjV<Xj,I_&L"+^u;U<6s+)grNE^=3!-c
%K3_*\Ek72NE?=Q?QYpN;RO"`KR0]9<1SH@ihp@8!P0VQ!]EBMc<k<?NW(X]TX./fu.*Holp1?h`MDeH/XP$WIS$=bS6bsJR#5&-c
%_JRA"hk]:'`%Ts$@ZL6-=`8q;](p]rCKNO%"BAfN0i3>YP>P$Dl`=V`#^tN<@f)Q8,d"25Q+d_4];2[ubSWo48*^d<%"U!*&]$A2
%n"]DHhGbu;`/;76\YSP:i5%;.."Y34D,GUV]#qD)Ds@0(WF)$uIO`X1M@$_Ae<[.]%G%s.bXe2H+;G3q-"<:RPUqGRZ_+=>!Vi.,
%0^qTtb;1C5QDFebA;djab.:ssP>nRC/)0'oX>bBY).u=&-At;!@EUi7c?C;VVb7Cu9oYKL(11-aR1&1P4J)I_/T"'\)OBr@=k^2]
%.7dqlQ4f-:I[KoIf[l^RYtjqE!Y=Qj93\7p'7=`a;_'rEWu+hS?5?52Q%OgmMKsaK4/i07dg:OLTA4f"DDU_&:T!$$raB_d<qg*p
%#j(Rj?e&l>V$sgGEA9A3F\"'[Ib@c@'^]!YNNVpio+G!!9JUJ,o;iOD?It,(24<E$**MQ*b["/b]esqM=d]Tt2M<#GG*JCG)$A!j
%S?+6ccS/.0L5\d3S7-MQNSQ5B.Ap^5iW+&ShrSp9)q66GDb.9sb4_%5jl+>AQ%KLa>@6]EJ0!/IaS71<BGWmGME`N!S:86YfesJ>
%$pHmiC>BGAdZlJ^GLHWsAh(cH7fRj^hg.p3kGF[_VHh;g%$er#Z_A9;hu2#,BKJ."1IAYJl@VBU`5>j+jSXUk10I)\^!ln*iKm<s
%']qT]B%P1pR0p3q%ItoFi$;ePlZj2,StY3or7T4;l&VgCP>]N<EBHendq7%+1n?R;30/HTFQ6u6H.*LQ"d[)@7n4C*^?SI#)Lu.`
%\4IFQifi/e))g)NhNe3sKOiki='V[:2F4XW?lS9'e]/^$<NB[YU$2L<Kfli(/_0HMSmEbf7H^PbH)nSOgLQtL@NTa<$m3<nSP0?L
%JP@**h8-]G-KuS>5*2\4nMRi0]kN:2K!TWt,c0Kk+fW.#4/\$bkIVFN8<^L`=ZFLgB2luMKQa4LG/],L4a0^)H)hEF#<QFHU?lF7
%J#iIFk:18XnHn-[qAN5f27V>,RqRZPk@.`Ko_jdsmjuS+XigI'H#JeUPa9-";!ZWsW$)S/Vg>%t'92W60Qr8OJjJ4>FH?eHkUeaX
%b@lsGM\32W_%>=MG6J#mP7FQcL6R]ukm(t(U6pajH?a&*+*tF9SIiP@GOIl+G4t3+:qe#uON;j(QY=WU6!rcciu(st;5;MLC,bVR
%E:rB:(T=MY-V@"V@(m$61Fo$Xkp>[._pt#/RRL*[XebhbKr[7fJM5L-)Q\KV0S1`P3<m#.c]ro)b^#8ch01IA+rdSScoZ->[NtGH
%:]MnM_5LK51+@&3\4+_]h_%1h&!&*/&UB=mr5>0:=3:>Yn[I\TII5tu7umCjHcc:HNZ;?UcQe3]B$@W1f`HHe';f4cU<j<bS`uBm
%.!jPiAA1%cF'`AO^kBNC3mQhV[:iu$j[A>Ze5Tq5.@1$GDhHR4.mfSD\^5USWGC;6EJbU@#,oIPOJ7+cXUS0BpH2)rEfPSii(<6"
%9C)6RQC40W\seq&:11<4's!TjBe!&-4b4D1SL:Z;A)[2Kh_&Sm_U=[FW-G<N2=n;<gE%uflHL6u:Ijd'/V+IARIhgTV>`E)XN7_F
%(@[-;BOMOeI">B</C(a>6Q%402-hT0i_"P/ZL_B4a-t4?biMir-C<VtK%"]'D*r"mrYqD,HsG(Z>ATDmMm"X@RfN*b]:t=DdURcj
%=;m`>[ED=6SQSl8*N3Td\*=.=c2RjAB&A#&6`.5:G3>Nm\rKGIbOZ^15(ki\k+as-'[q>:%s!6PCbDZ`IHaKKpUW8kBPX&(F@UN3
%1)E[BZdA[$J?!ut:+3$EK\iUqHi1aTIFW-hH0*3[X(ST2Zb$Zdh!(+kFNs@GN7R6DUHso9IT`0'SMp0tQJ-3p]'Gk7bEC5+'MqX6
%c4`gq@L*cr=gSQORpZ_HCmC>Mp%9-pe<b5PXZ8S:dIf44jRUDgCSO>q5IdTjTDt6:-VQk;iD(Bi@f4**pOI=I"$0Vo'N[FLcY?OD
%[Jb[tC:Hl'J7%O#MS`Y>-7[n9gnVK:=ZKg[r/bAq9W@o%XL*5:3I+%g/bF$KREFAaRdD0adA)IK;7G(ShkMqcX*X&Xe-!t-s.b?r
%[%F,-_/rG0YBTLYd[gV.@X4^H7'Et1iDt$H5C0h0G7U<9HY0[HoniAU^![t(SG,fYrXQMd\=l%nSCjd0aqMJ:^4kDCdDJ,9cV]/o
%m8:rJ$6Pb['>;hcA_em[p?:HVh*$/F\Sks9T?_ksB_a$55WSH*5C0h0G7QX>7fndks"5csoLaHWhMh8eb25MN3U3Ni*kF;qdZa!;
%BVbod(6j':O"1Q#K3LA!Ae4Y"mbspT%jcudbdagg[l/NTc8<qh'kIR'Q,[S4E0'E.2XOT>-eJ'jE2g*#D3'"9q<3>&E0%GKeDEN<
%:X6^>d=.fkg3]\ZHm8,E\D)KSjTDQ\`@&f(oLaCiRK96JdJ+bGHFTZ]msEPYj,%(kn+4s,mbo5SkGY"sj*)?g]=(m4g)-k8^q/8>
%I9]Vp/[K)<GAmrXp)eb@_a(>fl/5NS'2OSC>Nk+)7V/uUSF,dLh0Nith!1a'&R2RWD3)01FS*4MhkTQYn^H\20qJ\L@q/OZh=>N<
%@9A9k,Z?@hT43LZc79J`,EZno\N5.;is7/ZNkN,!htU'\#5LCS8JUcJp@Z6H\DZV@Z9H?RZXp@OW./*LZbLS!^m`N$#kRfJNo((A
%Iq6=IdWjT,O!7F"E1=E1p\%qh!!C^MH<"Ck@Ld>NKJX#iSe_%)3rU!$?cCjbiI-7W;^B?%Z3OEDKaV.]s/RtlJZe)gU;?iEj:QqX
%?Y+7mW[SP<7_o^UJ>/PT",r#Z:]o'Wh4GjsEdAN/+7?q#,C#/8)LTSg#<BXINEWHI$..1h'+fm_bJXCf\0VL!!fSip6hVY#7=8NO
%l<A1'artPXE%e@@cWO`6OKGrOd>BJ2pgiK!!YelOUboiKknbVkh^mdEDkF@UU\OW5VDR_p_"]\IX(EVilCo!@!U"!l;lVR$GLKI*
%8Mir?Ni228Ud_ZsU.ppb;lpu>/&NOj1o4B:Pu[itUdFc;%aE-U1h?ja=;BR_Udk$4](K[Xb#M2p!*PuCCgMb'#/nZ@*7n2NJ/Vsp
%g:G.BauV)Ig4l:#e_c*:L6W,IkGH&i\nFo.\ttlbHo$T@]p*gfL??0TIHQl@3r/5i@tN"PeFF<QKRq,e70X#Yc<oMdmSZqa4>6fY
%,"C'M7Uo*G)H`lS9l7=ERfV@mNd3.CiaLU_n7Q1nH_^c/GQ\"H01)>uO6m[:jtMQ<X1rC*6NbZ!]ocGLUK<3ZP)i47M#.=hWI+gu
%_P)T?1]5YbQNjgD7Dn-^)JciPVJl&lT:G]-+RLCg=^Y[*U6%]S;TA<t2>k9fp\m=,;`a29%q>*IL/T9&<DgXV#b>P9pt^e;m41hj
%G:l=LG6%3PnSkJi=4#*USo&V3&_3?d/6S[V5cSt%<_!39%F)j<h',mT)+9WRV9\2Jb08"m&h2&dArSP=#8)XmBJqIfh"_n;12S!k
%ci+!p/4J]8Mk*A/f/qZSb")R#ccQk=J7(4E=i2>Oo_/s_c'/.@Y(#f7s-)4b!CdWt"H9EG./>T>r6:QJTo7t0"4EV(-h<ZI#CW+H
%33RHj'q4HnIaL0V[MN*A;$M^;4<2D!cic?X3bT@E2M4U,C]Jrbot34D1g,lF8V$&o-'qW)KjMbr\VeFT?k)FV+:J6+<5uGhjCV-a
%8#ONiIg6X(--qL'nFSi!oFMN-k%p(%(q:_i"]/]'PXtgL\IdUKigWI;:XH#(f&(]647!&SDZuaOWGo:f(0OX;pK-gLbRIq>i7\Vg
%,:f.1#Y,[r--`m'.e+-P2W_[J1HE45XphpuF:fH#)Loh%>_%nk!$*i`-'81of<:WPV["<1a1Ofk7`ME99/P^+#3>#7^uf%W!BHHJ
%O/d.:(($8dR.5/WoUUF4hS,kK>k"<FV!5e[nfKfkpi_bcHYN.ROR.>kqTO$,fZ'j?GAR#PbnM`t5P!g;+96-sklnP2ecD?R#%VW_
%7;(FT1P/-95]Ej=Q61"KTokoYhN9RFB5h)X9$nS:d(L'"!G0N@EBAMHR&Y5VFC[l!Fl+;pYf@MQ+Zq$n6lH<-YiT/O:!Xle<A15$
%gPd*HQn6Vn]E@4)HnifCYs[k+5UDMI7b61a9Y!)tp^&T:DOeL8Ldegb46;INGk<Ik]DZ"'_!DV#OY6i6lI+PpjV8rW=tWq1N0N4C
%U`>RBiF>3TZU7amND.pPd2F6b.O`1P(f1q0?`^'4/U(V%2Y)Z%,[n)RSf=aS4Xg]af>,I'a^=;%)5cQ_)G-%I]]S%5A>hah2K-ck
%<1uPi]rN@c4uM0W:Q,#:Id5h.e47P]6#H^659['5O@<D_)57(IFAW!Xf2olr!\*8j#Dem$T*JmJM.T[Y9sp.Y6_2hBbun-X:tP#;
%_=*H0'0UEYfi/sNLX;fO:RF)Y>4#3h!EIh(_.k2^B4c3TTC1?2aq^-)9XXttQ>S>m&m^]^5cOWCH&sf=I9>XJ$hBdTgE/Z(#YY6:
%gl*)85+>pIQLNoF3[UDb@2^@,9,!<r9ME#&1^?%Vn?X"\%?qK.UkpE65lj;6+ijHdl\b12UL.RRA:+dBDsOY^oeD9Qn_G0G95]9q
%58FEDlrEd&<&4%$_nu+TFRE0g(gr<ZcOOaPISuS9Nf;[-K_3Yo=>-S"TS7B$p_JW'j*qH=X@:A;Eb$#L'Z3WNKXk7*s#rq91^@ot
%aU$:Xam[UU/&/H0a>l1c8@W+%C61fcMh(*%E`_e47`@G*LHq+4i:pfe>QLb+p?BX$:6GcjPnFuaoRe:0cg+FIc/eW=_P49Z+SC?.
%mgV9"4&P'A^l+-%k"LZ=#6>Cm4j4'6cU?>QA;@hXUJTiBINKXF46IWG=V7/L9t8D7MB;R+6ANmXMqO>&!rV@.I_rE$B)u"F6Y>g3
%p8^VT3tJ\6PMbod.`qu1$l:&K+!Qp]:BDqdon[Ds`g5TK<7Ms*nsXG_TWLu;"FR\5Ao0rnUa--)lSKe@6+O,,B@.FI\V^^_.$P^q
%?H=t7JMj?Bgd:T-^Qd[tX-ub1D^ZjQ_HPte68J'OV4";Uip&dN^p&qmMZGOujQdHX]+=`kW9BqMWk>=IOr":V";]stVT$h?CI?ZA
%poZmp:LLuec7#O1XA):lM^u\JgOd"0iftI!S8n+Ka:$>3;Y<Di<!>EOM`VY]_.5fUO7ZtAH`@EY_gGSGc4j;Z;fp5@6/Fa6@1j[!
%oQGmmQ<GE(jD$0Aq=.bi.R@5(PDK_SLBa"0I<)>]MmhIVr(MH/O5HF<r/hhgo/INS4Sb8YTLCXF7:'.7>CQ*-CDBnc=BIHG'-7!H
%YWP4cSZK;97*U1(R$29^#8EgaBe&2<ngOc`Hc7gYX?R%?Z$%^!Y=OBOa=XN2/UHPF6=7$l_6l0m=HHK_3sC!VTGV<_O0`2]%*g,O
%'YA3;QLbhs!_b7s$hQV#>+njTn,*l%*7?Rs/E2_dq"Kp9D(5I4I=9*s%onBDl^Q)+LK["*/5sr<]l6t@:oRbNDu-=^^sotqVteB\
%&;3g8N+K&,s)ga084Nash]DjZ?jjkF_;X_]iVGG6$ZLQ[BH5PCo3@_F!/WR-!S&E+GGb6/;H#lTKC4>`.Q_8h'*E'M7H]prmNe>]
%A-`["_Q&9-X)T#++PHmSM(0rdQWJS7bl[n&NK<*eC3lfANcZOfk_PXUe!dSXTpDC+3`imSDp#+M9,(Em#p,nTU;@DTWi!"A`QVU.
%9:UqD4dqLeCDKUYRNVn9MJXj0,'%@*%==&b2DnEu1h8i=p;85l2Qiii!5UH\m3PecQ-$Mt,,dFVq:99>CWNbk+'3Ti!iopZ[DZF>
%TQ65.iq@\$_]QP^mj$>OYPe:/qF"m8<,1:CiQP+dI1t<\Lbj^T<\MI*)\c/U)MYK9m%]^5l<RX7DHpt84RpP]Eb%5tBl9>lMfq?L
%:89u[qOqa>Dh,(P<6Y]0HrieIfU&-^3*Cd5c4CFW^717q^aFtGa7?Z$o"e#hbYfOa8"WLK%jRV"?'OuZcj3]U5E74=)ClXLm*/7t
%<7Sds=iJ^3hJ#bZ8M^cGa(_n9SKaf\UV33ldGF#FLn+BnOr5u:P/7B*k47l$M9a?WC/cXq9Ijdf>#RId+P*$DS!S1dJdU4(]*p]]
%k\?O89=fR['!KL&f31,.9nOZ1D2G+5hr0JQA$9k'WnY>UEi"(<PQYMcS9?nq!Z75o1[T34s2ccc^s`AaGC%u:C?g`Onm7J&Zr0Ls
%(0PMt8NE-kjP-BkOQrSZ/!f.e@eu\IVfjt%Y#_RNi\]ULI3nQ/,qah^YCoe3Ur@&/@i>Z[-bH<"A'CiJ"H9F5(9'mkHLJ]!TbJFg
%V]qa4bYS0L'fF"Q=4e;A@??aUr&k0P5Z*Ql.'+ID6&&<=ius>d$K%rD-_,:;_HN;S7sd6c8WDG@g+d]uL7r:UC#Ll-r30L6mL=]>
%('Be+1>^kt%B$qjc4%W?.FNc:#rT5;H]HV-7=)"4CQ9MhlK_Q7N9n9F!>MKUI^/W]dVn^M$&Q0jRUb.lq03<F!K^fS#?klRJm0J5
%7qZp<K*pj]U!>Z&SVVSAJ5ji^-6;@g?e4_]dp\#h-2Cro-ZqTg/ZC?1:J'Xea]Pk5iBhGm5[DB6*%r"_r$o]E>$I@eC7)),lLL+2
%;BUimoD2mHJ!G\@:>]Dnp8r-Za,)X`6%`d;iIOI1$tHLN*8WC:'^0Q>XcA$FW3O-8&eqFI0,-@J8WAe:oZg5IP*\o_WaP>):bFT(
%kFldjM3r$($&saMOl65MN1]XG6Pgc>E.Hs'KrMCoi\dZHoh/p6M@9kdp"Qu=RAs%Lig#WUI.g\$Hh:<I>]I&h(9qokTe2DKLV-Da
%6U8p.hkCYsBa1--pbN7hf`C$7>'$96ls5@l%'>EL;bEND7.^OnmHJ#6>-tHN8\nTT%$9BIppWLL:eKbDq$t/4H31ZGr0p^aDft&p
%4B$Toa0&$Rmtg+ua"tP%Ob,L_f('ds'9-5^7LC52%0lF'(j$Blq7LD12!#QH-d-DnPAR<&q&d?h6F0*A%E>MDZ`SNCi]qh]cL&gd
%Au;BNZe92<kWn6!]/uQOPG$q&!l:cgV**,4r?.[ieZMA25\^CkAYk>b-du@O;Gsm&+suojH!\E2*I".PO?25I]a*Z_e3^rnh)ls7
%>^^Rd/U&.7$aA!qLnmmM*p6.e=.cU^CN]`CDMJnKfSg$#(6A1X,jcA<,ij$/RZ8@O3H]K-FZ\U&LpeD`#1ot/Ws1]Q@qmc`I^4Jd
%M[`0W]8!*^.&Rs[AgPD]^J];RJ-H8]s'$lb'a!aK>Z*RZROs*n96.@n5<A0"UX\%RrI'*BUAU%aG/5.o=gRpn5i;KedNSE/f3OfY
%$l'a:rPm%Qb07#Tl//#RoPbY<kX7_.@gYKj;VdB7iIDs1^Km8#6k8[r9RiB;(Ol(6%/D^'1LtiRQtP2lH-QU#mXng.*gK^hcQ0sQ
%TnZ3D'9('i<KV/sYsibopXu_KNr&/<5*J(u)Gmi"]SL,;NX&Kej?WaXKKmi8"o,4tFI\6acU/9VNSTD&PG>!K-`8E"i`p9MKOA=>
%P*BHbSJ)ZgFEr,sTKG$*LNt/hi.<pu8R5W?o?!CV.eAH#]#@B9-$VS:n:(2@HFlM:lY/.#(1B,d0qln(M.nL@Y+Q5:/E:u3]f&u+
%`]@[AN3aR(lgn>r0E*Q1a;YC(_IWmq$oqlc;#7r0iXZ`Hn"\C%$G6%Tp$$'KWd8-E45#!s93=tG$8AtL'jJD<q4r.3\O'jR2tR;G
%+=u^J?KIp`A'%,Q5kU<Taa/K&M!l(=CeH\?bKPEWSArhA5";UL^96<<dei,Xkgfj<aRC\hBsR5*0osOM-3#2F_qf?7jV\.'d>[>C
%`ra/fd6s=o#Sj)Q$N/"p*jQ!NeW(s2/EBY??tdkZpj&=\O'!;Z6oFEsk+R00?U#gXY?8**<A#Kiilu!8!CajP`L<6mjY;VrJPieQ
%aqu^_akWPVbOM9DK=mZrIOHD4^F\uuZeBd(V3_==9P!:/qDt`#OXEC/o+AIc]DMFmnkc;1k(0tY<0k["Ca6e#bk[S46'e@AmBCrd
%lG:_EL-aD$S(b,F'`EZcY7jQG)RVn&p.MX:h6bc[\?aKI[!ltb3Rg(e(fugnFnM/8LV>TK"aE0%V4U<N/')ZQLj`T>Q*hBY`amr?
%3#d!OSug\3W_1QH'tmZ!Dp?^`Clt^Bhj1&\:/ns4\*\<Is5qf%:BZ4<5W!2b=l4E`Hb!g0R6?uN8!L9c7a&oJ+l0K7m.$aFq*IA?
%QV8Lhc0Phi0XHiarh_>h7B^2+0+JY"T;V@7;j0"8p3t)^H!aVpb61)?lJAZon$9V]EQU_K7YcLrHQt"5fjj@A?qaR3C4mK&>`9&P
%(<$bUlfOuc:7F^0KMCP++H\V@Q"c*3DeA^HV8t=FA%g&WotgeR2JgNERg5%;ka;Z``)rEk^l&N_F;O0X-@e<tcV+=*V..VD9Yfu,
%rcQiF0AU*"\P%4[6Xf5J$-7RMj@n'`LhF(tnhBClp5G"VP34td3!HP!haM`"2fj61r$9%IA&8G0arM--:@dd-m>9PBDonWdPr%P"
%+k+d[O?Ut5eSq9)DCm3@qj"f-BO#5:dn`JB@7J+\3*FI*5\W(RMBY-hUWLAi1Fm`tTfGuPJ1=dJ1/oMK?:D_Q5[WYOcaH6$!)/-[
%;*[^0"6L_Z/B?bA%FA?b5,PG(;Pc37%T$^#m'R2_Yn]]qF2\X=<qhJ(1:6:\Z&/-GlQ\JDBYN`>Foi('CV7%g%MW-T`+RT)'Kcp]
%b!7F#=TIPe%4Xd]IH0N<.oZu7@^bpYJ]X@$U/]ElG4[J\.)oEYToLe3q&G48qoeAn5MhsajqmJ&>h`6bfkba+"+=G$iuY_F*H(^:
%mYh\!:33!B,L2aj:<Q4"0=1(9H(rn$4lYHs#Tog?H(b#$14.e)F"85_JBbtBO4d4jHHmm!cZr=N5^@bELGm3gMFW_Qh&QC'3V$>s
%Ic<*'>_nkl4ATMua-t4PN_IOmH;fN-DJcLT3*,;K4aQnq&eM7ek,0uZ1Hd^5.!e9T=61f%%U0WkmQr!3'Q*sf_/o6fNugH3n3O<F
%]ETg*H+;-?+:*d:EgjWg#c+Vq0f\P-+W&WE[B)#'IA-utn`nJUT\=hln6@Z"^0G85;-U7;T_R9d4d>@*LE,B.Cc9jS>O15?a]FQG
%G`6(3n@F4l$,Q8sHIT@8a@1#!l<N0JXD*14DL[`8%W2om5OI]bnd:>J_6k[RD/MQZCDn!BRsUn]^oHs%7h>@X-Z8@.Lb_LMkN;L-
%Q*9;T\IT7^0&R61\?s"@G6a&a^96<O_*_Q]2Sh<Xa5,GEDL[`(&cBPQgVJd61:/5"6jHd1>jQEL%eE#-QCR,'=b&d1Y`BjndA)JX
%Iet)'BA6VcR!]866m!50eJ\';XbV8qk[>*qSpJt;h4l1jb1b?.l:.buZi5.ZpZU#B:E9(XY#\"e!EQ?cO$!N9)3/h\fE5[cdO[,%
%pMc1BhN<jm-f_@"Sf.e]75+,_"qa,^Zb8u3rB:"'jC.bO]rr[,*;.mWmO*+-nAV#jn+QM>cQ;mhE-$c7^WSaA&GMEi:ANtDrD^$;
%#uX=Lh#j0X:_fZ,WI>JmAV31k,6g?qNap=2r&1f*Ett.gLXmh4XN=%0and_/9/K-`&tC)<nRM8ojgi-om71n3XF"8e$0CC7C.'@1
%4?hn:e@?EU#qoCN5.NWh,I"m;MkI%e.+a&"<*9/Kj>>J_Z,A!@!l!a((7BFYYSaL`V'Isp@arQ<ou$N629tGmXsH9popGH^CE'd<
%RJO'do5\>9ni3$HW8dUG+?6$*HbIjhIRBS]Pa+i4k5Ck_)6)[nM9a=a79*4L^.@Qf+_aeD=4PW7k51#4*ld:'\3K6S,.0apE1J0l
%)GsZr0L,sr6AXCs$-HmV"oV.+It-B_V#;0FeGa!Pd-@?-QjeCcf2PA)#b<1=L9]5u31?m%^eG>8lq3pX*(m.)af[=f3,;HjjG`Il
%D0ZuqI"ZF#p=X3d5Es[SX@)W.')t>`N1"PH=GMsZaB(9&)>_SJ';91B'KU0:+au1b%dbso_W)fR8!Sn@5pn#lFZ9s5L^4R)+M-!_
%NZ'8dNrL.*5YsDq*jR.RB4rpGE1?`d2.m4rGQfAtHXZ,(RJ)DVh.Np*a'pJq?I=PT:qU)i!Nt@&B$uf3h<K_L:o(YUNu6(0j`VL`
%D\kcN3TD%XDr`7BHX31t1*RM,S"[4#/X5.]\U+W_5ml?Y[(ed`];o28Mg6j"gR='akPnpB>,GQB\i7Qc7M`,VYTDYF$I_8-:p*:C
%m+E0=SLT[5Ca6AmkS$XcWrs;a$c>9Xe<ShPDFqRfS`RC>OFC,kQU@^32GfY!Lg>nLSmSlY$B'+;M?*m,!%B?#TS=jk6BS_eoJ:Bo
%73Jr($R@4=^1I;bb;qj"jNI?gZ.uHUWq=E;fAhL>o$jtn3%!a,f.kL?/t"h\eParuAJJ9A(%H7cD&Sn:6/YLoVCOgd8Ab&]\p:%4
%C<IQ0$s4pmZcrs^8Bk$Q`Ls_AQSAe4W,l6/XRrXWXMLg`Ks575#c`t6-rZNh4IMFj[_*)!`X"SL+k&^l"X+!`];F:hX:_q-mkL1*
%\u%`uIt96Eq!uNN#Ef,:kDR<i;6H*6f.>Fr[hV2/o@hV54h*.3$+GTu&le2lpfI)2['7+nR?l8*-!7/$(m[oC.]\fOSEpn6Zb0<P
%)'MQ<JQD@F:j<bgL4M7YBk.2\X"<hc,)RF<@A7O8)o8jMT-r+oPSl^/gDA0/gs#ID=mWGA'LENKZ<[mBX8$&sN^eb43jl8PFtngU
%"cQaC+MY:!)["3R;!YsKULlq80oEL+PegNV=Tu9oEO6&2efZWkb'`>UFbNYYlA^"m]PauWI-AT/H5%15AoTgFm?WRX>MLeZ$_^6Y
%2[adF[mffW2<8hpqX6h7,"5*#,SO.hAXW"JcUDT[o=o$EoW4V<8)F=tKD7eu%k_a`W061^96GOW14Ia!7ug>7]F8knXRe5.c3nrq
%"NN(8an'VKcjEuN1pSI"XVd%C=N!sqA1h_#<!:S16tUd;\?q3!k$*^ZE7iEu'&eK21aVRFlA_OGpr.WS/j-tiB,kou80jmQM3fi%
%dla60Dt1/fR9AmRBM=]3bU^YmYd1GIjtRM^I9NgJDn7Ao?3Wu'-+fUZ)f/prirFnF@eUQ6IO+VqnLU^kZ@__Z6SdHi#go)fXR\/)
%^:[6.qFB+%,cb<./;UYV.E;aQGXX56nn]PiQbr".-(l(Z1'oXRc<&I&[p7P6QARJiTH`V<4n)SkJdVo+!'HtX_sa6aLe;:$aJGPP
%JuFF!M0'Sodc:sr14h2(Z_R#Q9[GoThF!#i]#oj3U<t/f@XQ\;Dl?r\o=83m;T40:6k5#16BEo<P<kW45io=JmKUc;\09et6D%m+
%Q*6KCOHGjc7!AmD0tG%9mF]lPJc*7re&ffgH+$FAHPU<<s'Sf@j#`E]i`$b>^nM<8?Hc58L6F;"$Gp.:6lJ7`Rm$pPe9LNZZ-j4Z
%kc;Z%.!]P*&E.1q7g6_.AW2NaW9B1pYpl;>AFA)d[n9(W3Q^P3/A[AhfaJJA-:SKE.&,<cNK)AR%u\R9E4qAWT&a>3_S6ZGb>mL[
%5:C:3hm=h\bNV9;(8U_5a`5s8i<`mc5%9#JOan_jN4T?EM$POLlV@[<OPoJGDtZ^F*&/Cl"+3KS(huB/0ejHh<"eA`/e#0VY4ufp
%]^VFHcEGl<HX6qE^?X3<jrHL3f-[h1i&H>Q,(@n7?TNi'c:#M(UaN1pYfccW%p;DQ"^OiC[Th&q;i_&Ki`'&G*7#"785YFZI,/WD
%]mW%m]J:3.REOYe&5)Z`$6m7%<,Wt$[j57(eW_kKrQ3QkiMuA?>D/#[Taf+_)Xi9@].J$EPhqPo[i6JmVr<PUh-J?TJe$Y%g4R3r
%nV9]*dmU6Bf!%8e,seBeTIU\$V2M#42h(SDlOb5t\76*h".+[Z6:3A*BFM_a,ilRpp+c/tA#5VAqo(lLfI3#=^q7<<+XZ9.8S1k;
%l:ijo.#"'.`:uc*/];$%'*(BYAb^gg`U-IN/N,N/Lkdi,@\SjJ-nmDk=6CAqIhq+5V$BhNia<gs+GLts%G5&".[an=#&#-i9P&K8
%r7VrENMb_"de]DX_7OI[?>/J5o"+=g/f>IeDtB*J(2n`R/p?cFIMPqHZ0eX*=1C'"WF(b-";sUhgR,]LHtC>54Z@.,eat]T)k@R4
%)dT'$ikjKQNnRs<88:\2JR+h0X^>OLHpe:a$Gg+7V6p;,9SP#(?AOR!NOI6*1YuLQ39%#g&LmHdkg^YYiL85<Rc18X\NsP'mJY&Z
%T@A",nod[l(M1/3BO^DG^jED4M%b."EG`u?_>moPFMnR-Y8A%'l"M;^`37la"sU!o]G*k;RE<\N1#bT[/$Ol4h]3drH[G_:YFf2l
%k5=?nJqT]PZmO"B\5>_LlYA)Inpt1pb*'2!l5mT?Aa:l")*A+oOKD,j/Y>6q0#/+Kg"hD.@1RHTDg/\)iUp\6%*tMFdJ1-a-'iSE
%+M<+IA!=f]>aAiM=k.5H^6mR>BhAR][^!:4LItO-cL)2+>`+6<l0[oi2nXV+^%Ub`';h\r(Td%dSZ=J(:)+nmo!">kD(aY&8Rl@M
%)Q,>R!>0W*o)UC@9rXMJrhhj<TpTL)d$UB;9/0<2#j1$S^maZK,JQmHiXJa8Lej_<PB!n";K&Ytc'bsS4E@UTpcIQ6DalSp8Nh72
%\4QU(_#=-+Yr]Y4nbu&.r4;UV7uEe3<(9_:EMP7\q7&gg(1O"1B-Ejs.DKG81-Gf.bSofs1ZdQ^*%'l7Z/MEk8#<@YZq/Z01=cpD
%O6nm48gGbt$&)feAKo:VA7OuZ]ce`IKlg^q`)MtH)=4orb[6Fe`dBBa:B/MVBeFtn(JZE]9m.?\UQ0as-3j>TS<_nS+c9T6Jt]2Z
%bI4WUm:CEI"A!u6@bmb-rhk3Qbk#0f"F8L,X.k;$-LX>N0=cJ*V5,q]KTL'n$XZdi=p2EKd\<LB7a&JN`4eh6Kk;?G-Z3Ca+I;f6
%IZ#@m&\B75TCogVHLtOWon4Lk+G[lujGdu(>nX#<7Dar!K2In(SFhW?Ln-+q8WNE+]lG>q1mIJiG#5,J/n"+5Nm'ZT'go\TpWNRb
%?iERknit9`s!l0Xrj*+3hpKmMF)adK1TV0E)Hc&LP3?p2:%3.S0[g_i=7>:\i6hIT-'Qr3^O9bQ&,V^rS-KYS7%X/&lRXB-*Uj'`
%gL.\qc]?^d\bk.k*Xd%>j_Z^/JEOe^I/EZR+'["IUKZI1K&fnFkNe/!i'/LXdJWb,f\:]OilCuKfWjU0CbX[nmKS`+3Pb2D(iR2#
%gp&@=';)jRnMh9F-lEL)CM#ZD`sG'P#c\!@S)8ffoC_$_ZWZ/tao4O_-uNZs&AcBn,)Y9%Mb0PcDo&3ZIJE?+XuUj']nKNXW0hWf
%^rHbU%(`tjm,ke8dJQ3F*!n"ho2l2\T"s"WF1:$-BCkFk81QG'd&h0pHouu*E`l_;hh&31IpP$16uo^RT>a-Ke/op?F?..W#stb3
%3Ri6D>OZ;iL5$[Sh:#Kug'CJ=hVcfKDLMt"a82B.k^U?8);<(0F8Q?/b_[l-b:T[r*AU,h[#KWt'0M<QDLMs7bs2!3Ii\==G6\&N
%O1DggHX?_SDJ!nDGfP=>=Pj>K%=!??#34P&DX^bq"3b\9i<DC\k2k@4#C\4RZG-QL<lUcuYFa\Hf)1gpYC1lbNkO0t\+BU<O1E]s
%H,o'Z*LlM@CqeYo\)?(#5!NM/na:HWGV%&>k-r0G"5[tAr&4<PrhT-OLJWl`^J/:Mi@:1m_4'<B"ERbJaDQG7*mH(_$5AQ?iduJT
%kS2MF;A1t)`sKUUbug+ar"_D`gP=+YoOXIma^+*\;joGBPNB<)&XgNX:X*gog&+&^%NQ_J(,'/ln1kcbC0K`OU\QLORpX3&55CA6
%`\R&R"HGj@T=Xt231F9p@]a)cB\V?<nF6WBo/XH?^BJ9AlWAsh$;^;_i,pRbpeFV\\Hd?Ms6qj1XdcX#h_H#H(_1hf=TNi"Nt[2i
%Yjj`cq(6hJ+2adUBFaPn<m+OFpAFFbO)B15>OX])-S\dNadqM=i)mZ`/2>ToLBDoD+J7SjE[%R[/U02Ri+M@ui,@KjpnL%8"P3gE
%f0B,`=Y0&'huVE<_=.e<5%90/mW1=3/Be.W\&%hH?5D\bgV3uB/>I>=01lRH$dr38"2D>-\(#]jo2Bl"m9[>opFguSIr!*9]32YU
%*UE,Ok:LqjNK9.Q@(Z<A%3AG/_#-)mn%d]&l.uVo^hB!HbZSn`jCe_F;8=%BYm!<$&2S4[hX@t-R2bX3^(`jRAfC!i,>ATFL<tq4
%%e+Ig^7i3.Xmg.U$_GU=7LL)Q($5qf3`?+QBl5fpnV$]r^Ljsg_t$\**AGACdaL/[?3d4:?$bf/(>R0.)1e\/lsfbPW1fm;TSph.
%*X@E'@f_G,dJ+J>>/0T2Nu^Wt!H&3U>&WE6TPk2-!$<"2DK%PL"aBS<kS1Et\(Wbu.bh`necq1QGOo&.3YpAIjXW(+.]CZrT>oSm
%4Mf_K(;,T;b=K;qgiTQq7Z.ThZ]>0k]t_l8JtL3]MHSuSn#1DBFYb8sY6VPS=,4A.7W_dJTkEk7!>0]n@!EXGc2Vk$Sa*spa"m->
%<^c^iJ*Q_C4ITWsM?ol8:Ld,g3gSZ2HlEJ5$u^cF+FD+:ed`&G%r5cE;@1M"FS'U(HP/j?>;2T-+Vr>M(Z?2=c7geXGlII<GIL*6
%>OXZh9-2XL=E'*uVQSt"#C(@&S)8gaYupD45CF>WK&qQ-NjZ^ZmEthI]T.\nRCpt.Yn3j;gXC?ei6gq0ILBK%_NT``7rfJ0FtSpm
%?,=Pb4>oo\)r-W:#.ask486OQQ6bUj=W)IT'bj-s+-,Kmi,3u].j;*1MV#*[GTD^]]&Q_uGMpkr$0o(I.qH`[r3XHV&C]1(/($n?
%X'pt-0E8b%rk%Xg#`i3OF@%u+irYEr?8qYhJ8'YJq(9+GgC8l_,cmYfNYgW8ag;%<K*+6IhT]uTbBRIND"Q=?LI-,[HH)ODD/f6\
%>Mil@%i[@r%,_HDd<p?H*u?VKYe:M63?/.WJhKcGo]"p8G+G%PQ^L,H.6:G?q(6hJs3KfIE1g.hNh]e\Y@GBV9oS;`r"e)404Q/1
%!E&$HYpO]5M[<@?^NOr7mcN-+4EP`1Be0?>@mO=5$$CF_>OZ;iGLLGk`YFWQFhA#e`sWjQDhE%^m;6eQKEF*AAs^gclU8-2ppbj$
%!_;id0V2d6N>mtKNrF<[a)ApH$\0gFqE<8DrI+L8K<K?C!j2.a^0@#iQZ%0h*-tT6"fccO_8c^QMPGE$Rbr_/q0u/PUE$AM%V=:8
%UqSr.N_]&Yh>00/<AF`kGYd8X!gX;l\&#_nn2@c]q@=[rT#cF&Z]Z,,])MI)pB6N=\);B[Qj_X>=P+V\l,O$RFM"%"JsWaX@c2Bu
%pUr(pMPSI3^eQYni89l.p:m\FcYMj=3s@ihk59]%j^0N>iE>l@eVlYu*mSZ;Ka.=)&'5hUI\EuR1S4%r&B$4]B$!!mlY&:r#q"D0
%^HrKCcBk[l1ri#-"3oJ@jcA5cLEg\NkEloLdlk25_rJ@@Dm,f0nPO6`6%1HX%V\)"W)I^4M:0)*DW+\6L0u"JAR.3O1auoN*o3Li
%!U:=<j%dZ2VP*GWnO')Y<$g\Wh#SPVDKJTlGIKcrom754o5dr(j4e=-%giR,=fYICM<Z?<?(gL9furO*pX.gLF"ajTaB$2.&?HtJ
%DWgjeFgn&cg]O)\gtf*YGl?KkMM:pls2:eNO:';HXH!gWQm=(B.n_QjoPm=U7ZmMeHFQ=F):3,Mn'URNF0lGcChK,!o5C=qg3h<\
%aG9U[)gkmU[mAY;Xo08t:LVJbiuIA+4U53gHRu3,ReH@b_/2op0kaeIa.rP0-AoB#q[;"`[pV7ppF5>k+ccjtI\7a+ajJ2gTL6aW
%NI"'Vn)41ZFSPA)KWYgarlFI^]!!['k?*aG[nZ'rHF^3C8ar*37;_PJ<6"X>rIri%\KCI8gh]mgW`f-+()WEjg'"Y3p2?/[Vs]IM
%I/Qnl.VSZtPUPkjDlbEG_8cS^Z=rqY^;W#rIckNrN-(-KTg#V#P!adff$&._:i&'98j03^j$Xt:MJr%<mPiXjHNT6aK;jWI[!QnU
%[PeleLXoDW1B]pVD9AI/J]<\L7TfF,)Ho>emG:7WdGC-2lPDJ;3&O^;^`[][-[-D/L6$>g@B#@EhS0Lj.UH(Cqkf,Z]i's6S2IE2
%_G(aP]Ki"Ug8bQ-NB>$J\Eg4f5OR6te;'_prH./)rcWh%KPHWM2dl+0FT1(pUMc<GORW`_Q&L%9](&_NrJ6D\=7gL,/1MrUp?piS
%4PP?*Gp*GK=<"=.PP-)qpOk_*'W7jqD"hC`'0U]pCiN\Zg@hIA93orcM.0Ics/Up%o^(PC;r*T9((5q]n'*+!<9leoG!s>cOQ:??
%^fdggrq,Zkp)eU223B?\ANOE+@D'm'f[u[qp%TJ1m#&ONE1nT7!nPU9B9[8I?/(UoL,E[-bG<JA5&P`Ba2du20qD-j1UYZ'!@`D*
%eb"ur+X3LgThmju<j;iC3p"@)R5-39+=>#$K'*8OCW,k"<09?e;P`lnY6T^`#L+Njj1e<qCIhi_r!L9X%%5q"AYckl;W';Y&no-`
%p6ZkPPMsK#Hio6U<-l;Q#ieD8-cb&SIi-NQoNnIhTA:@PJ<2o2H'6NtUPL3,@Jk(gf>(;6IZ?L`0:/N--uXDcLUeI>n0XUl5n<+G
%c%4/S+5Ld+^6&7;F#@.qpAJj^5I:Rd5Ta0Un'7P76":^(M%K?I:IsBsk/nVMQfqs1YMP@N/ImNr(j//Y$ND(;I/\)$jlVGn)Mb!3
%ADtqjb'Be6"jr\EQ!Xc7r%KB5m+[OO)1Mi-0p1I!H2q9t'/CS[o>iT!Iu$c8N>#RQNDmg7o%.kC7C%#1&@j!PG'/;S?Mic0Ym4Gs
%(BGJO3-aYj`B0`&Pn.u"A,!EFp.FjR#B\=cB_ZM?I*&?.-j6qPdFuWr+4,`6$Ur$Pd-0\r24N.$j4]sP3S1_5U&;-83)Hi#o?2!4
%"$2c^UN>-ZGO+9!b*9RQ4*&<<HMJ_E<O7CY8CrJ70h*DTOcQUKh6Y@@Jc\Zl=9-i5WPNm#YDS/="UXLqma89fA&XN]`RBMm\X-S`
%+_l+iZ8s!j7$8s1rn6*^)aY"S\3)@gMTfDhLpTWF,IkJNTduZ/M2r0;)B<@2furuuRsp_ZiB<(k&!:UG<]!CXEcu@jG@[7)YQ23a
%W(\]3Oc4]e;8Q!15l[hic2FAgVNF'/Oi:qm+4u"sr5]^QrWoI+_2$\DCe=iX_@pDY$E:`7/?NfOo3GAHO3p5HlMWFdQ8hG6QoGI#
%OGu%!,JrJ5`II8VEL\;0V\//]&.,V(bZdLnIQ*(A=a9@H:WV/H;>kZt2j#cV)Gfjr9(NMgQJJu:)%k3_2fd,OJSVQlX%fd1Wda$8
%H$g,P0R+IBp#TV7&$9qn8=MTT+E-JK"cuI`=b.(D]$peDZ"C45J*a>X5E5V>rn&GjjK%RP3b]J`cX9#5`FZ\_8@=-,1ft8hKnX8-
%6pd\qEn%W!eM?n30R<0'$-[RYkO&cuq5R?`NAYY+cVPuKbLg>g+eMO^nN%eu0a3is[<Wok$k"Gc\SjMMT*Y2HQM^3Y::@eUX0n&4
%c<9(1qpj5kcO4TNp[MAUY)u$F"Dq)>)[+?gLf`#,M2bbR]YK-3pLBap="#oFl0M^;f5rY.Bl,_Hpb<f(`'LZSSc*KfHCi^IBst(C
%ogS%hg2qkX+8bjifV,%BaUX^SPYV>>"T1fsMPFR3ZjJIj!N**e\<"P*6!GtRni<P/LoMZZou2*t9G83<bHC2Y=!@qOdMD5B+U4(c
%jf9om2g)7j&\k::FUQRZT6!A'gd6VH=$1U'L3.kp$FdBc/B>qW\[O9k,EibA<eL2cZcA#_SC9TZY^&M_9O(]Q"'H&\+0>1\m>_up
%<gNgD8?jD5S/*m53@'9p&qJrBj#Vl,%hdV"\8;G6H2Ie]94\QQlNK>8b4C#i7ccGt@;&,]72FpP0fGJF0*?I:%,SR(]?D?sO5bT_
%:*``V8hU=T*idJ(JP78SE"C3bOR*BlboUdI?d>L=i#m4PUUPc#DLsSWPb^;8hoIO3%F3YpXqmS"B_ddoQ$(qCnW""US$%kGh#r#W
%OO"I(aTM]dm846H5-aTd?-$TR-ch7fjo;CLm<UY3EAXrt!TlW-blGA.X`EW0]%f;J!sW)IL@#pe)3(scirpoFN1Ln+rqDH9+Xp8#
%;43tX-bF0[.dK*5L_N9MU-t-*Zo*P.@CSk_a:dGGEpd_'gAK8Pc4`T()0Zb@UVsH`G^UTDLfhnc6aLdbJ<OO/,O;`"F2O%AIA4->
%fG)/8i+`g7:(0ds>)uX1ee5&p0QWm3#ZG2pQ,sj&(QORnmn;*3M\te;P*6"_U(2XNdTX^\DZhoMYGQ,`mUPQaX!R9ePWt'\AS++\
%&8%YhGOC^t7m/toEEK4P&jNb#R/%@:0!-Ue*QMZXWeN$O<WJRrMIgpsm4W"6MLie7C<Ck``Z_O*5f)atr3&j)-it)&\RF8t@ah7[
%VSaJ9?-5qkihC">!$841_ZYd!,S(,@bfcB9ZQ+[!%]hWl7WZ.TA==DC`Q`W4]RGTF3M*BV;c*3*C0q\*##>2ECqRSf9&jSW-XJRm
%QI9#>Bm6=4C##!8bJ)]Ls8%OC.^FF:ikhbY`J'#*Z7rG"\AJ?q=EKWThBCdATLhL<dLngd)2n`]$Xr1X,=o[NN1j3Sb..)EP,oDM
%30Yi/l&dP0[9r$34A&dK>SrcYI53FUZ+fJJZ>dC5-pg`8kHP<g",Y)MM^bpoY0LC;4Gs3-LGO*&h#ni@'"`_:6,#GR>^hm3DV>Z&
%QWqmDGEi[@WlY0m0[Q-I_^)sCK48D[E=mO_/eX=Vb#Z&]A:U3Lk:)lFU%fO%B^kX<MenbVQ,hsA)=<qS94BS@_'U:_8MO@G)Nq71
%8#%3-5@fi!Eu=4a6R0KI=]XuZ.MM2^7+,j_n:2]RZ7X?"OB%Ik#on@!$V3Sc88:[*o=L4>+CNUY2&912<MZ\,]ie%f^OPi=N#/#4
%Rj1P*"iP1&/n.+5Mgg3W4,O=YgA+!Ck[0pqrl>H^L5e'Z3NTj9-Li(s_2W5*En&@e$i>$.9Y`_"/^8bEgg-em<][9b@EagF;u7RQ
%o7s+@.`jhmX#(;*Df"rN:S3-c7EU[_O5S-9q'%&lhF)A\Lud5&`1f6$"J/P85"V=%LmBC+4C%Ql"c&("n\hembAt*?#;S+8`&up2
%?Q?9>'F7+&1'Wc`&k`_@&1.$:4;Gksi/h?8.?aM:nIeBi"shT+0jAHe48jU*#ff86>%-&s7lRc!=fQ,\8=\OV."?-t#*]`kD+0mS
%:dp'cg)W*/nEsI2*.2?F>3/mPaO2$\/FZU>LC#FHP^5VglD-:>m8*3agZ`tBH4;Y6.lY@S7EN=HRt9HnoeWE0TSP[IS.aGs`,f%N
%ZQc:X,)%4ajCkNJWXCDAFC=Qmk)h3e!C`C<JKQWI^u/Y@$"sN]KKgK9>!U^VNgg&'OH-@i:TbfT[[`GB=WO;:fGWOJ`u/S^l4G1U
%G3[CJc+\NGUA)d"KW'N,L2?IdkG/;^K_u"nE'`h*&Q9[ehW7>EmIQC/Lu8SPk.AXE2<90IO.hY*pF!];PrOV&")=ilJt\C3VlsJ,
%9Es0pFdI?U9@ECA\7_>^2jA<Ko%Q9>Q$,OF'U@9gJ(kt8NT\oC^X$'?[-/LNW,,>\S/OT74Ho%0:\;&i3-!-!2MiopTe+a8#c3Q7
%J3:e%=p]XJcfKdJc6jMd/&#U%X#^lSZj]:Z$dAZUf7icAC!u`.$g"]:3V=(1-\oc@N>@MC$,+F^(:^!+W&j;`Pq*Z.f]R=HXcA3m
%PT.!>:uhK8dFlK-A-udc1ElB/\`#:;m;bU$K-K9sCF&f`5GN"I5IR6%_2X8j7E;B2gdu.6^312j^eK[D\Fsr3&RBNm=B+!RX,JQt
%Y.o[.6l'nHK*dl-$do'uVHSl"?j9O]6VeTM.]Od_,-J8tIk51?=c-2qW-[!=)IO][U(+ZW;Z\"<:/n>026L:-S_[L,V@XLr'2l5Q
%]N*Zr3,jMs/n<p3pDI834(hYp4O?r#;^7rmp._"5GVlM,+1P2/;?)BF#f*._MXg*2kg7E;n&:uF(gnOTO^\#s'Cm(#:o=mH%4I'r
%4tRtG/NBbJn:t_2=-I&2_4.YGgp[kQ*)u$aJ;9F[37MZ\6>-$.N@>!K5A=g7EZ6o3.8GW%^j=(#'K6A:FJ$tA2<)g<BpU.5cReGu
%RQMTWpWqZjm'R]De>bn!FOC#)EG&0pljbW-&Y4\ReB]IrM;l09Zh8SX7FU0R0-]n41?XP:NBqKSE<BS&6=_K>W)=/NdI<5Qo-UAE
%MAkNY*Ru2l+sr)W']2*#AIo1e_clecl42?q3qk>ITtK/irA.,Ai+7PnheE7iW5p=<5T,GRm?%-IM%nHKWU5o0`h9f#F$n48XkeKP
%Zc!ob,N9m.7Rp'Jj8?<[g-nNM"S!U)Iqn:q&;;W,\\\C=BOp3A'?IuBQ\Q?[%X#F1'^qh2lt-mH6)>"D)VmT&of_M[b]/q'kk%R`
%]f1Kj&J(uuGGlI%O(oIO&JKg>h)NIQ6&pHomf#..]tpWgXR7Z1IRSXINk/V$!g:u/oX#BhdYp[`<goPRgkb'0^In]-)G-$Lh!T*d
%ai^1G(/>d"e;T>K*bK47ZE"c*1sh=!m!(A&>>@Wf&/pom$Qk)o7$/VqnM4gQZJK:-QUqkP$Bb,S(QBQa-OV=jYJbED)s,_YT`E^"
%+sJrr6'a5/1jG2,hr2A75"_$K0'o*TYq*akfTZVUF\*cTW18ZrM*n(l.7PL+a!&ibl7H7M\V$3[j^XdO&W2/RJpf8+j-[kLqB$Wa
%M/qeh#JuQFc[HH^bes(b#/#A[2smJ:6qm5.it)@\//Yt$XrG:0&9!-@&9E4:0uGO=&ES@'PciAI;i+<[>\,rZn2N;oi5t[Q&kkcm
%RX?A\d\H*#0Z,i5<Ap_,&oDN=@`=a8N0Qop@3"l?9'.,?;h7r'Vd^@p?cI`7;CHL2i6jIc3SHHJ"M%N02(KlhX(E52*e<Tu2R3<e
%6/.*fN7[97-Ee%1=qMn0Q26&=J2glKi(tN\1`/F?Tqc31]k_hD#\a2KiD`qkesli:1Dq<77oY0QUR6Yp[@>@A,oc9Zh"jC4,B4/(
%BNKm:G9UgZoggJFZR[)%B`LupnjCV\CO^HR2=DHb70LGcW)E;67hMUXeh!Wef+<%ndmH,&WA<`hbkWDoI:!&p"4AG_*(Ua==+++h
%mc5\$"F3fh1(eX;8h2e1S6OAf7N[XFB8=s:YC[h:S\X"=b!=2UII>(X=/['cf[au7E;/MUO<W3b)94ONG4GS'&7sd^X6<(52$V?i
%UTRYM[,mAQ9`:>J2'd(Hd9F_ISiUNJ\Q'BF$B4Po&M/kengMp%P$Z[_J[ftB"K<D9*hdW:/f#@t@pT8'ZD+<UM*i88iN;kudYVol
%)+iEhepDaj</e$W&!*Qi^9ch_.JB!;Q9c.>?llA"84!:uq`rm[p5J1;;9YB1HjtAq0"1Wt:-!?8Xa*I9lLD-1:!]kGCP[Y\5&4"q
%jB\W%j%`J/#Arkb<u4$j6)bKM4`7.dp9I7:Ge3R5=.tAC[peb@#c>.bMrB9/h`Omt1o'^5-f5j&/j=Q\JuDKQI<<HTJ):.KQ9;H$
%H;n$gD,("J*VFc#pX`*uT4MV!A<g,UkBu!mF)R@;g)r&%Kq<@1JZ%a9lZ\p7;E:9(F`]$U,2,D$c9knP$WRCZF87/26,"6Ln:;A!
%GD/*"+ndp2f[<+42'cp]:hK:la@iP9)i>CO_Mdl=%:\(@#E@q]CMc@0<[/Uo4]c#Fi1%V/&&^R^ZAS/#`SUOKlGRN+f%V9S`58/3
%+R?[T,Zp>`8IBLHcWqp;;+KH8,l:"FMkR'h=X4&>><CNUL>5^-8B%;.W9]3Rd2m^OD*ac[6778`\_2mFDn"Atp"(>Y5Kh1fC2FGL
%LTHOK?=)8,cW,'bbIBt4c':@l$E5lSi,S_"\5$d[j\Zp(SID[`_L3+4qMSNu7;so(7XTJ3WJ`lrYYZ<S<.q8Nfn2%M$/LT`]ph=#
%3^sqM'X&T6Z=RjS/P+"SgP)@M.NV3mjuRBja$s.(GM-=RJ+Ilb'=5)NDh!9p$\-;k4/[-3l"L_h>Z`D7EpN'ECW(OT$t]lGW)J3a
%f3l>'KUB.9ajX8R?&%n]f4b,%i%\-dRTklO]?n[XC2S4TemE@Am]TdWIhjWX7=:nI>\2O/;/cm,+OAS)q/!Zko$+R(<skpmjP%*#
%p"@C=>(75UG>_B=Ao%3+"q(;tXh!r?od;e@.389aAV*37dhkkYRN=4)LPDiL)U"uhj%&%_*.@]md*1FN\HOEbI_/FHBgC7P3M\^X
%H)%F%"hZ79o7sXgZaFR]It0*e3u__5%o"*JpsPitPjc5AKF?cO'EZo-"TEuZ`P@[!`-AiDOPL`3=Gs1&.[-=^iT0p-^@h6&/]^dp
%i8eda[eat1X#K)3a$YYeS4N%tTmV3\*JDaE_?N#dU(^X$<ErXA/`0Z.6j7S;dC8!Jf0O8U4:,JJPIoB!E>?53?aeqN)KG>1iGf`t
%kR7Q'r0luD1/CS,q!qhWo0#f7HB-MHYCQ'4`**5W$K@n^I_Jp1"Pr8@pp[=?IVo]$_t6::>2UW3^m>9>K@LZ0?NT'Hh\f@MB?YB.
%KCo1I#9N&Hb]j^3G,BI9-[Tk&+C.:;&HWu:;nit)gA/Ob81=&>>F*0'e4X`NJfC1Y&JlYB,o!j53-Y]7)s.0^K)*402btqR%\&VO
%i-7`Z0)6[Nm1=YrXjlY<Nct+9aMD,BR??%i'A,j7+uKK3TCs"`s4L$JPo5Es@)@<rT93:R)aZI8g8WDC1<Y48XA=4+GjoMe[jVL-
%]6#1`6h?EfqpKP6HGphVca2e[J_K]4o[NrX`8"0dT"@C\=?FIo]J3EKkXX+Wc47dd9!/$"ZK&$&=01G)+`FBEL#5<=]i<J&4;a`f
%+I)8`iC%>o@?*U!*hni%.`Bo`h?Q'Ls1)/j]+pmt.HKaR*E%e*3\pih'a::^Xi\Nj/qocbW09qtP"4CBkBsEtg)@boQK6DAMUX/A
%mX8X$Z:3HR-K=?[Gm^3.5tiWB@u4O[N]]WcI$5)mY[rYtgq_Bp3sS0*<tRJG)DDmP:*(G9EG?"L.JIU#HE8mKp,Bps#@M?Db+L"q
%XXm'(>`I_nb^`Q-GW<$oL$0LU1Ga=+F1b.#m27X7&b`Ao1mj!m1ag-XL7L-lEgKi8WanDfKGj@S1c!s4%/oiI(A':9<]Xf&_QRR_
%XDs(E'&</pe=J2&NB0F1guZ=o`?@#crqLeS;ODr?o)HVL?*>K;s7ki.ptu)<:]KgSs68!^pkO@ocgU?&rqV'BQ[el7Iet3Or?o'7
%prFJWF;24)8KWY#mq'uW"=!;F&f-F)<IpZm-6F9p14P*p-[B28ZBZ"05;S*9;EKUOJ@ms6;TQdUfa?Zf_Rk1OWoP)7N'_Q?q?@4[
%&t=_u'E3%j8SnZGY2mSsWj:gooqNCL"=j*/6]'YUmfnp0C`Q3o/5U-e_\cUJ(5ViJJ>J-WZs3c2"3d3Lr^?T+pP8fBA)&\Ao.3,L
%\L<'Q/"1iFKHNpc:o6gPj^@<?#2m<Vb8_[fa5H%Ga(ujOD<=35]`]NNZJX!VC?CNBWV&9JC>s#"RKKFI:a[(i\RNFD9JlY!gY?W=
%[lp5#e9&:kU.._Tb9j#^kJKohX3kt[=H/=\(78,\-J\Tc+e,SbGolKH8`lND-'.UpWZO9S@4+p?-^K%`Z@O/f#@\k%Ka&/%IaC6p
%Kr<]!,r!S;`g[E7:^<Sh'Qs<$:l,WPah!?G.]=MjTEElJ-9*CGQ5>?g1<8J0GDNQ@f!#E6/]g!oZ0JdD5_on!%f#E'h*BbNk+fCd
%K+e\l9')4QNE1$IW,b#@Z7HPs+Q4e_cd/.rnd'TF>:Y@Xi%>s9eT=_]OJuHYkW6GC*DOBiROfD1_'2I*W#CB+pj/7WM7*u<o@JZ/
%WkQq#p5gJ5.Qck^\NQ,=JXq!oU>g#5De9E5r[]&*G!iYZD1NP:@Y7bYL<(2BgKP,!Lco=4O]^RR@-UC,5_N>TmsSm)$mRlH2*.rt
%%CYLGbV?C@/8(FYdNt)*<eRiMo,MtK'LP2D9M$Sq*et.9P9iqUV.iF;'2sle(P]2bUK_^`kE+M+/&rlUB/K!ul;1,J<jX(^&XI+%
%[oX6&P?4;Y$TTs-h?:A\(=?pp)e*!/nW6`T`t3OKW6Oko]Z`NZ4Mi"kqnRUPr8L3lE(Y@gM]^qe:T6@BY<69\e-n3M*%g=7UU:8G
%qIVoa"t`9kO)o[uOjYNP+.X,L=7F3iWOUo3(O:nik-d<[9jS[f[s[\!)o;f"hN<h3lo4kqaN9"pRogL;3sNDe3&,T/]I]j#N\o:/
%!H00Bb%s9H^'$QB4mnYna.'K?jrI?#-4CsX@uMApp"J1X9^pt5IGVg0M8,(eI8iCR/n`3n'LU%_C!Xg$Q.I)L&KX5YcYM5JTss7t
%p:T."6VT8"`XLdHB;/dq"DEW(DHR\@W1;',i\<&RrT(eo$*VZqR!pe#-mlsUC$'c(h*pLt4@2>h=;[rZ4rMB[:jq(Fg5'GE?ocBb
%>VS^i5Tl5qU7q9M9-0cf2V\5:<38QS->P.gTZ=tTRZ27)9XOP&fli8"#](`"CKB"(jD/"nW05:d@2H<pV[bU`o/1+uDRb8"QGC=-
%[0WME5II:\*Za9PWXekAg>RKP$PXIlq\s"E,I7Ak>@^=V2Q$`oF<3PS_!?358@IKFF,D/&q.+(^i=lpf2LsX8A3s&R;.YpD/>kcU
%3AKm&7FNs9M[k#Z)OV]1,9r3M90Z2*NhCQ"@,%'=!p8?W6Wo1Vl8]?DF)bg0\"S'7Dhg:'2LibB14)(7dpAgO*'cKI'1:AIG9mm$
%[EFf_$EP2eSTt!I(,5MC>k_0/!KH,tQ2Zlr@Mj^djYgt-IOoM8oVdf@#nG6j=Ok%]XO(;WJlJZgP>^HZm^Z9;Aic&l/)C_N<<.Q4
%5R\cQcSFB3afe=tk2ZX^`=4%0aUBQ%X>;u,4Q\u"8s:3E#e:N*0d1aNI>Hj$\]7\Wo'X8nrGo6aUJ*CL8UJKKBNm`).gh<bETknm
%NfoBa^1ma<An@(.Ae`pI]4&;]mPaka6O("2n=aX'OloRYW:suK5,qNNM>oOoD0h%jGc`5YOd]n/\Ma0t0DYLS=:cI#2Wc@%IepCP
%6^<!*K\+Fgkd](kH%FaInV"VV:%j-4(XF-7FkcTN'DraQ?m%?\kc&Z:Q"Rq=SU2S62_L%Z8dC'F.BX\Cm!b,?L>O_(*23[u:hF2=
%i]S$a*[a0G3.Ou54J6-tCg2^1C1\Ym"*KG_QuCVB3Cb!)[I4Z<6hg1bT+WF_@[KZm$6k"I%/KTfDA_dDo<GnYG4HVHaX:D2QPK"A
%D1X6-d7"0!TTAete.,`@-c2H6gLVBq(2^NNIKIq#3\6E6LpX6^4Nue0MSX`lU+2Cp.hH*%F.mD*rDgs"B`<$//WEK-aEj&<XWd;:
%C3O"*S(WAH@;T^rN4?r)O@OCa/Mk3dFpJ=4bY]0VlZ+cSg-CoBg6W,^A:#Dbc!@2=8DhM6[+-_=`87Gp7\7mD89Yq=$c>Xi&<ITs
%-^'L"HHU=qf^R%a6t`Mo^jJiQNKR,6YCW01gCZ@4&/o=BA!LQ`Ng.%b>5hKoNbjS<)V\nA7brHMFrKr6p"2N8<^`nq'_BlF@/CmP
%.SD;!Yrp$.VtW+1"/Y0@Cne;eeD`ME^VsRZNoCR0*(VTmHckOJH0ua%mO87>.6:6b#GaGac;Opf/gJ!+$ufn:NThlJD:NXrP];L$
%*<r1pic07d*grTT^;FR8Hcd!X:Dl[umI6]fCd2F.]Vc0X[#oQ.).4.)Rni[=.t6Z;:Lnan!2F)\=e>0gdSo;;V)hEJ4t7X8LJ,[3
%:K`%YHck8_V!^?VEmIm:\U5(\mS:eGoBn%h:d&B;S(hnRZLkfrT!IQih`YP$XL_gWoW2e>:V+]CG^Xe$&UVAVhT]&t3l[)YN"bBL
%H<3*]/Y%$M(ZJ\2-n-KDmj\_-?"KP%,.$0im;6,+*)=<i];lA0i7fpf7@1T,PrHWdAZGAB1j,'B:gDZeU"V&AGH$F?Po&K+<K:?*
%fD.!l:h3u$HXuCOVh'#2PmLL[.cWuo-<"uNf;,]WASMD6*d^s+T\OlS=.'EGqf7r&S6^2rYtg7iX*c"W+6G%?c?K?Q?0."MB"/*>
%Xtk7eTj1jaLl<;Gi[Wj>r8"s,g=+kXc:h'nHnKN3X6k"o.1Cr&3*2NCL,,FY<@0-+Bm#\t8Cf23Q"^m\m]J<1E=pDp##]M^Xti^A
%G!=2ON_T-<HWM*:rA=fB.PlQaFfmKSNGiU'Wsns)Drb28JBTZ'?"G.+<]FAre7.B_mp0MWDlq;bNqBKeWuP!?WpHlD"pB'&]rt+g
%gmYFjZ'<`#3H!Hrh.FFnO1"Ah1;M29=77Y,aa*aFIH?:[lHN>C\+hg^q0R9daHbH=mNc9GP'?WF8`m=#*6q-q**#=J:,;QJEko/S
%ABn@KhOS3$q6n=%-Q-#7D.-P,X5&K/PO+Cm,kJVfFsksodto)i>3_Vg/gk48S7Kk=Z!Nr27W\e%,Y,<*S`GJa-Q+j?%)2I2ncI'-
%`j^!*Bhn59?p8ad`D5hrZAN.9Os)^1_WAj]NIP-WhF,#sd5B7RF-6^ndn.RZGFFc,`1e)gGETM^n`nI]aj_i/pm.*P%1M?;:,;QG
%UG%s9[JSr/9?u1JPC/CJT(AG8N;M5T]T]u>k9OPf7Fdol]KhZ"0"s=Z9\J:B`D84_'"a>Y]c"GGbja^lSWaI2FB([haT,L^]9>qQ
%`NVGGC9"n0b^K"YS<HX!Z_=4Zm#^<SdgFRVSRaJ"_`>iof<bG?kYCO;:@aX9GES^Mebmu"Z<$iDR48Rp['?,rncI'-`jT*9estgU
%aSZ5iq3s^R$_AC[@<7GBSqW0lr8<olX_I3&\OOS[*/6#iCLlQ\(k$Ic);m\2pW*X["BK&VhJqOKQ/_oZ`=_reO#P#4@t)K5/C$J'
%T\]:X?>6q@5.D>Q8$q(u(F4slDj!mE6$V]g]_Z%(k1TStgeBPE`6-fqDN[.22ou6'&Y(e-+./+Z^89`+H"N\NhacOAOp`%7LOiIF
%:ooT9Kt*'%;@jM'2YYjTG*-%0`*:Q7AG#a9IIiJmHd#s0h'8QMi,d4iOc7d,$ilf!aj`KHB'**6A]9;1q8]4k4`C<S<9SEJ_?*YG
%DP"-2@tuW8Qs/3hWj!IR!EHHoEnH#*khP.o_"d40asNUol,e$])K.e-P,V,)HFZ]BaLk0#:=!@T]4;Gp?1NhO3Erl&jJ=6I6$A2?
%#8s3&_oq>;b.ua*aOD9V"L2kTZ@FE=<oCg'?*<Y%N=Y3;]K+'[M^J7ph-G'_!tb-d22%STCc'(_=36`4H#\,I3]B+\m:fsWP^c@]
%LXPptjFTfOp\cQZUEi&#nrFG0a7Qjd5JFW&]Ch5mVg6$L/uULQPQ_,N6]?;W%"ou\r[o'aVASX]mud^oOdb)P"0ju4EgMaTAqkP[
%QOH6\3@kCQ#T$1H8M6<\hRUZHP+_!OjrPnq-+PW%(kZoa$)[O=6l>^6r*pWYdk*T[Qlr`,Rt"*^Oek\K@p8.7RsRh&16.9>$m=91
%Z9$U`U5nr[8M84nDN:pW,m2A;R4id+5Z3I9YjJ3t9n)7IK2j;)]4BD,ZD/H3O"!rg9QL+e^i5O]Ab)tJYB\.G['dbmAX/JAol6g.
%p<>Bg9Uk,!AT"<2:h!`QA$a-8FoM4S946o(T=[;,A1n;VmZ4VBZQA8A5XnBCVRplZ5[K8Y5Xr"f``N!Ej9=6@1(%La;;DC2bA$69
%;k;&@5D[@Yb;Y0K,#_[iD];n"Y5O&*h`0$TLh61;*N6\,^L_r'%E*[.5'h9M)+!@;OJTO%g+SObTai@Kf*1^r1b^SE(ZI'/99FED
%iZ"5p]8@$oeI1HTGkJ^3@Ab%3!kI<aA*f\'9[2kf(![1tjSg*E\L/37aLdc2Uei[B7D[%,*/hK$jr7g#NhZ3/#QdlL?%$4</Dh<&
%knJls2^UMSe1gY4kC$:7[o)[ZMcY^[IE\kT^3R]u$_NI'lXT99V0lCo`9Q!1N_h[dR)3@sN5%U>J;h"K`mb@0M441ZYW!M(\NaDV
%]0E/)E^kauS>W\JogeG2Z))+1oDWtaVfRia^mo0K5tML$r"cjt>jL_UVm\pIj8`Su`<,=<dk0^L=aYg9`-#1raY!M5b\@7%(g.EN
%8Vm'&%7FQT4?uG2MM\h3G[#c%Jlm$1@`Z1"&d1tllXp56'mrpn;2Y9jJk3;k=3e.OJYYQI;cMg`U)oQ(q6S3@D!K`ppCC'qTZisS
%e3f`9%9r9`+uJe2eW>*XOLZ&qogk9K:A/FS:`VYEQqaic95C.8771#okItp1T-=*><@*p--K6ILE&)$"/`s6boJ=a$V[@!`K$Tp/
%_pFCrgS8bu_GgI^fHmV<[5>&1(o#iQLuJ$5D#KeSjeqN.;#-PSeXO>hq6JCsYb@e5%O6#,Te=]n$VB;-bM\cl,"6&-%XFCP0_<-R
%qACnu<TUTeM)[k.TNTl]at.L/FG@@DRm3Cdc_djnquMO5RIc/:McT&2\rMI>6RO.aLP7_$=eJpLChd.H++S((=G(V)k'f3Vo3>3-
%nJ!?1)7-1Uo@H0P6XB%<6cEB2CFO46-a2rq7<i@J1I8@Ne^V+7j%U9&6.adpJ(C`7Z`3pL!!au`Z`/6aq-Us;1\)eZ<d.fGl9Ma1
%+@etBfc[ILH?I<@>WkVDe+kfVmhBF-%U"PH5d`8sPhMe*\4kF-2LdWQ\#+%kr-2-Tk"=B%<T;N4V)&\]9\*!CKL;'^3)K!X2.\\U
%-ot9q=!O>\YFk@DE-G#.`)0d40fGMibhr9,h.o`.QDjpJGdMB3qD#TTMqF+;J-i6(\YdB3*G;Cn]$pGIAGn&_cXp,G8H957``?%2
%-LsCE<55[df1.tsA6g<aA;(M3o$CS1'BQPAc$&JN6t[Y,5BCPt0J(Aq/kqEL%M,*S6ZUAdHKFIJGYu?M_Q,[%.GZpS*N?"-pj2$!
%oo[A^V&NPSDHI6&HX(/<PDOmPfPu@kDD^_#4iD5/6%FZ`9Rq6f(Cj,nnggZHE']Ht4B@d5>n#OLGIGNnA'.4VHCm.GdrQq;V%9R*
%W(HLK1?M2)+W^%jqt<B>eX>bsEt35R>,^udHK>"IVtRl3s6%9ok>\IO_SpVACG`3:MK4W2r*#s2##_UbmS%7[S*@!r3]jV/S<55U
%Ms2XNY=HlfN9Pk$QHn2XB;46Xn:$nXW0WRUDCcLJeoSD@aYW2e^mU4FR\mD.\o[j$VK3$Vh/p(+?`&J6^Yhg6^]hF";eRtXog<@>
%esnN/5Muo4Q;$_:s'AA((U^BPMs9/a[)AH>imC?fWt+:9;57K@-FB8fr1UG&CMlF-G;gQ&nb(!!%l0]9aN8Za*CIN2TU9'>9Ll[6
%1S&SEd#uN-FIl?HiF5VQC73@Xkg'"1ko`s$Q)j.oH;7V,'Hh@le(^Fb6G)L++$,=ajqd#(jj:AFEp*Ap@QM"1`ua/J3WZ4mY,b<-
%d?:c&NeYf*do#=<3qbpR&_<J)PjWEM`oHBIo,hO)GahlSVPC*!M"Yo.0tN-F2\lbXs6*O*GXhW337LJZdkQUFS3NJQ/fB_!1EA^<
%$cRNdh+d(Bdo5I>3qbpR&_<J)r.%SmG^MYprd-@?>XR]7]'@e(i_MLE*QU%$^$2b+F3EE^%,+Egrm4f$2<Q*Y]:4iNpj2$!#FQ'>
%h3%PN2]Y9!SK&7KkDb/N\=*n*kN878o8Hi\(Xk*:bB,'uGKugT#9J?.q)Y+=6^^G]1S&S,DtFat9kXIP=bJZq+=F.B)NV'lc@7dM
%K7jNp]':E(-BG45<b@`R<ZQi^5W,+s(podXr1UG1CX*fSd_2$.o([Olr!/W"racfhQK]7Om3L\GIPW#/`m&T,mYooNFIl?HiF5VQ
%C73@Xkg'"-Qqe?A]BOQdc?,0$2)K54[G:#W+rAFEjq"#R=EDbYS>7,CQV?h;s'AAH,9bT[d4*/r(N6lgE2L/t3X&;rijS%fZs1iR
%Tecsic9Y'H[iAuLou-S8Z5]%16qluc2hlX"5TZ*Ed?.1/m3XW@H!G1E)7:54W0(8,1E!cFrbOMR$,)8Q3-l&d#XdG7"t.c!H4'%_
%1OnW4_4#G,PLMpYa4DR!h\R"(]nNgG3iLSB(Q*ur-o9is*T`AQfIT@_pV6YGD`[SZVpj5P<R%?If0WE&PjtoeFLo9o$[$P#g+@=D
%E-5YKGOP"@h_]W75ut^^Y?%O!2kDXi"[,6XLC$GteBYMq1e*s-8-G9cf3*_SQt]7cLWeajF3\58?&'>Nc8MdDp\oKnFBiCN:MELd
%1XqgZ6>.pm-Z.G>Up8:$d2JJXLHAQE>qFWWkR>q/gMD"(A"o1'e_KN2]t[pfKDLjun8@IInanYlqK#&E?+Q4icrVb+*J`^.:<4h(
%=m#!7*Fk>C_;?(?4s?3M&^0mcb3Z.G2<Q*WMf0ESJuP\42OhU+)+&=R%Dbd;AC!Nm#A`Y!ZgV7XdcZ+0N@95BV;<&#NIYR`5Y7J\
%-q\E;,Y-uBdQGHs"tS)ti$j_Go#Rl>OHGa:9]9RgWH<J+reHSH6bTVPS:_S[#9%ri[FL+\DuCrdQn!lQs"'%n)!X(Xef<.&+q[fK
%L_iL',!5#&bf6<`2kC^];-_H^MX)IUF-%3W"I6ULf]p>eY@!kD7-Qn21f$//9KLSfn['T6.fKOn@i9mL(/ZBc,I+aF);15TeKdIH
%$@*)R_:.D*oeM58!<<Rpa2[cr?e6QKEukI!p>us2PftVpbES_=^5rl+fL^1FXBg^I:GR_E@!FI<,)&h\+TI\-7D+o+@uS3BG!$'r
%7Y\j"&KZpFB9ZjX9K3<V*)^E("k8!a"!jZs!S[Wn,V"il\tl*P[NAeh7GP/tGQGrTZ@NMkn89K?D3g?e\Q=>ad$:,'l'd.8>!`>1
%J?'A9:FqnGn@F?-Et/=,dln`"p.+FdC3gB-.ND%:rI3ao8BI):Sg6fI-m<_^Q+j!`1ucYs:r76EXH_R$%3t'F90D<hC=A[R,#VCT
%agY0M.Nlk:oi`d'\R!OP7)ssIe/)`<Qk9DU:)*Z-`pOC%8l't67.D\R.2E89Ze8]e4<iTWB-H/UaBX3cl2qgE5/[Ki81<=g8ud8`
%",5D!QRK"O.GmFbBZecbJi"Ep;gS5SUM!MO[19ih_Lj(G6\XX8V)^Ck^-7e@i2kmq>$r_=%7Vgrha$kMfL.P"!tp_9Ym$DAJSU+H
%?+pJO7u"HR=X)kDc5e'$3ZWIs8L6WU2%13.BH4lCK#OPj'@<[>G\m"Sl'I7Dfc9<(bJ$5V:B8O)hb^RMnApL,,aF@M6O')="$6;j
%CT'QY*`hqPn",</R<Ru\)XG-?WXVu-,`5fU2=M%C9im2s.Zm3h)@KTTNHH2":scJd$a7pr"7&l<-]4ps#\h(I,XF[;72bFh1hJg&
%A9&YOj^LCANX.=YFEf1$#^$g^'],p=lbM#C6E\DI$n1ks['Qte5eWWOPq_idTS!'>AqUd0XJ%^L/+Pq_=?PN!22Uas/<=RDn?js`
%f[RX%TS\rIVOFg'nL2L.1SE3Am,U[ESs=LuO3Tif<L,M37Khr)MsRO)giV%hdM&O+BW):\:NX!GAf*f+=pB8gc3'XV92/RmA7C-!
%\BnW9>W[S^Olu0o$]*B\'M>;YJ:a1hAfOL64Z0:U)/I_XG%Bf'n]j=/hTYO3*a=F5L>FZo?)G/^D-]BNVqWdB?06tk%EaaD>ktg9
%$-VlkWZ)h%p*c(g5(Sis*ZhcqGojjl,54'u\"-*>\MbUZ*<j7$AQX"oi@Pk;,t]h0@53X>:ec>d(SEk'8\rf?8sb7@TH5/INq=LM
%iaf":RsrO1":TRlH3U=7VVrc5F+fV]M-G%'G*aWsW!%S/<k)NU,0tnb1KZqP4";N5.<4T7%TO=h7tG_C;RZ(MkU!\<d((Xf\.@_>
%_%h6GA\X(fWrC[Pj!CWRWpNBJ3nqs!l+Pj23!6G!O>A-90faTeXVEG_r0F'I6=.:34>gp2X.T"A?nL[gC[/\c;Vq5?#1]4:URonq
%p(I"YdRX3`9#]e$iZ['YM?LPV7[0=sQk;4PrYi2=q2?!%M_X48\.Xo(WJZ"?ookU;J<`YO>tcu@[6T8>_YF_am9A(Y#A;>D%V;cl
%TG=CCWS`]o/3Q)l'EpOo'a^FXgFC&ZH5VW4YoWIC^^F0m9`J6STu[4j(bEVf";VhA`o^^q"LCm(7I^d"d#\TTJCk/l">QOX#Q$Do
%erk9.*$u<2+W3oGBN\M3,m7ZEA6r_P^^O0*5UtsH1WWq&`T2UjAUoeL&P+q*P:\>OK5]*<PI9GXAY>9F.+Nlb-s2K?4?-!.4ZQ!f
%ptdq&?[SIE'2jpW2#<j1q&\[qAJC9dgto(9PRO["6a%kW:1SXGWgEJaD\B<N)3kEmp1DV#a5iZUL'?q'b@6#RZ@/\;GKpL`9#*5k
%-F]_.1:aadp7[(gSW?b"nRtHTp/u44W&oeD\0]S^Cs8s']e)jtpm(^2pp?D^c!rod"5ollbKh.Zfr;=1Bnf4!*cJ*!ncJ98>BG*<
%\]I6]@ISmqJF/7S)9A(*R[ggYg=T']gjZC;3D-:HQKdn/"4\WWbKo958A'SEZ^hjS[bLMoGj&B`ekY$gmWW6B'Y+D81'81-0[)4i
%1:m#N_*W\JNtC*>IGQpW8EcmM$Vut'.9aAZi<]h9@_:ngI24e+J]1cr4ZFf'Fn$%2;KO2n9IG@*)c7AO:1)bGJE-emfbA[>nRLa8
%^]2jRq/:3;RRlA_9_?.V6WH&ZVrO=Y'Nh\QR$l#o>.@[cq4n)X^?@F(A1_PSYrd9Y';ZOWX2,hCrujI[&L7WFj(YoGBXo*$38Y9R
%!XH*s1$H/-FZ\_Fh+sU/O.tlum]:miTua\b<W;\Z9%6BoA>=e+$Ou5XpD8uU@%pNH"V%`Q(lkO6j.om;<e/Yo\\u?@5XXtNK-!IV
%hTgPZSE_tDbmL`lUj9&.LITeYVSD'-=.t@0Bn-h3P;;PAO0eY!Oi'<0KdY%!B]C;eR0FFej'bG7#3isR9?khV*[ZfU@1eO)F=qk#
%OSKCp<GT%.W7iBj+UMcE!6`*KA\P*9J1Oe^djO4cf!TSnR*9jD(0Ph=*BTA1`U?)*5'R.5J0+*n/8Bb;bU'b`O?GE5IB"Jh^k0"9
%p.?k>7Rn5*1lE=r*-/?:X<[Rh'4@"WZ#L7o;KpEp=g]/dN!ZKXOUa1(Lb`L89Hj[(pd8k%dS4+5GWlh;\/(0I>H3Gt#gO1klLcd%
%k#?L#;jb7P[7=b#ST1MMhZd[rk4V!=CPj-<=Adp"gG4tfCn^CeW6:XH8UTh$h)I#'?Ra\AhL\33@pP2f)GJJEB"3%m<Y3pp?WpK$
%NtTb6`hQqJVkQiAJaEruTY[W4>_k8K*>;AnWp@&$RB&+/56>SVgGZ.C;:jBmRsu#fmNRNPaulOAEWD$W%97.d_?p>X][FAaW&F<L
%3>k/TrZZLGJ@6G?6>d7h#CaaY.?"p)s%+WFZn%fJ=a.)[Lkg(m^1o+fKc\['c("g&3Q!pN[](%SLI3&]^>k"t`q;$5?bOMW`j]L9
%T9,-^+gU#b49Fl^<:qZbS0^gk6XcgY4#dRIG%!Lal(8#)S":T&;:5ARAl^`4c$PDg2<Q*W$bLGXo([Olr$*FkZl==sEUJZP0\A`/
%LBYfRTq+0Pe/RI0iR)]nm#i\%?#,Sod]]<:r!kS^I#Q+1Wf*Q4hejq&c%'gHL#1u5h1sarL:d`n_i6Sk[QV:N;b2[*aa'hY&\7b5
%D2-]5K=9`FBUgi'i;BWq@3:]>djZ2UEh`'f`C,;g#JMTt_90EY#km*D4.V3F[$ulF?LtQb%k6>j7#]1<,Nh;46u]Rm,^=?uLgaW]
%O[&0%s)qlXEqSNZCrMWCVtJB72K/\^O>E!?cCO96"(Co"2:t"*(QHA$S@8tJ;I>80Zs/<Z?Kp.1#H!:sB\^9BH2c!V7U\%5H81E%
%A1cF/]&IbtgfAdN5`s316fLg-To3V5l8;n;o8qDV9uD4'4`^Os9Ht\iqq+V10sC0#6cC'T-a'mT==uU>'`JuX(+uPKo#>)Hh>)LX
%N\Z:EDB+\.7o<=IgmNNdLj+.P?0jpUYPHnBLR+_UC-93O3WCUs#jOWI$;lk-3;U,[)Mqs&p*Kjq%aeL:,.iCSk`%m_ns5q:0D;(J
%^)ku,62#lAX:XZ/+,5&N3*k"%2FolkYP*O2j6MHa):\+.etIbeF\HuH>lT\(,a-oA_iaQ1&TNH5/KS#pYN-DONPeS2$/1n.K-_k*
%-BlNAn%ZMLA;1AcX(_\fN`X\;gqi6*3n$@$85-kSL-`Fk)![AmS+D`ih6"S>Hp)NLUTB)4h0fgO][GgQTVN#(F*$BgN!$@B/is#k
%=pl-G8U:1eL@0FRgIEk_mp[DtSk"]$qf)gl(D7O1#42V(W7QB5c9k6&%Q,;7O.:]HD#LhF`e2ijhGIP8d.3N<UY=ek>:B%pWahp#
%5B@aED*9<?ql]33k9h_1=Mh2naI]=r]A4@i]-+4=FS5UM"6mLn,_RU_p8!eZP#L,i[ML0,E^]+gS/q:rBf;7OlE,?V1l)4$-=`u5
%6>^PJ9;CcLiQeiC4h,X`S"F2i$#p\HBE$P?H>R:?GhjJqM!>*YOQb7QG:pF-Schp8.#I\7$@9V=[QNX4d%.tlJL?2qi+F/"Sc.iA
%g\BnIARE2Q_@0BR#21B!e86t)=%<.@]?Ef@3T0rVqL#S%'`p_=TmAQ&9%%FH'!Qt"2;A$2Z*.H^*TrA"dU2\pLk2:ol+KeXT[%37
%;=*nWXHm]$9TaNB$#e1#ZAuB/o3S(<W;"_`jmk;SRrY.Z:@.(Y,#ub3/f,b?,o[mSa=:!M-.msN2NN/.P28T5lW(?ba\'F4Dq0uK
%LcfrG;Z#`7nf8XhJf[l#SCAA*3(/HXI396s3M8`$,'pldenN#Nr&ST[^)j8%kXGigSnlg9*so#r(04<?_4e%A9aD=^`a9+4lYtcs
%Q-[Nd]qDOYV($]<N/J>`Yc)_:2*"fQB)TecXJ@)@W/R"llm(^trN`#BT;iU$;M+?!J6O.!()'UBP#"GP)g^qi]&*3:`-CqNX!f3"
%LK_i[g6ZHM^rrD#ia7"X>(+9\YIp.Pr[3K$<(`KZ6:CpOq87aTMB8LVA5g3=as.%)d836+SP+S[OqIA3rm5Xpd$mTd3)ISCc8=@,
%NJsFKThn,8'gf"g,&=mq.mk#'om!\h1E_^qMaA8tcTp(X:IO>qLN?5'5V^H!X[>eqY8oK_+iQbu?EX$2nXH!^SVZI%S_ku=F3k\[
%=1-\6Wglu01)a)9X4_.82>cA(35R&TKo_QSHfRl$8>RC%>AphA(;=6sGW";HrO,T[+),[AT01j)Ctph:f21j5P\J38^6Y?TjHajS
%@Z^XVLO+;gkTS)r,,#30qGHi3H%40+rd;f;e[oggF=17#-hK$LR9EWi)nbM:JmEM3#$LhH+A3+bd%o6o-aeh?e\g7<B0"sZM`o`l
%Y\?F5j\o-&8UDC+Fc'Y0EMs2K?e(jRrO8`tV*2>tYSkI4G1[o-9U0<],i/U]p-Z#C':q%@k0V_?XqXC?KkGM8n-*l*G]?U#\*^=_
%b2KHob89]&fWd>0R45ZoqV'>M9%^^p?7e:7Ws-70ZBjdMMAM6J9jL^=RTKBhKkIc=WXjf9]FOm0ota!"e0<c"a3]b@BTW!X;'&Td
%_LDgUK4%,>nE:TUd9V/;Na;6F;4^Y:_NXg9MlK^?@o6M[?_qH5X+b39[IE5,-fNc*>h)?l?%"3[;7*Bu4JSs2hnT$GSg;=';'/.Y
%l@WL!FOcsQE..bZ4Lc.]RSHT"U?U#eRs,<(K#Q4:Z)WF,RptP);b7D2W")RVoTmrTaWp(Sq!UIjE"'+,@)JZ$Xu^f4=H7>tP@rCQ
%n>&1eU?^7h=B$)?qJ(Mfn;OpoIZXEanS#=X.\fN=*j7bbmcoF!XI_iU(7rq(_XCKQ:1d^)qB5L1mCMa@oV+P>oE4dMcF*/#Xqi).
%LT-c-C5MPOZD]f@XnH$.cY2iJ+840mie_[Y?B`#b$ckg<VD?F>&!+F-4](*[Tf>DV>or:%?9Xr>mSL%V(tt[.[o]?5\5:aj5/!md
%"Am&J(H3"R(N)jM(u"f'LZU42hrNP2j6Rj/QAt_E'^h&FCY@*o(OA@gpXs<jr,>5O6LXL4BX)D=9_[\tPqG%?W(Qf,7:d;_OYp88
%Ynk@io*Q\S,q9ui)7u\cf.X.fhCh-6#=UT"If%;u$brq=?W4dZ$"-MQo>t1bR@+p&/Q#QV7)q[r`VIFCs2kKPp<[NJ#nM*0QET.A
%(.):p!%%P^EAO;4q0)8TVYaf62qP3Sa\BD<pq!3+1I>X<njPGlX=-!VYVZ1`F\5i\X6^T0%8IU6l9V,$8$d_bFTS4(bu@WRes-CW
%nJ6dBj+/$S[#d"-R>M6JCGH#bYm?P@Xtmt%#<tG756Q*pd6ST]J!][(Cc!_Q%B-a'X/.[*[Rl>7)$PMG<KL%sCONWl9K#<m42IZD
%#"<Jf/Yn54M0KOtZq(M$I^FD5eO?>Zll7h<a4FVL5ijP.U4gC"Td1gBbtekLjl%M_XIFfr1bO2=GPZ`O7+L;?]?"q9Ke%Er>=9n$
%IN<reUu%ml6[5t8I/tp'&UY'QTZC@a;b?bbJ9roP9gGNdl;TeUkpXoc9C!eQ3G8<&SLo<24t%Kf3AF:#&seDB;E3[n,9fq.6si#Z
%AhEG(ll,uO\TX2f#>o"N$<gK:SMKNuMPB`jo=n"#TCmm,I]F4p8T"U3`BI.h-K_H_/ej@oW`0%",3PPkU@,YR`ZU4Z-s09W6SZI%
%[ak?>3T,`WL1CqeOE/5S-Yf0d2Uo>%LmT;)2[5sE4GC_Kj%YQ@O+H!,O+\V6B69-;DO*KKU`(LJ%qH<>H*s&TkqZ`3CIdu1q@Zg6
%eOgR[R]^=XFe:'\jqajuonlePCH,2B$-t>`lji)$E=`AR"B-m@0</SsQ;D6bUi8EQ4umKh>,p[]<NX*h;A2KeZVUg'+s-<T2,WE3
%[@u/?8&PPh\1pNSX,YMN3Te4sZ2@/f&Um4$#g^YIbaoq%?)L_rIJ]neD`h3.qrd=k/2')RE/B[Pc]`;!7usBLH--VN24DStEcuO8
%3N[8!dgD.J>W1_?N_%8MXD@b*e-`B0H"mMIC/c+XTe'M4<KBO1['[]D:+I<!?$&J.&DiGae-\n4&jt[?R.rFXP^OhT#X>*7CW2XD
%l2Ua0D?J5<=jDuZs4AWX-m<$B(sSaqhAFY6/D$F@!^&GN&PEA&1nNcbE[VPmkpkr5;ggBk3uYUJ4&Do!0k8Sb`jh_GI77$Jaq^:F
%B+j`r0_6W[Y+Y=`g/771UL@VVOQ,"b0+gN;LST'l`LsN9%TU%T`1ejulJ#,dJc-Fq>4rMC(j7\@7K#J'&.c.Y&54"HYQO,+(Gc9/
%D2]F6"4aqe)$if8)`a(#a>QYB):,Jqe@r'I9`P^pF'"Ttocj=4F@.Sh"P"fhJ0[lOUhi*=n`eG]8?_r*O_EQ?C(4mLN-b3p*,'FM
%b1=L-5Z8FDiK,q@$XBI>@I0J!h^%-8Zck^aOPcD&X=kPKrRMhKSG55>P]B7;9<+N14;s?hnMFdp!&B\ikt3,Ve(J/Ak/RC26LS(i
%<?+LrIuuL[&^'6"O'nqu:W,QAc+=ZI<V0Ze?^2BCMV5&k:Q>^N[lVMVa,NAuEH,kE>$P@'T.`K(+q@LghB1kSbK&5I't0;3OcKD'
%X2'S+6p.4f^WAn.6R#qUjB[m$c66_%PhiQ2_^Ae1#d:PVk\9o!19cbPa]bCING1ae,3u6R@%S[$PQec;&I0a@D^&scQ0m05>435d
%.>#/7h8H`P$^piBWlnY%$YAKq*!I2j*T@p,T]:*%G]#0,X3H9:Z&CQ7EH:;hO)(7!cD64cg$^?sdW!8GkQUgFG,Y(NOdH2hK::Cg
%hrXU_^"A*.Rt/Dlr+%f3n`1NBMg9E;j>ZjOaO>8ukMDt&JPL8<%^K4gEL[Hf=mRD<rT=cJYp4Q=)anT#j]b09&iZB@roK$7aD/h\
%#Ws/=JTKT`A@%YBDWia*C)?'r9+[<.#*GDL7lgRA=fc3UK9Ohg!r_IpG3DS90A#/Z)A(623<gXf%6E037Q%M96)BKT?C^51K3CbJ
%V\_m8kdWA2D<'DJZTs1E]$FeQLJ/RTA:qs_fq>"Xq.iL&Mi5Xj`*JDT\P.@sKI`=.5UN(VUA%;'p#)NO\4Z0``o83(f+kDFM"$X"
%lo&NmFSk.LpRn]E:J;iFr9#H7`$@`/BTDmTrKqN%FE%n\JoIL>esP@VpuOO'5,%rK;YSBK<+P\DP,6QY&XiAIn%`f&3A=rQ>9\/C
%2pR*/VZs'CUG"o3*,YScr>]k2M(D2bd0:%JVecb#d?nndl"Il]N^CXN;<U`cB8eA;'%D4e5@8Gu6p*kThO^P<\m:s,qaso`I0FlR
%q^&r\99Pu?NkODL,F-qKiE$2Ig,RXJ^t$mD0e>t<P:nbdI"=u^*f[(i'(sbB7-4u+ET9"AWC4?@E?"OLfLc*#UIUNi$Uk[DE_$Nd
%1cI_\qNhYuhHB_K"I"lQ]g#-YQS/M'+;Z-:V>hHR%_I+*5JG=mp1`a*h?4]'+iV<&^gr5A%akcaD^%nE7E0B9k"s"n_]>=:dbmK^
%Zq4Do[p@.6^=7kW@=n@r#CVBo0oUp@PaaVZ84>sCob;59en^jee[.V$3Vqcj9i&hFV2PDK=rj%KSS\G-WcT&n]ua)UK`'P$jNU%8
%KLo\AXo71\Xh!o9g6tC!0l>ZiSr9R1c6862/+$ESko%<+aKHW7*o^]::CWg22@GruI[B&$H6#Y'kf*r?daMC]^>,KYS]`j_6T/H]
%3O[4q5dn^Y+JC7S'8#55q\:cPnQ>5#rmPpCb@>JJ6Y,7P5/!Vm*Mr@i5'\'finSNL5?Uj:%5+LmI7\pjF7\]DJk=uLX1(S*^?i;Z
%-FN<A.>>EA/5SYTVNb\nQD"CeK4nK+;]S1^=4+ImQa%3M'C5!9T/"`[T]M![Iss_XgK%C33(UU-()9:;_Ph+L)i@_+NX!u)U2\.^
%`ZVZlA_^*FFjqJXc^,W1`eKSA[mqlr0gtKB<ius9ZNc?Y6.Z239:p(6WWQ82](IopP@X&\FeTq5_/U$t?0<3.W/.D,*,?tjVLp:I
%mB=>\b]>OLaP4_DTfQF9f&=B`,1aX#1`W=8kS1(r1&fm(les$Cj`$RG[URJk"CXnkh"9AUXH"nV-/>6]ct%9mSlLR:dC#pa&rFM\
%ba:+qQ_pH+bl`N.mV=p=RGnbr%WVZc:d<kW.Qq$)VB"CDL,IsL.K9.@jM*PqB0o-s*Tf*9OoOSb*TBr12AB_i:gG@jPB:>+<B+&'
%A?jN1ZL/ii%,pScE*tk3@C<_u*+WT*TtX?7nb'uulN<c29/!S+bbA:*$Z`OWGGWe)@MjBEMf+b(HUN0'MWiEA*66;Vh*\40f26Bn
%8!O^8%T\[1m+hC0p50R9b![%dT6GC>F(i>jO_(m-(&DJ!7SY*GD!$2=-jJ(df@Cr&jQ+]P-1\kH\(\n.(^ST3pT&ifI*b9i:t0I"
%c*]>=KZY?Y1D#7`"&[G2]sbA=6>T;*L+8+b8&g%CJRF7NJ[ETc']%"WZnsu6[Lep'K+:?FSs2D3[d]5j$TG[@.;pDoTc<10@Nn8)
%>teeVgU/f3P1q`(kk'S!6+_sj\naK6o?\,78';Ug"64k7'>_#AFL;Z*^TY+L]AgAGo+lB?Z(iY%ZOhaI$Sg!Y^:*/I-$um.iUHNY
%p(+HiF#9:lA%)t9^"T5b,cVDnQ8$P5E%%;[`TsPn/#]mq6'[\@O2]J*o3\b`,kN__Z06J?9(a??+72fuTo4=IlIB3Fo?\,78(/0o
%"64k7qnPSt'X%^mN1&toD.XHD9&CRY3JD+nenQ<7m09<CD@LF,6V@&]+Ni^0OmsN),'^/0ZOd.]CFH.S[[TSm/RAnIOJCWidQaM\
%_Tcmfar?0,F(P5MbTdD$Mg6jg]106Q7ig&@b)Mc2(ZQ'G=*Z^cTd:qEL+/)eY5dLiJO^OT_>cdes)%.R_mEW;K)69@b>;l]$jF>]
%94PR?`-tiK-@;pdVLOh9,c&'l=2RjV2hSp/2Ob/oI^KS<S5<U)e+REr[W&PhP4Fnn)7jheBH&pR-bYFT/:+otlLU6S)t?ZuTo4%A
%\naH5o?\-"677\p8&i;,guFlUea@2HGt1`_YWr7gZ([=4D?cc\]-r_Cb5C3rin<$[YMXP@a8=!;%55!Q@IniS$$jFXT^RQBp<_Rg
%%hH\L\q8=GokIH`H<V85XL=Nmmr=_"$q6Ps3lo`S@`?U[-h%Ecraaa.7(kHmF1ZuA?&pIfh@sT]DZ/BbEH,!3^.O"n2F4PB'ig14
%#'jV[-aeT3n]P7"4&62hlr?o$L>&)O]IXgZq6T3g05eIOqj'4khc)Ao,;5?TqtXVkAtDkoW7s=ILgR>G47M@J"">b^LjjdO#eJ>X
%g#,.gm>@5SrdF,cG)>-m"7]iaPGA$O$!SMOUJ7#pA'jTejlD'd*8'>7'f%>_`DEX6M6NMQTDRMiG!6DHWNk@=&J,[q[^-MkLCYbg
%&.=0iXesOGi'rY)I])Pd]VR[h3k:fRh`CEoYHbh)!fOI4Gmb=*\YaAO#7B`c#JM2!YjEbJgudd\T`=qBBA\GhOY9?0X'k4q(lp_X
%"()OK^jhO5i;*0nkWb\:@0[.UnW30n3jf8oP$+l1JhI?q-LEK_=[.B=rT@O9J9/J3rj/3SYVnRp#B0tg\stut<00C$LC([W=:f@'
%<>sKPO.cCJ+0!8JkrCl.o>dD5P5UFXkaS-85Ctu!)Gj9_>\J7!"&E]aY1`LD,C#n^OMSHn[.qt[s)qkcdJ<;WGbHt`2J?>D<@Mar
%PFA._G(0Drm^+U\QQ+G\kpD6+SY@P-\nFn*i`0hVnGo`<G=>ZAS>*),Dq[":ofDUCDRA2l3a,0R*%e?Wf'K7I&)^2u%I9ar'P76o
%/'i%]lbin8;d+h=-nRl-UqHEFB"^r%J/^)D.)-qT0/o-:Ub^kn2UuS/fMA%W[W<tFimhFfO7tEu*3)B1>sj&BPD]9s@8PdfZiF!6
%YkE__?@8@d_eKEBJV]Ipj:oFcM_"\X@bdE`oM4!#DtDO\'<#`9Y9F=P5WZQ:!n-"E1/_YLOo9+hhjR`);V]2iO?*AsiNoM8`6^A$
%MM>qVRQm:cc_bT.I/d)@l*ma488m0=ep#D9#&_mjK@hIbSbr<s>b>r`QD:j"./.3V\n9RWO5NKC9ei6jS=r'I"g2InkE"OrCJHXF
%esrJiD\qOS>ou:_4/FsVGY3%3nt[&bRU)OMJfCh!9kjMgRjSEN8Ec,`,6`;Q6LKVV;55LTICuW3U?&[prRc\%eb/SK[S_';i$^/t
%Eg.>!>BO:;@6:<^"H1]+U%R/oXZ"e?:Y8ET.=e2"oZ%PIi+dC_rIf$PSlBIhdr/M-&V^WoCRau/??b=@AkoKV9*YrLjqOo42WrhU
%k$1+)=br6qVYjKaN\e0o^S)3aoo"bPgQXpP[Q(anDB8XLCEo!AC!BBXU*b-@UkJ)#\>NMH/$d@?I^UM09eAa^mXjG6c:q,j*+([_
%MX5r#T.T3-WEUH/Ci)T>LCs759<i@)6Dfm??Y6<NE.5LF?Am1!Vq+Wak1X&^5D#KRRVEh93DDM#$X7JZNuu2td%"keTfGiL?S9F-
%\3><D2_oHKEFe2Wjle8>[CJJM"?iFh>mre*j2XTZ'\rBGjEli-;4U3rID.5]U?/aprRc\(g%G.c\C#=8i+O\GEjQUlRWY5eJig*2
%#)h&1U@m8p\OP2kO5NcIl%,V:eB!bUTPJ_!rWmDKIdFAm4)..4IDSKT1Sh0Vo4mH>?ZOW!+kqZ7Il:s1g!i?Qi\ob>VY;TY_XE9q
%$JeW[A=N)OcPH-'e?+eHBk?Yh<=1*60`PBtUZ;+M]@jg-L?sMtT.L@O;[ZH[]:^A5]O`apq"'&`3Ccr/>u:7$`On'Nlf3c&N!%CW
%lK,7n^hk\C.--aJk??3iqL"dU*3D)8\K<o[27l&%"?0M"hXRu8[,l!RE&HrFIfst!F67JLk.Kf)].hk#qY1ZX.F!.Y;ju1$-ac4k
%m/$Vlgh;,s6AZZ1f%[q-Rc(>RrER21<KA1ds1)2`:M]6Xs05KTfBgq\#Ok&q.`+ZuoOt#-P\W/Bo]Q=gdP=hlZqQV[DjPLT7[G/Z
%J6,@?#TG)=UQ*c$0%]I<UBg9Tlc1WB\?I$@K2l01NtC*G+]t`j4,7\tIf<\=Z\a)f25bbq\BY&`Bl?Of1?X,i];4Rj*(.11J,[[d
%8=I-_nM`%aK40b+j&P07722NWVu7SB1<;)V("jAFq6M@JCMG"bE>K<!MR,NR*N+m7/$f;hR.Nn,F)0si_>>_X@2H1nJ'I&=aPP]A
%eI1Gm!g=">&^3c<@)g(e3LN'$4>Z?N+a00VY_IggT3Oa^hT0n)PF`t:)eTMljDGkRNY^9O[4$;XmsrNtL65EdOS7fh$&JskGXo<Q
%\-kj49g4H:NhbBALtNp\=f(CP5"mQM[kZI^M4>YH-Qkc7!?&BRaM?>MCO\^1N<L60X"!G_9bLM.%@"Di@aU*D"#gf0\2ljAYc2mn
%aGnat,@l<p5r7+,;kF4@,==@,)7[f0^t!^GIm]/(#:d3c.IGMg)AahWgZk`LThWm,BnE\g9Gpmb%TL-LnQ;e^S[05,80@%(D'Em;
%B*rr&9lP9)[_F!.`J/qDf9#^g/r;NVhYt/1Wn0J*^jl?Ub5_9ErqX=Crp]sdnP;CJF96sd^\m&_rqO8.kn!g]QTtK6Du\slrq-g%
%cQ>CMiLg,f08ff)J"M5eoM9u5j1kTJ^\m>WTDnN`qNq3u#X4\!r8$9/QiHl2r7f!^rrLDj([h~>
%AI9_PrivateDataEnd
